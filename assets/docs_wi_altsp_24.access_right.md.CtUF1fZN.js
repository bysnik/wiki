import{_ as a}from"./chunks/altha.CheLpYGI.js";import{_ as i,c as e,o as t,ag as l}from"./chunks/framework.D4Vqf8I7.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/altsp/24.access_right.md","filePath":"docs/wi/altsp/24.access_right.md","lastUpdated":1756449081000}'),p={name:"docs/wi/altsp/24.access_right.md"};function n(h,s,d,o,c,r){return t(),e("div",null,s[0]||(s[0]=[l('<p>Операционная система должна предоставлять возможность запрета запуска выбранных интерпретаторов в интерактивном режиме, отключения возможности удаления открытых файлов, а также установки запрета бита исполнения (SUID), распространяемого на дочерние процессы.</p><hr><p><a href="https://www.altlinux.org/AltHa" target="_blank" rel="noreferrer">https://www.altlinux.org/AltHa</a></p><p>AltHa — это модуль безопасности Linux, который в настоящее время имеет три варианта защиты пользовательского пространства:</p><ul><li>игнорировать биты SUID в двоичных файлах (возможны исключения);</li><li>запретить запуск выбранных интерпретаторов в интерактивном режиме;</li><li>отключить возможность удаления открытых файлов в выбранных каталогах.</li></ul><p>Для включения модуля AltHa необходимо передать ядру параметр <code>altha=1</code>. Для этого в файле <code>/etc/sysconfig/grub2</code> в строке <code>GRUB_CMDLINE_LINUX_DEFAULT</code> следует добавить опцию: <code>altha=1</code>.</p><p>Обновить загрузчик, выполнив команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">update-grub</span></span></code></pre></div><p>Перезагрузить систему.</p><p>Модуль альтератора:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alterator-secsetup</span></span></code></pre></div><p>После перезагрузки модуль будет доступен через Центр управления системой - Система - Настройки безопасности</p><p><img src="'+a+`" alt=""></p><h3 id="отключение-влияния-бита-suid-на-привилегии-порождаемого-процесса-в-графическом-интерфеисе" tabindex="-1">Отключение влияния бита SUID на привилегии порождаемого процесса в графическом интерфейсе <a class="header-anchor" href="#отключение-влияния-бита-suid-на-привилегии-порождаемого-процесса-в-графическом-интерфеисе" aria-label="Permalink to &quot;Отключение влияния бита SUID на привилегии порождаемого процесса в графическом интерфейсе&quot;">​</a></h3><p>В открывшемся окне следует отметить пункт <strong>Отключить влияние suid бита на привилегии порождаемого процесса</strong> и нажать кнопку <strong>Применить</strong> Исключения это список включенных двоичных файлов SUID, разделённых двоеточиями.</p><h2 id="переменные-модуля-altha" tabindex="-1">Переменные модуля AltHa <a class="header-anchor" href="#переменные-модуля-altha" aria-label="Permalink to &quot;Переменные модуля AltHa&quot;">​</a></h2><p>Переменные модуля AltHa со значениями по умолчанию:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> altha</span></span></code></pre></div><p>![[sysctl altha.png]]</p><p>При необходимости устанавливать эти переменные автоматически при каждой загрузке ОС, необходимо добавить их в файл <code>/etc/sysctl.conf</code>.</p><p>После редактирования <code>sysctl.conf</code> применить изменения, без перезагрузки ОС, можно выполнив команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span></code></pre></div><blockquote><p><strong>Примечание:</strong> Для изменения значений переменных модуля AltHa можно также воспользоваться модулем ЦУС <a href="https://www.altlinux.org/Alterator-secsetup" title="Alterator-secsetup" target="_blank" rel="noreferrer">Настройки безопасности</a>.</p></blockquote><h3 id="запрет-бита-исполнения-suid" tabindex="-1">Запрет бита исполнения (SUID) <a class="header-anchor" href="#запрет-бита-исполнения-suid" aria-label="Permalink to &quot;Запрет бита исполнения (SUID)&quot;">​</a></h3><p>![](&#39;/public/img/Pasted image 20250602125016.png&#39;)</p><p>При включенном подмодуле <code>altha.nosuid</code>, биты SUID во всех двоичных файлах, кроме явно перечисленных, игнорируются в масштабе всей системы.</p><p>Для включения запрета бита исполнения следует установить параметр <code>kernel.altha.nosuid.enabled</code> в <code>1</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.nosuid.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><p>И добавить, если это необходимо, исключения (список включенных двоичных файлов SUID, разделенных двоеточиями), например:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.nosuid.exceptions=&quot;/bin/su:/usr/libexec/hasher-priv/hasher-priv&quot;</span></span></code></pre></div><p>Проверка состояния режима запрета бита исполнения выполняется командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.nosuid.enabled</span></span></code></pre></div><p>Результат выполнения команды:</p><ul><li>1 — режим включен;</li><li>0 — режим выключен.</li></ul><h3 id="блокировка-интерпретаторов-запрет-запуска-скриптов" tabindex="-1">Блокировка интерпретаторов (запрет запуска скриптов) <a class="header-anchor" href="#блокировка-интерпретаторов-запрет-запуска-скриптов" aria-label="Permalink to &quot;Блокировка интерпретаторов (запрет запуска скриптов)&quot;">​</a></h3><p>При включении блокировки интерпретаторов блокируется несанкционированное использование интерпретатора для выполнения кода напрямую из командной строки.</p><p>Для включения режима блокировки интерпретаторов следует установить значение переменной <code>kernel.altha.rstrscript.enabled</code> равным <code>1</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.rstrscript.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><p>Переменная <code>kernel.altha.rstrscript.interpreters</code> должна содержать разделенный двоеточиями список ограниченных интерпретаторов. Для изменения значения переменной <code>kernel.altha.rstrscript.interpreters</code> выполнить команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.rstrscript.interpreters=&quot;/lib64/ld-linux-x86-64.so.2:/usr/bin/python:/usr/bin/python3:/usr/bin/perl:/usr/bin/tclsh&quot;</span></span></code></pre></div><blockquote><p><strong>Примечание:</strong> В этой конфигурации все скрипты, начинающиеся с <code>#!/usr/bin/env python</code>, будут заблокированы.</p></blockquote><p>Предлагается вносить <code>ld-linux</code> в этот список, чтобы через него нельзя было запустить заблокированный интерпретатор, тем самым обойдя блокировку.</p><p>Проверка состояния режима запрета бита исполнения выполняется командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.rstrscript.enabled</span></span></code></pre></div><p>Результат выполнения команды:</p><ul><li>1 — режим включен;</li><li>0 — режим выключен.</li></ul><p>Список заблокированных интерпретаторов:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.rstrscript.interpreters</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/bin/python:/usr/bin/python3:/usr/bin/perl:/usr/bin/tclsh</span></span></code></pre></div><h3 id="отключение-возможности-удаления-открытых-фаилов" tabindex="-1">Отключение возможности удаления открытых файлов <a class="header-anchor" href="#отключение-возможности-удаления-открытых-фаилов" aria-label="Permalink to &quot;Отключение возможности удаления открытых файлов&quot;">​</a></h3><blockquote><p><strong>Примечание:</strong> Использовать этот механизм не рекомендуется.</p></blockquote><p>Для отключения возможности удаления открытых файлов следует установить значение переменной <code>kernel.altha.olock.enabled</code> равным <code>1</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.olock.enabled=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><p>Переменная <code>kernel.altha.olock.dirs</code> должна содержать разделенный двоеточиями список каталогов, например: <code>/var/lib/something:/tmp/something</code>. Для изменения значения переменной <code>kernel.altha.olock.dirs</code> следует выполнить команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kernel.altha.olock.dirs=&quot;/var/lib/something:/tmp/something&quot;</span></span></code></pre></div>`,54)]))}const u=i(p,[["render",n]]);export{b as __pageData,u as default};
