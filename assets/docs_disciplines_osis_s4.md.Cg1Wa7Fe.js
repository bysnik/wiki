import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.D4Vqf8I7.js";const k=JSON.parse('{"title":"Основные правила управления доступом","description":"","frontmatter":{},"headers":[],"relativePath":"docs/disciplines/osis/s4.md","filePath":"docs/disciplines/osis/s4.md","lastUpdated":1758709944000}'),l={name:"docs/disciplines/osis/s4.md"};function d(o,s,p,n,h,c){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="основные-правила-управления-доступом" tabindex="-1">Основные правила управления доступом <a class="header-anchor" href="#основные-правила-управления-доступом" aria-label="Permalink to &quot;Основные правила управления доступом&quot;">​</a></h1><p>Объекты (например, файлы и процессы) имеют владельцев. Владельцы обладают обширным (но необязательно неограниченным) контролем над своими объектами.</p><ul><li><strong>Вы являетесь владельцами</strong> новых объектов, создаваемых вами.</li><li><strong>Пользователь root</strong> с особыми правами, известный как суперпользователь, может действовать как владелец любого объекта в системе.</li><li><strong>Только суперпользователь</strong> может выполнять административные операции особого значения.</li></ul><p>Владельцем файла всегда является один человек, тогда как в группу владельцев могут входить несколько пользователей. По традиции информация о группах хранилась в файле <code>/etc/group</code>.</p><h2 id="основные-понятия" tabindex="-1">Основные понятия <a class="header-anchor" href="#основные-понятия" aria-label="Permalink to &quot;Основные понятия&quot;">​</a></h2><p><strong>Пользователь</strong> - это любой, кто пользуется компьютером.</p><ul><li>Под каждого пользователя создается свой каталог</li><li>Пользователю назначается командная оболочка (командный интерпретатор, используемый в операционных системах семейства UNIX). Например: <code>/bin/bash</code>, <code>/bin/zsh</code>, <code>/bin/sh</code> и другие</li><li>Каждому пользователю назначается идентификационный номер (<strong>User ID</strong>). Сокращенно номер обозначается как <strong>UID</strong>, является уникальным идентификатором пользователя</li><li>Также каждому пользователю назначается пароль для входа в систему</li><li>Каждый пользователь принадлежит минимум к одной или нескольким группам</li></ul><p><strong>Группы</strong> - так же как и пользователь, группа обладает правами доступа к тем или иным каталогам, файлам, периферии.</p><ul><li>Для каждого файла определён не только пользователь, но и группа</li><li>Группы группируют пользователей для предоставления одинаковых полномочий на какие-либо действия</li><li>Каждой группе назначается идентификационный номер (<strong>group ID</strong>). Сокращённо <strong>GID</strong>, является уникальным идентификатором группы</li><li>Принадлежность пользователя к группе устанавливается администратором</li></ul><h2 id="управление-пользователями" tabindex="-1">Управление пользователями <a class="header-anchor" href="#управление-пользователями" aria-label="Permalink to &quot;Управление пользователями&quot;">​</a></h2><h3 id="просмотр" tabindex="-1">Просмотр <a class="header-anchor" href="#просмотр" aria-label="Permalink to &quot;Просмотр&quot;">​</a></h3><p>Вся информация о пользователях хранится в файле <code>/etc/passwd</code>.</p><p>Каждый аккаунт занимает одну строку, в формате: <code>account:password:UID:GID:GECOS:directory:shell</code></p><ul><li><code>account</code> — имя пользователя</li><li><code>password</code> — зашифрованный пароль пользователя</li><li><code>UID</code> — идентификационный номер пользователя</li><li><code>GID</code> — идентификационный номер основной группы пользователя</li><li><code>GECOS</code> — необязательное поле, используемое для указания дополнительной информации о пользователе (например, полное имя пользователя)</li><li><code>directory</code> — домашний каталог ($HOME) пользователя</li><li><code>shell</code> — командный интерпретатор пользователя (обычно /bin/sh)</li></ul><h3 id="получение-информации-о-пользователях" tabindex="-1">Получение информации о пользователях <a class="header-anchor" href="#получение-информации-о-пользователях" aria-label="Permalink to &quot;Получение информации о пользователях&quot;">​</a></h3><ul><li><code>w</code> – вывод информации (имя пользователя, рабочий терминал, время входа в систему, информацию о потребленных ресурсах CPU и имя запущенной программы) о всех вошедших в систему пользователях</li><li><code>who</code> – вывод информации (имя пользователя, рабочий терминал, время входа в систему) о всех вошедших в систему пользователях</li><li><code>who am i</code> или <code>whoami</code> или <code>id</code> – вывод вашего имени пользователя</li><li><code>users</code> – вывод имен пользователей, работающих в системе</li><li><code>id &lt;имя_пользователя&gt;</code> – вывод о идентификаторах пользователя: его uid, имя_пользователя, gid и имя первичной группы и список групп в которых состоит пользователь</li><li><code>groups &lt;имя_пользователя&gt;</code> – вывод списка групп в которых состоит пользователь</li></ul><h3 id="добавление-пользователя" tabindex="-1">Добавление пользователя <a class="header-anchor" href="#добавление-пользователя" aria-label="Permalink to &quot;Добавление пользователя&quot;">​</a></h3><p>Добавление пользователя осуществляется при помощи команды <code>useradd</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> useradd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><p><strong>Ключи:</strong></p><ul><li><code>-b</code> Базовый каталог. Это каталог, в котором будет создана домашняя папка пользователя. По умолчанию <code>/home</code></li><li><code>-c</code> Комментарий. В нем вы можете напечатать любой текст</li><li><code>-d</code> Название домашнего каталога. По умолчанию название совпадает с именем создаваемого пользователя</li><li><code>-e</code> Дата, после которой пользователь будет отключен. Задается в формате ГГГГ-ММ-ДД. По умолчанию отключено</li><li><code>-f</code> Количество дней, которые должны пройти после устаревания пароля до блокировки пользователя, если пароль не будет изменен (период неактивности). Если значение равно 0, то запись блокируется сразу после устаревания пароля, при -1 - не блокируется. По умолчанию -1</li><li><code>-g</code> Первичная группа пользователя. Можно указывать как GID, так и имя группы. Если параметр не задан будет создана новая группа название которой совпадает с именем пользователя</li><li><code>-G</code> Список вторичных групп в которых будет находится создаваемый пользователь</li><li><code>-k</code> Каталог шаблонов. Файлы и папки из этого каталога будут помещены в домашнюю папку пользователя. По умолчанию /etc/skel</li><li><code>-m</code> Ключ, указывающий, что необходимо создать домашнюю папку. По умолчанию домашняя папка не создается</li><li><code>-p</code> Зашифрованный пароль пользователя. По умолчанию пароль не задается, но учетная пользователь будет заблокирован до установки пароля</li><li><code>-s</code> Оболочка, используемая пользователем. По умолчанию <code>/bin/sh</code></li><li><code>-u</code> Вручную задать UID пользователю</li></ul><p>Если при создании пользователя не указываются дополнительные ключи, то берутся настройки по умолчанию. Посмотреть настройки по-умолчанию можно с помощью команды <code>useradd -D</code>.</p><p>Если вас не устраивают такие настройки, вы можете поменять их выполнив <code>sudo useradd -D -s /bin/bash</code>, где <code>-s</code> это ключ из таблицы выше.</p><h3 id="изменение-пользователя" tabindex="-1">Изменение пользователя <a class="header-anchor" href="#изменение-пользователя" aria-label="Permalink to &quot;Изменение пользователя&quot;">​</a></h3><p>Изменение параметров пользователя происходит с помощью утилиты <code>usermod</code>. Пример использования:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Эта команда поменяет комментарий пользователю&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><p>Изменить пароль пользователю можно при помощи утилиты <code>passwd</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><p>Утилита passwd может использоваться и обычным пользователем для смены пароля.</p><p><strong>Основные ключи passwd:</strong></p><ul><li><code>-d</code> Удалить пароль пользователю. После этого пароль будет пустым, и пользователь сможет входить в систему без предъявления пароля</li><li><code>-e</code> Сделать пароль устаревшим. Это заставит пользователя изменить пароль при следующем входе в систему</li><li><code>-i</code> Заблокировать учетную запись пользователя по прошествии указанного количества дней после устаревания пароля</li><li><code>-n</code> Минимальное количество дней между сменами пароля</li><li><code>-x</code> Максимальное количество дней, после которого необходимо обязательно сменить пароль</li><li><code>-l</code> Заблокировать учетную запись пользователя</li><li><code>-u</code> Разблокировать учетную запись пользователя</li></ul><h4 id="установка-пустого-пароля-пользователя" tabindex="-1">Установка пустого пароля пользователя <a class="header-anchor" href="#установка-пустого-пароля-пользователя" aria-label="Permalink to &quot;Установка пустого пароля пользователя&quot;">​</a></h4><p>Супер пользователь с помощью утилит командной строки passwd и usermod или путем редактирования файла <code>/etc/shadow</code> может удалить пароль пользователь, дав возможность входить в систему без указания пароля.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passwd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><p>или</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usermod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><p>После этого имеет смысл принудить пользователя установить себе новый пароль при следующем входе в систему.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passwd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><h3 id="удаление-пользователя" tabindex="-1">Удаление пользователя <a class="header-anchor" href="#удаление-пользователя" aria-label="Permalink to &quot;Удаление пользователя&quot;">​</a></h3><p>Для того, чтобы удалить пользователя воспользуйтесь утилитой <code>userdel</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> userdel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vasyapupkin</span></span></code></pre></div><p><strong>Пример использования:</strong></p><ul><li><code>-f</code> Принудительно удалить пользователя, даже если он сейчас работает в системе</li><li><code>-r</code> Удалить домашний каталог пользователя</li></ul><h2 id="управление-группами" tabindex="-1">Управление группами <a class="header-anchor" href="#управление-группами" aria-label="Permalink to &quot;Управление группами&quot;">​</a></h2><h3 id="создание-группы" tabindex="-1">Создание группы <a class="header-anchor" href="#создание-группы" aria-label="Permalink to &quot;Создание группы&quot;">​</a></h3><p>Программа <code>groupadd</code> создаёт новую группу согласно указанным значениям командной строки и системным значениям по умолчанию.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> groupadd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testgroup</span></span></code></pre></div><p><strong>Основные ключи:</strong></p><ul><li><code>-g</code> Установить собственный GID</li><li><code>-p</code> Пароль группы</li><li><code>-r</code> Создать системную группу</li></ul><h3 id="изменение-группы" tabindex="-1">Изменение группы <a class="header-anchor" href="#изменение-группы" aria-label="Permalink to &quot;Изменение группы&quot;">​</a></h3><p>Сменить название группы, ее GID или пароль можно при помощи <code>groupmod</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> groupmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newtestgroup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testgroup</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Имя группы изменено с testgroup на newtestgroup</span></span></code></pre></div><p><strong>Опции groupmod:</strong></p><ul><li><code>-g</code> Установить другой GID</li><li><code>-n</code> Новое имя группы</li><li><code>-p</code> Иметь пароль группы</li></ul><h3 id="удаление-группы" tabindex="-1">Удаление группы <a class="header-anchor" href="#удаление-группы" aria-label="Permalink to &quot;Удаление группы&quot;">​</a></h3><p>Утилита <code>groupdel</code> не имеет никаких дополнительных параметров.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> groupdel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testgroup</span></span></code></pre></div><h3 id="управление-пользователями-группы" tabindex="-1">Управление пользователями группы <a class="header-anchor" href="#управление-пользователями-группы" aria-label="Permalink to &quot;Управление пользователями группы&quot;">​</a></h3><p>Для управления пользователями группы используется утилита <code>gpasswd</code>.</p><p><strong>Чтобы занести пользователя в группу:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gpasswd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [user] [group]</span></span></code></pre></div><p><strong>Вывод пользователя из группы:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gpasswd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [user] [group]</span></span></code></pre></div><h2 id="фаилы-конфигурации" tabindex="-1">Файлы конфигурации <a class="header-anchor" href="#фаилы-конфигурации" aria-label="Permalink to &quot;Файлы конфигурации&quot;">​</a></h2><h3 id="etc-passwd" tabindex="-1">/etc/passwd <a class="header-anchor" href="#etc-passwd" aria-label="Permalink to &quot;/etc/passwd&quot;">​</a></h3><p>В файле <code>/etc/passwd</code>, который упоминался ранее, хранится вся информация о пользователях кроме пароля. Одна строка из этого файла соответствует описанию одного пользователя. Примерное содержание строки таково:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vasyapupkin:x:1000:1000:Vasya Pupkin:/home/vpupkin:/bin/bash</span></span></code></pre></div><p>Строка состоит из нескольких полей, каждое из которых отделено от другого двоеточием. Значение каждого поля:</p><ol><li><code>vasyapupkin</code> Имя пользователя для входа в систему</li><li><code>x</code> Необязательный зашифрованный пароль</li><li><code>1000</code> Числовой идентификатор пользователя (UID)</li><li><code>1000</code> Числовой идентификатор группы (GID)</li><li><code>Vasya Pupkin</code> Поле комментария</li><li><code>/home/vpupkin</code> Домашний каталог пользователя</li><li><code>/bin/bash</code> Оболочка пользователя</li></ol><p>Второе и последнее поля необязательные и могут не иметь значения.</p><h3 id="etc-group" tabindex="-1">/etc/group <a class="header-anchor" href="#etc-group" aria-label="Permalink to &quot;/etc/group&quot;">​</a></h3><p>В <code>/etc/group</code>, как очевидно из названия хранится информация о группах. Она записана в аналогичном /etc/passwd виде:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vasyapupkin:x:1000:vasyapupkin,petya</span></span></code></pre></div><p>Строка состоит из нескольких полей, каждое из которых отделено от другого двоеточием. Значение каждого поля:</p><ol><li><code>vasyapupkin</code> Название группы</li><li><code>x</code> Необязательный зашифрованный пароль</li><li><code>1000</code> Числовой идентификатор группы (GID)</li><li><code>vasyapupkin,petya</code> Список пользователей, находящихся в группе</li></ol><p>В этом файле второе и четвертое поля могут быть пустыми.</p><h3 id="etc-shadow" tabindex="-1">/etc/shadow <a class="header-anchor" href="#etc-shadow" aria-label="Permalink to &quot;/etc/shadow&quot;">​</a></h3><p>Файл <code>/etc/shadow</code> хранит в себе пароли, по этому права, установленные на этот файл, не дают считать его простому пользователю. Пример одной из записей из этого файла:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vasyapupkin:xxx:15803:0:99999:7:::</span></span></code></pre></div><p><strong>Здесь:</strong></p><ol><li><code>vasyapupkin</code> Имя пользователя для входа в систему</li><li><code>xxx</code> Необязательный зашифрованный пароль</li><li><code>15803</code> Дата последней смены пароля</li><li><code>0</code> Минимальный срок действия пароля</li><li><code>99999</code> Максимальный срок действия пароля</li><li><code>7</code> Период предупреждения о пароле</li><li><code>[пусто]</code> Период неактивности пароля</li><li><code>[пусто]</code> Дата истечения срока действия учётной записи</li></ol><h2 id="sudo-и-su" tabindex="-1">Sudo и su <a class="header-anchor" href="#sudo-и-su" aria-label="Permalink to &quot;Sudo и su&quot;">​</a></h2><p>Зная чей-либо пароль, можно непосредственно зарегистрироваться в системе под его именем, введя команду <code>su имя_пользователя</code>.</p><p><strong>Программа <code>su</code></strong> служит для выполнения от имени указанного пользователя (по умолчанию — root) указанной команды/программы (по умолчанию — той программы, что определена в качестве оболочки (shell) для указанного пользователя) и запрашивает она пароль указанного пользователя.</p><p><strong>О программе <code>sudo</code></strong> можно сказать почти то же самое, за двумя исключениями:</p><ul><li>Нет «программы по умолчанию». для запуска оболочки, определённой для указанного пользователя, надо передать программе опцию -i</li><li>По умолчанию запрашивается не пароль указанного пользователя, а пароль пользователя, выполняющего программу sudo. какому пользователю, какие программы и от чьего имени можно запускать, определяется содержимым конфигурационного файла <code>/etc/sudoers</code> (редактируется с помощью программы visudo)</li></ul><h2 id="управление-доступом" tabindex="-1">Управление доступом <a class="header-anchor" href="#управление-доступом" aria-label="Permalink to &quot;Управление доступом&quot;">​</a></h2><p>У каждого объекта в Linux есть свой идентификатор, а так же права доступа, применяемые к данному идентификатору. Идентификатор есть у пользователя - <strong>UID</strong>, у группы - <strong>GID</strong>, у файла - <strong>inode</strong>.</p><p>Собственно <strong>inode</strong> является, как идентификатором файла/каталога, так и сущностью, которая содержит в себе информацию о файле/каталоге. Например такую, как: принадлежность к владельцу/группе, тип файла и права доступа к файлу.</p><p>Для каждого объекта файловой системы в модели полномочий Linux есть три типа полномочий:</p><ul><li><strong>Полномочия чтения</strong> (r от read)</li><li><strong>Записи</strong> (w от write)</li><li><strong>Выполнения</strong> (x от execution)</li></ul><p>В полномочия записи входят также возможности удаления и изменения объекта. Право выполнения можно установить для любого файла. Потенциально, любой файл в системе можно запустить на выполнение, как программу в Windows. В Linux является ли файл исполняемым или нет, определяется не по его расширению, а по правам доступа. Кроме того, эти полномочия указываются отдельно для владельца файла, членов группы файла и для всех остальных.</p><p>Собрав вышесказанное в кучу, то есть представив 3 правила (rwx) для трех групп (владелец, группа, остальные) запись прав доступа будет выглядеть вот так: <code>rwx rwx rwx</code>.</p><p><strong>Пример прав директории:</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>drwxr-xr-x user group</span></span>
<span class="line"><span>||||||||||</span></span>
<span class="line"><span>|||||||||+- исполнение для всех остальных - разрешено</span></span>
<span class="line"><span>||||||||+-- запись для всех остальных - НЕ разрешено</span></span>
<span class="line"><span>|||||||+--- чтение для всех остальных - разрешено</span></span>
<span class="line"><span>||||||+---- исполнение для группы владельца - разрешено</span></span>
<span class="line"><span>|||||+----- запись для группы владельца - НЕ разрешено</span></span>
<span class="line"><span>||||+------ чтение для группы владельца - разрешено</span></span>
<span class="line"><span>|||+------- исполнение для владельца - разрешено</span></span>
<span class="line"><span>||+-------- запись для владельца - разрешено</span></span>
<span class="line"><span>|+--------- чтение для владельца - разрешено</span></span>
<span class="line"><span>+---------- тип файла</span></span></code></pre></div><p>Кроме указанного представления полномочий доступа (символьного), существует так же и числовое представление. Для общего понимания, приведу таблицу соответствия числового (двоичного и десятичного) значения прав доступа и буквенного:</p><table tabindex="0"><thead><tr><th></th><th>владелец</th><th>группа</th><th>остальные</th></tr></thead><tbody><tr><td>буквенное</td><td>rwx</td><td>r-x</td><td>r–</td></tr><tr><td>двоичное</td><td>111</td><td>101</td><td>100</td></tr><tr><td>двоичное в десятичных</td><td>421</td><td>401</td><td>400</td></tr><tr><td>десятичное</td><td>7</td><td>5</td><td>4</td></tr></tbody></table><h3 id="управление-правами-доступа" tabindex="-1">Управление правами доступа <a class="header-anchor" href="#управление-правами-доступа" aria-label="Permalink to &quot;Управление правами доступа&quot;">​</a></h3><p>Управление правами доступа происходит с помощью команды <code>chmod</code>, управление владельцем файла происходит с помощью команды <code>chown</code>.</p><p><strong>Синтаксис команд следующий:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [к_какой_группе_прав][что_сделать_с_правами][какие_права] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">над_каким_объектом</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [права] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">над_чем</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li><p><code>[к_какой_группе_прав]</code> может быть:</p><ul><li><code>u</code> (от user) - владелец-пользователь</li><li><code>g</code> (от group) - владелец-группа</li><li><code>o</code> (от other) - остальные пользователи</li><li><code>a</code> (от all) - все вышеперечисленные группы вместе</li></ul></li><li><p><code>[что_сделать_с_правами]</code> может быть:</p><ul><li><code>+</code> - добавить</li><li><code>-</code> - убрать</li><li><code>=</code> - присвоить указанное</li></ul></li><li><p><code>[какие_права]</code> может быть:</p><ul><li><code>r</code> - чтение</li><li><code>w</code> - запись</li><li><code>x</code> - выполнение</li></ul></li><li><p><code>[над_каким_объектом]</code> соответственно - имя или путь к файлу</p></li><li><p><code>[права]</code> числовое обозначение прав доступа (755, 644 и т.п.)</p></li></ul><p>Использование команды chown выглядит следующим образом: <code>chown user:group file</code> (<code>-R</code> рекурсивно)</p><h3 id="права-доступа-к-символьным-ссылкам" tabindex="-1">Права доступа к символьным ссылкам <a class="header-anchor" href="#права-доступа-к-символьным-ссылкам" aria-label="Permalink to &quot;Права доступа к символьным ссылкам&quot;">​</a></h3><p>Если посмотреть на права символьных ссылок, то они всегда выглядят так: <code>rwxrwxrwx</code>. Дело в том, что права на символьную ссылку не имеют особого значения. При использования ссылки драйвер файловой системы пересчитывает реальный путь к файлу и применяет права доступа, определенные для реального пути уже без учета символьной ссылки.</p><h2 id="специальные-атрибуты" tabindex="-1">Специальные атрибуты <a class="header-anchor" href="#специальные-атрибуты" aria-label="Permalink to &quot;Специальные атрибуты&quot;">​</a></h2><h3 id="sticky-bit-бит-закрепления-в-памяти" tabindex="-1">Sticky bit - бит закрепления в памяти <a class="header-anchor" href="#sticky-bit-бит-закрепления-в-памяти" aria-label="Permalink to &quot;Sticky bit - бит закрепления в памяти&quot;">​</a></h3><p>Сегодня <strong>sticky bit</strong> используется в основном для каталогов, чтобы защитить в них файлы. В такой каталог может писать <strong>ЛЮБОЙ</strong> пользователь. Из такой директории пользователь может удалить только те файлы, владельцем которых он является. Примером может служить директория <code>/tmp</code>, в которой запись открыта для всех пользователей, но нежелательно удаление чужих файлов.</p><h3 id="suid-он-же-set-user-id" tabindex="-1">SUID - он же Set User ID <a class="header-anchor" href="#suid-он-же-set-user-id" aria-label="Permalink to &quot;SUID - он же Set User ID&quot;">​</a></h3><p>Атрибут исполняемого файла, позволяющий запустить его с правами владельца. В Unix-подобных системах приложение запускается с правами пользователя, запустившего указанное приложение. Это обеспечивает дополнительную безопасность так как процесс с правами пользователя не сможет получить доступ на запись к важным системным файлам, например <code>/etc/passwd</code>, который принадлежит суперпользователю <code>root</code>. Если на исполняемый файл установлен бит <code>suid</code>, то при выполнении эта программа автоматически меняет &quot;эффективный userID&quot; на идентификатор того юзера, который является владельцем этого файла. То есть, не зависимо от того - кто запускает эту программу, она при выполнении имеет права хозяина этого файла.</p><h3 id="sgid-он-же-set-group-id" tabindex="-1">SGID - он же Set Group ID <a class="header-anchor" href="#sgid-он-же-set-group-id" aria-label="Permalink to &quot;SGID - он же Set Group ID&quot;">​</a></h3><p>Аналогичен SUID, но относится к группе. При этом, если для каталога установлен бит SGID, то создаваемые в нем объекты будут получать группу владельца каталога, а не пользователя.</p><p>Хотелось бы так же провести аналогию с ОС Windows. В указанной операционной системе права регулируются на основе списков ACL. В Linux тоже такое возможно, это реализуется с помощью пакета acl, но данный вопрос в текущей теме я рассматривать не буду. Еще одно важное замечание! В Windows можно определить права доступа на каталог, и они автоматически распространяются на все файлы и поддиректории (если вы явно не указали иного). В Linux права доступа сохраняются в <strong>inode</strong> файла, и поскольку <strong>inode</strong> у каждого файла свой собственный, права доступа у каждого файла свои. Так же, права доступа пользователя и группы не суммируются, как в Windows. Если программа выполняется с правами пользователя и группы, которым принадлежит файл — работают только права хозяина файла.</p><p><strong>Важно!</strong> Исполняемый файл с установленным атрибутом suid является &quot;потенциально опасным&quot;. Без установленного атрибута, файл не позволит обычному пользователю сделать то, что выходит за пределы прав пользователя (пример, программа passwd позволяет пользователю изменить только собственный пароль). Но, даже незначительная ошибка в такой программе может привести к тому, что злоумышленник сможет заставить её выполнить ещё какие-нибудь действия, не предусмотренные автором программы. Стоит очень осторожно относиться к данным атрибутам!</p><p><strong>При создании новой директории</strong> в директории с уже установленным SGID-битом, у созданной директории SGID-бит устанавливается автоматически!</p><h3 id="обозначение-атрибутов-sticky-suid-sgid" tabindex="-1">Обозначение атрибутов Sticky, SUID, SGID <a class="header-anchor" href="#обозначение-атрибутов-sticky-suid-sgid" aria-label="Permalink to &quot;Обозначение атрибутов Sticky, SUID, SGID&quot;">​</a></h3><p>Специальные права используются довольно редко, поэтому при выводе программы <code>ls -l</code> символ, обозначающий указанные атрибуты, закрывает символ стандартных прав доступа. Пример: <code>rwsrwsrwt</code>, где <code>s</code> - SUID, <code>s</code> - SGID, <code>t</code> - Sticky.</p><p>В приведенном примере не понятно, rwt — это rw- или rwx? Определить, стоит ли символ стандартных прав доступа под символами s и t - просто. Если t маленькое, значит x установлен. Если T большое, значит x не установлен. То же самое правило распространяется и на s.</p><p>В числовом эквиваленте данные атрибуты определяются первым символом при четырехзначном обозначении (который часто опускается при назначении прав), например в правах 1777 - символ 1 обозначает sticky bit. Остальные атрибуты имеют следующие числовое соответствие:</p><ul><li><code>1</code> - sticky bit</li><li><code>2</code> - SGID</li><li><code>4</code> - SUID</li></ul><h2 id="права-доступа-по-умолчанию-для-вновь-создаваемых-объектов-фаиловои-системе" tabindex="-1">Права доступа по-умолчанию для вновь создаваемых объектов файловой системе <a class="header-anchor" href="#права-доступа-по-умолчанию-для-вновь-создаваемых-объектов-фаиловои-системе" aria-label="Permalink to &quot;Права доступа по-умолчанию для вновь создаваемых объектов файловой системе&quot;">​</a></h2><p>В Linux, при создании какого-либо файла или каталога предоставляемые права определяются по определенному алгоритму (формуле). Не вдаваясь в подробности и для большего понимания сути скажу, что есть исходные права доступа:</p><ul><li><code>0666</code> - для файлов</li><li><code>0777</code> - для каталогов</li></ul><p>Есть такая штука как <strong>umask</strong>, которая задана для каждого пользователя и хранится в виде строчки <code>umask &lt;значение_umask&gt;</code> в файле <code>.bash_profile</code>. Итого, у вновь создаваемого каталога будут права равные исходным правам доступа - umask.</p><p>Узнать текущий umask можно, введя команду umask без параметров.</p><p><strong>Пример:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@proxy test]# umask</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0022</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@proxy test]# touch file</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@proxy test]# mkdir test</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@proxy test]# ls -l</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:51</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:51</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span></code></pre></div><p>Как видно из примера, umask установлен 0022, исходные права доступа равны 0666 - для файлов и 0777 - для каталогов. В результате получаем:</p><p>0666 - 0022 = 0644 (что соответствует правам -rw-r--r-- для file) 0777 - 0022 = 0755 (что соответствует правам -rwxr-xr-x для каталога test)</p>`,129)]))}const u=i(l,[["render",d]]);export{k as __pageData,u as default};
