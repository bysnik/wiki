import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.D4Vqf8I7.js";const t="/wiki/assets/rars-1.D1hu4Th5.png",p="/wiki/assets/rars.O64P6Ezq.png",e="/wiki/assets/rars-hello-world.DVJttFwg.png",E=JSON.parse('{"title":"RARS Emulator","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/rars.md","filePath":"docs/wi/rars.md","lastUpdated":1759480092000}'),h={name:"docs/wi/rars.md"};function k(r,s,d,o,c,g){return n(),i("div",null,s[0]||(s[0]=[l('<h1 id="rars-emulator" tabindex="-1">RARS Emulator <a class="header-anchor" href="#rars-emulator" aria-label="Permalink to &quot;RARS Emulator&quot;">​</a></h1><p><img src="'+t+'" alt="alt text"></p><p>RARS (RISC-V Assembler, Simulator, and Runtime) транслирует и симулирует выполнение программ, написанных на языке ассемблера RISC-V. Его основная цель — быть эффективной средой разработки для начинающих знакомиться с RISC-V.</p><h2 id="установка" tabindex="-1">Установка <a class="header-anchor" href="#установка" aria-label="Permalink to &quot;Установка&quot;">​</a></h2><p>Скачайте <a href="https://github.com/TheThirdOne/rars" target="_blank" rel="noreferrer">Rars Emulator</a></p><p>Установите OpenJDK:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java-21-openjdk</span></span></code></pre></div><p>Запустите Rars Emulator:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rars1_6.jar</span></span></code></pre></div><p>Можно создать пункт в меню (пример для KDE): <img src="'+p+`" alt="alt text"></p><h2 id="пример-hello-world" tabindex="-1">Пример: hello-world <a class="header-anchor" href="#пример-hello-world" aria-label="Permalink to &quot;Пример: hello-world&quot;">​</a></h2><div class="language-asm vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">asm</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Программа на ассемблере Risc-V для вывода &quot;Hello World!&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># в стандартный вывод (stdout).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># a0-a2 - параметры для функций Linux</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># a7 - номер функции в Linux</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _start     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Предоставить адрес начала программы линковщику</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Настройка параметров для вывода &quot;Hello World!&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># и вызов Linux для выполнения.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_start:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> addi  a0, x0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 1 = StdOut (стандартный вывод)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        la    a1, helloworld</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # загрузить адрес строки helloworld</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        addi  a2, x0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # длина нашей строки</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        addi  a7, x0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # системный вызов write в Linux</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ecall               </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Вызов Linux для вывода строки</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Настройка параметров для завершения программы</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># и вызов Linux для выполнения.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        addi    a0, x0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Код возврата 0 (успешное завершение)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        addi    a7, x0, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">93</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Код команды завершения (93)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ecall              </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Вызов Linux для завершения программы</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helloworld:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .ascii &quot;Hello World!\\n&quot;</span></span></code></pre></div><p><img src="`+e+'" alt="alt text"></p>',13)]))}const y=a(h,[["render",k]]);export{E as __pageData,y as default};
