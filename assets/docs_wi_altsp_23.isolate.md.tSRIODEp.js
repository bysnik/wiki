import{_ as s,c as a,o as t,ag as p}from"./chunks/framework.D4Vqf8I7.js";const i="/wiki/assets/htop.CqZiRIRX.png",r="/wiki/assets/sticky.BX0z2as_.png",_=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/altsp/23.isolate.md","filePath":"docs/wi/altsp/23.isolate.md","lastUpdated":1753692673000}'),n={name:"docs/wi/altsp/23.isolate.md"};function l(o,e,c,d,m,h){return t(),a("div",null,e[0]||(e[0]=[p('<p>Операционная система должна предоставлять возможность одновременной работы пользователей в изолированных сеансах. Должны быть предусмотрены:</p><ul><li>отдельное изолированное хранение данных аутентификации каждого пользователя системы таким cобразом, чтобы процессы аутентификации и процессы изменения данных аутентификации локального или сетевого пользователя не могли получить доступа к данным аутентификации и авторизации других пользователей системы;</li><li>поддержка изоляции временных пользовательских файлов.</li></ul><hr><p>Вообще это немного странный пункт, ибо все дистрибутивы на базе ядра Linux являются истинно многопользовательскими, даже больше - все Unix-like системы являются истинно многопользовательскими, вследствие чего изолированность сеансов пользователей стоит на первом месте. Без механизмов изоляции невозможно бы было использовать в 60-70гг огромные мейнфреймы нескольким пользователям одновременно, что, в контексте стоимости обслуживания компьютера, недопустимо.</p><p>В качестве основы изоляции процессов друг от друга применяются <strong>Пространства имён</strong></p><p><a href="https://man7.org/linux/man-pages/man7/namespaces.7.html" target="_blank" rel="noreferrer">https://man7.org/linux/man-pages/man7/namespaces.7.html</a><a href="https://man7.org/linux/man-pages/man7/user_namespaces.7.html" target="_blank" rel="noreferrer">https://man7.org/linux/man-pages/man7/user_namespaces.7.html</a></p><p>Далее используются механизмы управления правами доступа.</p><p>![[Pasted image 20250522125236.png]]</p><p>![[43) Изоляция приложений]]</p><p>![[45) Управление фиксированными состояниями ключевых объектов]]</p><p>На примере <code>htop</code> можно увидеть, что некоторые процессы запущены под пользователем <code>root</code> - самый главный пользователь системы, <code>basealt</code> - текущий пользователь, а также <code>messagebu</code> и <code>nscd</code> - это <a href="https://www.altlinux.org/Pseudo_User_Policy" target="_blank" rel="noreferrer">псевдопользователи</a>. Каждый пользователь работает независимо друг от друга. В рамках одного сеанса пользователя нельзя использовать файлы и ресурсы, у которых права доступа запрещают использование другими пользователями.</p><p><img src="'+i+'" alt=""></p><p>В ОС Альт СП за аутентификацию пользователей в локальной системе отвечают модули PAM (Pluggable Authentication Modules, подключаемые модули аутентификации). Реализация модулей PAM представляет собой набор разделяемых объектов (библиотек), работающих в пространстве пользователей, которые загружаются в память и выполняются каждый раз, когда программе нужно аутентифицировать пользователя.</p><p>Модуль Центра управления системой (ЦУС) «Локальные учетные записи» alterator-users предназначен для администрирования локальных пользователей. Модуль «Локальные учетные записи» доступен как в GUI в экспертном режиме (раздел «Пользователи» → «Локальные учетные записи») , так и в веб-интерфейсе по адресу <a href="https://ip-address:8080" target="_blank" rel="noreferrer">https://ip-address:8080</a>. В ОС Альт СП реализована возможность хранения аутентификационной информации пользователей, полученной с использованием хеш-функций по ГОСТ Р 34.11–2012.</p><p>Идентификация и аутентификация может осуществляться с использованием токена и модуля pam_pkcs11, а так же централизованно при реализации логической модели «Альт Домен» и FreeIPA.</p><p>В ОС Альт СП управление временными файлами, в том числе запрет, разрешение, перенаправление записи, удаление временных файлов,осуществляется с помощью утилит(smem, sfill, dm-secdel)</p><p>![](&#39;/public/img/Pasted image 20250602125035.png&#39;)</p><p>Изоляция временных пользовательских файлов происходит за счёт Sticky bit: sticky bit используется в основном для каталогов, чтобы защитить в них файлы. Из такого каталога пользователь может удалить только те файлы, владельцем которых он является. Примером может служить каталог /tmp, в который запись открыта для всех пользователей, но нежелательно удаление чужих файлов.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -dl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp</span></span></code></pre></div><p><img src="'+r+'" alt=""> где t — это sticky bit.</p>',20)]))}const u=s(n,[["render",l]]);export{_ as __pageData,u as default};
