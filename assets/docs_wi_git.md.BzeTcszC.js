import{_ as i,c as a,o as t,ag as h}from"./chunks/framework.D4Vqf8I7.js";const n="/wiki/assets/gitwebtest.BcPDYvM8.png",c=JSON.parse('{"title":"GIT","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/wi/git.md","filePath":"docs/wi/git.md","lastUpdated":1756127898000}'),p={name:"docs/wi/git.md"};function e(l,s,k,d,g,F){return t(),a("div",null,s[0]||(s[0]=[h(`<h1 id="git" tabindex="-1">GIT <a class="header-anchor" href="#git" aria-label="Permalink to &quot;GIT&quot;">​</a></h1><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Git-logo.svg/1024px-Git-logo.svg.png" alt=""></p><p>Git - это распределенная система управления версиями, которая позволяет отслеживать изменения в файлах, координировать работу нескольких разработчиков и эффективно управлять различными версиями проекта. В отличие от централизованных систем, где все изменения хранятся на одном сервере, Git позволяет каждому разработчику иметь локальную копию всего репозитория, включая историю изменений. Это делает Git гибким и удобным инструментом для командной работы, а также для работы в автономном режиме.</p><p><a href="https://git-scm.com" target="_blank" rel="noreferrer">https://git-scm.com</a> - Вся документация по Git</p><h2 id="установка-git" tabindex="-1">Установка Git <a class="header-anchor" href="#установка-git" aria-label="Permalink to &quot;Установка Git&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><h2 id="быстрыи-старт" tabindex="-1">Быстрый старт <a class="header-anchor" href="#быстрыи-старт" aria-label="Permalink to &quot;Быстрый старт&quot;">​</a></h2><h3 id="создание-репозитория" tabindex="-1">Создание репозитория <a class="header-anchor" href="#создание-репозитория" aria-label="Permalink to &quot;Создание репозитория&quot;">​</a></h3><p>Необходимо зарегистрировать аккаунт на публичном или локальном хостинге репозиториев (GitHub, GitLab, Gitea, BitBucket, GitFlic...)</p><p>В графическом интерфейсе найдите и нажмите &quot;Создать новый репозиторий&quot; или аналог.</p><p>Введите название и описание вашего репозитория.</p><p>Измените настройки на:</p><ul><li>Public (пользователи в интернете могут видеть этот репозиторий);</li><li>Initialize this repository with (какие файл необходимо добавить в репозиторий);</li><li>Add README (создать файл Readme.md)</li><li>Add .gitignore (None (или выберите, какие файлы не будут отслеживаться из листа шаблонов);</li><li>Choose a license (None (Или любая лицензия по вашей необходимости).</li></ul><p>*Некоторые пункты могут отличаться.</p><p>Нажимаем Create Repository.</p><p>На данный момент должен быть минимальный репозиторий с файлом <code>Readme.md</code> (иначе часть шагов будет отличаться).</p><h3 id="настроика-ssh" tabindex="-1">Настройка SSH <a class="header-anchor" href="#настроика-ssh" aria-label="Permalink to &quot;Настройка SSH&quot;">​</a></h3><p>В терминале, будучи в сессии пользователя, которым Вы будете пользоваться при работе с git, введите следующую команду для генерации SSH ключа:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> –t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ed25519</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> –C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> “your@email”</span></span></code></pre></div><p>После выполнения команды Вам будут выведены пути к открытому и закрытому ключу.</p><p>Откройте файл <code>.ssh/id_ed25519.pub</code> и скопируйте его содержимое целиком.</p><p>Теперь зайдите на хостинг, настройки пользователя, SSH and GPG keys. New SSH key.</p><p>Придумайте название для ключа и введите его в поле.</p><p>Запись должна быть следующей:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-ed25519</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ключ] [ваш email]</span></span></code></pre></div><h3 id="настроика-глобального-пользователя" tabindex="-1">Настройка глобального пользователя <a class="header-anchor" href="#настроика-глобального-пользователя" aria-label="Permalink to &quot;Настройка глобального пользователя&quot;">​</a></h3><p>В терминале, настройте имя пользователя Git для каждого репозитория командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> “[username]”</span></span></code></pre></div><p>Также, необходимо задатьemail для пользователя Git:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> “[email]”</span></span></code></pre></div><p>Чтобы проверить конфигурацию файла Git введите команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span></span></code></pre></div><h3 id="клонирование-удаленного-репозитория-в-рабочую-директорию" tabindex="-1">Клонирование удаленного репозитория в рабочую директорию <a class="header-anchor" href="#клонирование-удаленного-репозитория-в-рабочую-директорию" aria-label="Permalink to &quot;Клонирование удаленного репозитория в рабочую директорию&quot;">​</a></h3><p>Необходимо клонировать ранее созданный удаленный репозиторий на локальный компьютор.</p><p>В хостинге, на главной странице репозитория, найдите клавишу <code>&lt;&gt; Code</code> и скопируйте ссылку SSH формата:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git@</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;URL_или_IP_удалённого_репозитория&gt;:&lt;имя_пользователя_на_удалённом_репозитории&gt;/&lt;название_репозитория&gt;.git</span></span></code></pre></div><p>Затем, в терминале введите команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">URL_или_IP_удалённого_репозитори</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">я</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">имя_пользователя_на_удалённом_репозитори</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">и</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">название_репозитори</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">я</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.git</span></span></code></pre></div><p>Перейдите в скопированный репозиторий</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [название_репозитория]/</span></span></code></pre></div><h3 id="работа-с-фаилами-в-рабочеи-директории" tabindex="-1">Работа с файлами в рабочей директории <a class="header-anchor" href="#работа-с-фаилами-в-рабочеи-директории" aria-label="Permalink to &quot;Работа с файлами в рабочей директории&quot;">​</a></h3><p>Для примера, создадим файл helloworld.py со следующим содержимым:</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> helloWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello World&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;__main__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(helloWorld())</span></span></code></pre></div><h3 id="отправка-изменении-на-удаленныи-репозитории" tabindex="-1">Отправка изменений на удаленный репозиторий <a class="header-anchor" href="#отправка-изменении-на-удаленныи-репозитории" aria-label="Permalink to &quot;Отправка изменений на удаленный репозиторий&quot;">​</a></h3><p><img src="https://habrastorage.org/getpro/habr/post_images/a91/fe3/bda/a91fe3bda5ec9f80d35d3c2b6b6f1ddd.png" alt=""></p><p>Работа с репозиториями происходит по данной схеме. После изменения содержимого рабочей директории нам нужно добавить эти изменения в локальный репозиторий.</p><p>Выделяем все файлы для отправки в локальный репозиторий:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span></code></pre></div><p>Создаем коммит изменений. Без него ничего работать не будет!</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> –m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> “First</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit”</span></span></code></pre></div><p>Отправляем изменения из локального репозитория в удалённый. По умолчанию, в ветку main.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span></code></pre></div><h2 id="ошибка-warning-remote-host-identification-has-changed" tabindex="-1">Ошибка: WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! <a class="header-anchor" href="#ошибка-warning-remote-host-identification-has-changed" aria-label="Permalink to &quot;Ошибка: WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!&quot;">​</a></h2><p>Если при выполнении клонирования у вас происходит это:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[basealt@bystrovno-nb gitea]$ git clone gitea@192.168.56.10:admin/t342ewg4y4.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cloning</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> into</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;t342ewg4y4&#39;...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    WARNING:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IDENTIFICATION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HAS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CHANGED!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     @</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POSSIBLE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> THAT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SOMEONE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DOING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SOMETHING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NASTY!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Someone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> could</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> be</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eavesdropping</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> right</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (man-in-the-middle </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">attack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> It</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> also</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> possible</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> that</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> just</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> been</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fingerprint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ED25519</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA256:tWrhG8sQgkPJb6ZFZe/wSdZlM6ZkftFX6sTwxY7ereg.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Please</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contact</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> administrator.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> correct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/basealt/.ssh/known_hosts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> this</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> message.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Offending</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ECDSA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/basealt/.ssh/known_hosts:10</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.56.10</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> has</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> changed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requested</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> strict</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checking.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> verification</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> failed.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fatal:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Could</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repository.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Please</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> correct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> access</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rights</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repository</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exists.</span></span></code></pre></div><p>Как вариант, попробуйте удалить старый ключ и сделать повторное клонирование:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.56.10</span></span></code></pre></div><p>У меня это произошло потому что я при клонировании не тот URL написал, вместо IP у меня localhost был, но я этого не заметил и сделал</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Are</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> want</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> continue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connecting</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (yes/no/[fingerprint])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yes</span></span></code></pre></div><p>Ну и почему то он потом начал выдавать ошибку при клонировании</p><h2 id="как-клонировать-определенныи-брэнч" tabindex="-1">Как клонировать определённый брэнч <a class="header-anchor" href="#как-клонировать-определенныи-брэнч" aria-label="Permalink to &quot;Как клонировать определённый брэнч&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">имя_ветк</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">и</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --single-branch</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">URL_репозитори</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">я</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ol><li><p><code>git clone &lt;URL_репозитория&gt;</code>: Эта часть команды клонирует репозиторий. Обычно это скачивает все ветки, но с помощью дополнительных параметров можно ограничить клонирование.</p></li><li><p><code>-b &lt;имя_ветки&gt;</code>: Этот параметр указывает Git, какую ветку нужно клонировать. Замените &lt;имя_ветки&gt; на имя нужной вам ветки.</p></li><li><p><code>--single-branch</code>: Этот параметр гарантирует, что будет клонирована только указанная ветка, а не весь репозиторий со всеми его ветками. Это полезно для экономии места и времени, особенно если репозиторий большой.</p></li></ol><h2 id="свои-git-хостинг-и-gitweb" tabindex="-1">Свой Git-хостинг и GitWeb <a class="header-anchor" href="#свои-git-хостинг-и-gitweb" aria-label="Permalink to &quot;Свой Git-хостинг и GitWeb&quot;">​</a></h2><h3 id="минимальная-конфигурация-сервера" tabindex="-1">Минимальная конфигурация сервера <a class="header-anchor" href="#минимальная-конфигурация-сервера" aria-label="Permalink to &quot;Минимальная конфигурация сервера&quot;">​</a></h3><p>Для примера, директория сервера, где будут храниться все проекты, будет <code>/srv/git</code></p><p>Предположим, создадим новый репозиторий <code>my_project</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/my_project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/my_project</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Это тестовый репозиторий&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/my_project/README.md</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Initial commit&quot;</span></span></code></pre></div><p>Теперь необходимо экспортировать существующий репозиторий в новый голый репозиторий — репозиторий без рабочего каталога.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bare</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/my_project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git/my_project</span></span></code></pre></div><p>В дальнейшем, этот репозиторий будет доступен для других пользователей.</p><h3 id="gitweb" tabindex="-1">GitWeb <a class="header-anchor" href="#gitweb" aria-label="Permalink to &quot;GitWeb&quot;">​</a></h3><p>Уже сейчас можно посмотреть как будет выглядеть GitWeb. Запустим его в тестовом режиме.</p><p>Необходимо установить пакет <code>lighttpd</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lighttpd</span></span></code></pre></div><p>Это, конечно, криво, но чтобы запустить веб-интерфейс в тестовом режиме, нужно дать максимальные права репозиторию:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git/my_project</span></span></code></pre></div><p>Запуск производится строго не под рутом:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git/my_project</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instaweb</span></span></code></pre></div><p>Если всё сделано правильно, то откроется браузер: <img src="`+n+`" alt="alt text"></p><p>Запустим теперь уже на веб-сервере <code>apache2</code>.</p><p>В репозитории Альта есть пакет <a href="https://packages.altlinux.org/ru/p11/binary/gitweb/noarch/" target="_blank" rel="noreferrer">gitweb</a>, но я не понял как с ним работать), да и информации в интернете практически нет, так что будем работать по гайду с <a href="https://git-scm.com" target="_blank" rel="noreferrer">https://git-scm.com</a>.</p><p>Данные действия выполняются не под пользователем root:</p><ol><li>Клонируем репозиторий git:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git://git.kernel.org/pub/scm/git/git.git</span></span></code></pre></div><ol start="2"><li>Переходим в склонированный проект:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git/</span></span></code></pre></div><ol start="3"><li>Собираем gitweb из исходников:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GITWEB_PROJECTROOT=&quot;/srv/git&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prefix=/usr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gitweb</span></span></code></pre></div><p>Далее всё выполняется под пользователем root:</p><ol start="4"><li>Копируем собранные файлы:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gitweb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/</span></span></code></pre></div><ol start="5"><li>Создаём файл <code>/etc/httpd2/conf/sites-available/gitweb.conf</code>:</li></ol><div class="language-apache vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">apache</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VirtualHost</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> *:80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ServerName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gitserver</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    DocumentRoot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /var/www/gitweb</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/gitweb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        Options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> +ExecCGI +FollowSymLinks +SymLinksIfOwnerMatch</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        AllowOverride</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> All</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        order allow,deny</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        Allow</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> all</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        AddHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cgi-script cgi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        DirectoryIndex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gitweb.cgi</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Directory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">VirtualHost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><ol start="6"><li>Отключаем стандартный хост:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2dissite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 000-default</span></span></code></pre></div><ol start="7"><li>Включаем наш конфиг:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2ensite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gitweb</span></span></code></pre></div><ol start="8"><li>Перезагружаем веб-сервер</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> httpd2</span></span></code></pre></div><h3 id="настроика-доступа-по-ssh" tabindex="-1">Настройка доступа по SSH <a class="header-anchor" href="#настроика-доступа-по-ssh" aria-label="Permalink to &quot;Настройка доступа по SSH&quot;">​</a></h3><p>Будем предполагать, что у Вас на клиенте под учётной записью пользователя уже создан открытый ключ <code>~/.ssh/id_rsa.pub</code>, который клиент будет использовать для доступа к Вашему Git-репозиторию.</p><p>На сервере необходимо создать пользователя <code>git</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adduser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><p>На сервере необходимо создать пользователя <code>git</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">adduser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><p>Проверьте наличие файла <code>authorized_keys</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/git/.ssh/authorized_keys</span></span></code></pre></div><p>Если его нет, тогда нужно создать. Перейдите в сессию пользователя <code>git</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">su</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><p>Переходим в домашнюю директорию пользователя <code>git</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span></span></code></pre></div><p>Создаем директорию <code>/home/git/.git/</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .ssh</span></span></code></pre></div><p>Создаем файл <code>authorized_keys</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .ssh/authorized_keys</span></span></code></pre></div><p>Устанавливаем права:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 600</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .ssh/authorized_keys</span></span></code></pre></div><p>Теперь любым способом просто добавляете содержимое файла <code>~/.ssh/id_rsa.pub</code> клиента в файл <code>/home/git/.ssh/authorized_keys</code> На сервере.</p><div class="tip custom-block"><p class="custom-block-title">Примечание</p><p>Есть гораздо более простой способ. Необходимо использовать на стороне клиента команду <code>ssh-copy-id</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa.pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Главное, чтобы на сервере работал стандартный доступ по паролю.</p><p>P.S. В гайде выше пароль у пользователя <code>git</code> создан не был.</p></div><p>Отредактируем права для директории <code>/srv/git/</code> и всех вложенных файлов на сервере:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 755</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git</span></span></code></pre></div><p>После этого, можно проверить работоспособность. Попробуем клонировать репозиторий. На стороне клиента, под пользователем, чей ключ был скопирован, вводим команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/srv/git/my_project.git</span></span></code></pre></div><p>Если клонирование прошло успешно, значит доступ по SSH настроен корректно!</p><p>Теперь каждый раз, когда нужно будет создать новый проект/репозиторий, необходимо будет выполнять следующие шаги на сервере:</p><ol><li>Создать пустой репозиторий, запустив <code>git init</code> с параметром <code>--bare</code>, что инициализирует репозиторий без рабочего каталога:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_project.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_project.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bare</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Initialized empty Git repository in /srv/git/new_project.git/</span></span></code></pre></div><ol start="2"><li>После этого один из пользователей может отправить первую версию их проекта в этот репозиторий, добавив его как удалённый и отправив соответствующую ветку. Заметьте, что кто-то должен заходить на сервер и создавать голый репозиторий каждый раз, когда вы хотите добавить проект.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#На компьютере пользователя</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Initial commit&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/srv/git/new_project.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div><ol start="3"><li>Теперь все остальные могут клонировать его и отправлять в него изменения:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/srv/git/new_project.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new_project</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -am</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Fix for README file&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div><p>Этим способом вы можете быстро получить Git-сервер с доступом на чтение/запись для небольшой группы разработчиков.</p><h4 id="немного-о-бозопасности" tabindex="-1">Немного о бозопасности <a class="header-anchor" href="#немного-о-бозопасности" aria-label="Permalink to &quot;Немного о бозопасности&quot;">​</a></h4><p>Заметьте, что теперь все эти пользователи могут заходить на сервер как пользователь <code>git</code>. Чтобы это предотвратить, нужно изменить ему оболочку на что-то другое в файле <code>/etc/passwd</code>.</p><p>Вы можете легко ограничить пользователя <code>git</code> только действиями, связанными с Git, с помощью ограниченной оболочки <code>git-shell</code>, поставляемой вместе с Git. Если указать её в качестве командного интерпретатора для пользователя <code>git</code>, то он не сможет получить доступ к обычной командной оболочке на вашем сервере. Для её использования, укажите <code>git-shell</code> вместо <code>bash</code> или <code>csh</code> для пользователя <code>git</code>: Проверим, что <code>git-shell</code> установлена.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-shell</span></span></code></pre></div><p>Теперь можно изменить оболочку для пользователя используя <code>chsh &lt;username&gt; -s &lt;shell&gt;</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chsh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-shell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Теперь пользователь <code>git</code> может использовать SSH соединение только для работы с репозиториями Git и не может зайти на машину. Если вы попробуете войти в систему, то вход будет отклонён:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#fatal: Interactive git shell is not enabled.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#hint: ~/git-shell-commands should exist and have read and execute access.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#Connection to &lt;git_server_ip_address&gt; closed.</span></span></code></pre></div><h3 id="git-демон" tabindex="-1">Git-демон <a class="header-anchor" href="#git-демон" aria-label="Permalink to &quot;Git-демон&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">Внимание</p><p>Перед этим необходимо установить пакет <code>git-full</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-full</span></span></code></pre></div></div><p>Далее мы установим демон, обслуживающий репозитории по протоколу «Git». Это широко распространённый вариант для быстрого доступа без аутентификации. Помните, что раз сервис — без аутентификации, всё, что обслуживается по этому протоколу — публично доступно в сети.</p><p>Если вы запускаете демон на сервере не за сетевым экраном, он должен использоваться только для проектов, которые публично видны внешнему миру. Если сервер находится за вашим сетевым экраном, вы можете использовать его для проектов, к которым большое число людей или компьютеров (серверов непрерывной интеграции или сборки) должно иметь доступ только на чтение, и если вы не хотите для каждого из них заводить SSH-ключ.</p><p>В любом случае, протокол Git относительно просто настроить. Упрощённо, вам нужно запустить следующую команду в демонизированной форме:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reuseaddr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --base-path=/srv/git/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git/</span></span></code></pre></div><p>Опция <code>--reuseaddr</code> позволит серверу перезапуститься без ожидания таймаута существующих подключений, <code>--base-path</code> позволит людям не указывать полный путь, чтобы клонировать проект, а путь в конце указывает демону Git где искать экспортируемые репозитории. Если у вас запущен сетевой экран, вы должны проколоть в нём дырочку, открыв порт 9418 на машине, где всё это запущено.</p><p>Демонизируем данную команду. Просто создайте файл <code>/etc/systemd/system/git-daemon.service</code> со следующим содержанием:</p><div class="language-systemd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">systemd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Start Git Daemon</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/bin/git daemon --reuseaddr --base-path=/srv/git/ /srv/git/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Restart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">RestartSec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500ms</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">StandardOutput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">syslog</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">StandardError</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">syslog</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SyslogIdentifier</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git-daemon</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Group</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">multi-user.target</span></span></code></pre></div><p>Как вы могли здесь заметить, Git демон запускается от имени <code>git</code>, как пользователя, так и группы. При необходимости укажите другие значения и убедитесь, что указанный пользователь существует в системе. Так же убедитесь, что исполняемый файл Git имеет путь <code>/usr/bin/git</code> или укажите соответствующий путь к нему.</p><p>Наконец, выполните команду <code>systemctl enable git-daemon</code> для запуска сервиса при старте системы; для ручного запуска и остановки сервиса используйте команды <code>systemctl start git-daemon</code> и <code>systemctl stop git-daemon</code> соответственно.</p><p>Затем нужно указать Git серверу к каким репозиториям предоставлять доступ без аутентификации. Вы можете сделать это для каждого репозитория, создав файл с именем <code>git-daemon-export-ok</code>.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/project.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git-daemon-export-ok</span></span></code></pre></div><p>Наличие этого файла указывает Git, что можно обслуживать этот проект без аутентификации.</p><div class="tip custom-block"><p class="custom-block-title">ПЫСЫ</p><p>По данному протоколу нужно клонировать без <code>/srv/git</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git://</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/my_project.git</span></span></code></pre></div></div><h3 id="умныи-http" tabindex="-1">Умный HTTP <a class="header-anchor" href="#умныи-http" aria-label="Permalink to &quot;Умный HTTP&quot;">​</a></h3><p>Теперь у нас есть доступ с аутентификацией через SSH и неаутентифицированный доступ через <code>git://</code>, но есть ещё протокол, который может делать и то и другое. Настройка умного HTTP — это просто установка на сервер CGI-скрипта <code>git-http-backend</code>, поставляемого вместе с Git. Этот CGI-скрипт будет читать путь и заголовки, посылаемые <code>git fetch</code> или <code>git push</code> в URL и определять, может ли клиент работать через HTTP (это верно для любого клиента, начиная с версии 1.6.6). Если CGI-скрипт видит, что клиент умный, то и общаться с ним будет по-умному, иначе откатится на простое поведение (что делает операции чтения обратно совместимыми со старыми клиентами).</p><p>Давайте пройдёмся по самой базовой установке. Мы настроим Apache как сервер CGI.</p><p>Включаем необходимые модули:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cgi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> auth_basic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authn_core</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authz_core</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authn_file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">a2enmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> authz_user</span></span></code></pre></div><p>Так же необходимо установить пользователя и группу для каталога <code>/srv/git</code> в значение <code>apache2</code>, чтобы позволить веб-серверу читать из и писать в репозитории, потому что процесс Apache, запускающий CGI скрипт, работает от имени этого пользователя:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2:apache2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git</span></span></code></pre></div><p>Затем добавим некоторые настройки в конфигурационный файл <code>/etc/httpd2/conf/sites-available/gitweb.conf</code> ниже блока <code>&lt;Directory&gt;...&lt;/Directory&gt;</code>, чтобы запускать <code>git-http-backend</code> как обработчик для всех запросов, содержащих <code>/git</code>.</p><div class="language-apache vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">apache</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SetEnv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GIT_PROJECT_ROOT /srv/git</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SetEnv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GIT_HTTP_EXPORT_ALL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ScriptAlias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /git/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/libexec/git-core/git-http-backend/</span></span></code></pre></div><p>Если пропустить переменную окружения <code>GIT_HTTP_EXPORT_ALL</code>, тогда Git будет отдавать только неаутентифицированным клиентам репозитории с файлом <code>git-daemon-export-ok</code> внутри, также как это делает Git-демон.</p><p>Наконец, нужно разрешить Apache обрабатывать запросы к <code>git-http-backend</code>, при этом запросы на запись должны быть авторизованы, для этого можно использовать вот такой блок конфигурации:</p><div class="language-apache vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">apache</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Files</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;git-http-backend&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    AuthType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Basic</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    AuthName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &quot;Git Access&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    AuthUserFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /srv/git/.htpasswd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expr !(%{</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">QUERY_STRING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} -strmatch &#39;*service=git-receive-pack*&#39; || %{</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">REQUEST_URI</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} =~ m#/git-receive-pack$#)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    Require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> valid-user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Это потребует создания файла <code>.htpasswd</code>, содержащего пароли всех пользователей. Например, добавление пользователя «schacon» в этот файл делается так:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">htpasswd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /srv/git/.htpasswd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schacon</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">ПЫСЫ</p><p>При клонировании по http, вместо <code>/srv/git/</code> пишем просто <code>/git/</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_server_ip_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/git/my_project.git</span></span></code></pre></div><p>При пуше попросит логин/пароль.</p></div>`,171)]))}const o=i(p,[["render",e]]);export{c as __pageData,o as default};
