import{_ as i,c as a,o as t,ag as h}from"./chunks/framework.D4Vqf8I7.js";const g=JSON.parse('{"title":"Самостоятельная работа: Анализаторы пакетов tcpdump и tshark в контексте информационной безопасности GNU/Linux","description":"","frontmatter":{},"headers":[],"relativePath":"docs/disciplines/osis/s7.md","filePath":"docs/disciplines/osis/s7.md","lastUpdated":1760972908000}'),n={name:"docs/disciplines/osis/s7.md"};function l(p,s,e,k,d,r){return t(),a("div",null,s[0]||(s[0]=[h(`<h1 id="самостоятельная-работа-анализаторы-пакетов-tcpdump-и-tshark-в-контексте-информационнои-безопасности-gnu-linux" tabindex="-1"><strong>Самостоятельная работа: Анализаторы пакетов <code>tcpdump</code> и <code>tshark</code> в контексте информационной безопасности GNU/Linux</strong> <a class="header-anchor" href="#самостоятельная-работа-анализаторы-пакетов-tcpdump-и-tshark-в-контексте-информационнои-безопасности-gnu-linux" aria-label="Permalink to &quot;**Самостоятельная работа: Анализаторы пакетов \`tcpdump\` и \`tshark\` в контексте информационной безопасности GNU/Linux**&quot;">​</a></h1><hr><h2 id="блок-теории-анализ-сетевого-трафика-как-основа-кибербезопасности" tabindex="-1"><strong>Блок теории: Анализ сетевого трафика как основа кибербезопасности</strong> <a class="header-anchor" href="#блок-теории-анализ-сетевого-трафика-как-основа-кибербезопасности" aria-label="Permalink to &quot;**Блок теории: Анализ сетевого трафика как основа кибербезопасности**&quot;">​</a></h2><h3 id="_1-зачем-нужны-анализаторы-пакетов" tabindex="-1"><strong>1. Зачем нужны анализаторы пакетов?</strong> <a class="header-anchor" href="#_1-зачем-нужны-анализаторы-пакетов" aria-label="Permalink to &quot;**1. Зачем нужны анализаторы пакетов?**&quot;">​</a></h3><p>Сетевой трафик — это &quot;кровеносная система&quot; любой ИТ-инфраструктуры. Анализ пакетов позволяет:</p><ul><li><strong>Обнаруживать атаки</strong> (сканирование портов, DDoS, MITM).</li><li><strong>Диагностировать утечки данных</strong> (необычный исходящий трафик).</li><li><strong>Проверять корректность работы брандмауэров</strong>.</li><li><strong>Анализировать уязвимости приложений</strong> (незашифрованные пароли, устаревшие протоколы).</li><li><strong>Расследовать инциденты</strong> (forensic analysis).</li></ul><blockquote><p>⚠️ <strong>Важно!</strong> Захват трафика без разрешения является нарушением закона в большинстве стран. Используйте эти инструменты <strong>только в рамках этического хакинга или на своих системах</strong>.</p></blockquote><hr><h3 id="_2-tcpdump-—-консольныи-анализатор-трафика" tabindex="-1"><strong>2. <code>tcpdump</code> — консольный анализатор трафика</strong> <a class="header-anchor" href="#_2-tcpdump-—-консольныи-анализатор-трафика" aria-label="Permalink to &quot;**2. \`tcpdump\` — консольный анализатор трафика**&quot;">​</a></h3><h4 id="ключевые-особенности" tabindex="-1"><strong>Ключевые особенности</strong> <a class="header-anchor" href="#ключевые-особенности" aria-label="Permalink to &quot;**Ключевые особенности**&quot;">​</a></h4><ul><li><strong>Легковесный</strong>: Минимальные требования к ресурсам.</li><li><strong>Фильтрация на лету</strong>: Поддержка BPF (Berkeley Packet Filter).</li><li><strong>Сохранение в файл</strong>: Для последующего анализа.</li><li><strong>Интеграция с другими инструментами</strong>: Suricata, Zeek, Wireshark.</li></ul><h4 id="основные-опции" tabindex="-1"><strong>Основные опции</strong> <a class="header-anchor" href="#основные-опции" aria-label="Permalink to &quot;**Основные опции**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Опция</th><th>Назначение</th><th>Пример</th></tr></thead><tbody><tr><td><code>-i</code></td><td>Интерфейс</td><td><code>tcpdump -i eth0</code></td></tr><tr><td><code>-w</code></td><td>Сохранить в файл</td><td><code>tcpdump -w capture.pcap</code></td></tr><tr><td><code>-r</code></td><td>Прочитать из файла</td><td><code>tcpdump -r capture.pcap</code></td></tr><tr><td><code>-nn</code></td><td>Не разрешать имена</td><td><code>tcpdump -nn port 53</code></td></tr><tr><td><code>-c</code></td><td>Лимит пакетов</td><td><code>tcpdump -c 10 host 192.168.1.1</code></td></tr><tr><td><code>-s</code></td><td>Размер пакета</td><td><code>tcpdump -s 0</code> (полный дамп)</td></tr></tbody></table><h4 id="примеры-фильтров-bpf" tabindex="-1"><strong>Примеры фильтров BPF</strong> <a class="header-anchor" href="#примеры-фильтров-bpf" aria-label="Permalink to &quot;**Примеры фильтров BPF**&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Трафик к конкретному IP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.1.100</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DNS-запросы</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 53</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTP-трафик (незашифрованный)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SYN-флуд (атака)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tcp[13] &amp; 2 != 0&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> src</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10.0.0.5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Трафик к определенному порту</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dst</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22</span></span></code></pre></div><h4 id="применение-в-иб" tabindex="-1"><strong>Применение в ИБ</strong> <a class="header-anchor" href="#применение-в-иб" aria-label="Permalink to &quot;**Применение в ИБ**&quot;">​</a></h4><ul><li><p><strong>Обнаружение сканирования портов</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tcp[13] == 2&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sort</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> uniq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span></span></code></pre></div><p>Если один IP генерирует много SYN-пакетов — вероятен port scan.</p></li><li><p><strong>Поиск утечек данных</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tcp port 80 and (http contains &quot;password&quot; or http contains &quot;token&quot;)&#39;</span></span></code></pre></div></li></ul><hr><h3 id="_3-tshark-—-мощныи-анализатор-от-wireshark" tabindex="-1"><strong>3. <code>tshark</code> — мощный анализатор от Wireshark</strong> <a class="header-anchor" href="#_3-tshark-—-мощныи-анализатор-от-wireshark" aria-label="Permalink to &quot;**3. \`tshark\` — мощный анализатор от Wireshark**&quot;">​</a></h3><h4 id="ключевые-преимущества-перед-tcpdump" tabindex="-1"><strong>Ключевые преимущества перед tcpdump</strong> <a class="header-anchor" href="#ключевые-преимущества-перед-tcpdump" aria-label="Permalink to &quot;**Ключевые преимущества перед tcpdump**&quot;">​</a></h4><ul><li><strong>Глубокий анализ протоколов</strong>: Расшифровка TLS, HTTP/2, DNSSEC.</li><li><strong>Дисплей-фильтры</strong>: Как в графическом Wireshark (<code>http.request.method == &quot;POST&quot;</code>).</li><li><strong>Экспорт данных</strong>: В JSON, CSV, XML.</li><li><strong>Lua-скрипты</strong>: Автоматизация анализа.</li></ul><h4 id="основные-опции-1" tabindex="-1"><strong>Основные опции</strong> <a class="header-anchor" href="#основные-опции-1" aria-label="Permalink to &quot;**Основные опции**&quot;">​</a></h4><table tabindex="0"><thead><tr><th>Опция</th><th>Назначение</th><th>Пример</th></tr></thead><tbody><tr><td><code>-i</code></td><td>Интерфейс</td><td><code>tshark -i wlan0</code></td></tr><tr><td><code>-Y</code></td><td>Дисплей-фильтр</td><td><code>tshark -Y &quot;http&quot;</code></td></tr><tr><td><code>-T</code></td><td>Формат вывода</td><td><code>tshark -T json</code></td></tr><tr><td><code>-e</code></td><td>Конкретное поле</td><td><code>tshark -e ip.src -e http.host</code></td></tr><tr><td><code>-qz</code></td><td>Статистика</td><td><code>tshark -qz io,phs</code></td></tr></tbody></table><h4 id="примеры-использования" tabindex="-1"><strong>Примеры использования</strong> <a class="header-anchor" href="#примеры-использования" aria-label="Permalink to &quot;**Примеры использования**&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Анализ HTTP-запросов</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fields</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.request.uri</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Поиск попыток SQL-инъекций</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http contains &quot;SELECT * FROM&quot;&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Статистика по протоколам</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> io,phs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Анализ TLS-рукопожатий (устаревшие версии)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tls.handshake&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fields</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tls.handshake.version</span></span></code></pre></div><h4 id="применение-в-иб-1" tabindex="-1"><strong>Применение в ИБ</strong> <a class="header-anchor" href="#применение-в-иб-1" aria-label="Permalink to &quot;**Применение в ИБ**&quot;">​</a></h4><ul><li><p><strong>Обнаружение уязвимых SSL/TLS-конфигураций</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tls.handshake.ciphersuite == 0x0035&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Поиск SSLv3 (уязвим к POODLE)</span></span></code></pre></div></li><li><p><strong>Анализ DNS-туннелирования</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dns.qry.name contains &quot;malicious&quot;&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fields</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dns.qry.name</span></span></code></pre></div></li><li><p><strong>Поиск C2-трафика (Command &amp; Control)</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;http and http.host contains &quot;pastebin.com&quot;&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json</span></span></code></pre></div></li></ul><hr><h3 id="_4-сравнение-tcpdump-vs-tshark" tabindex="-1"><strong>4. Сравнение tcpdump vs tshark</strong> <a class="header-anchor" href="#_4-сравнение-tcpdump-vs-tshark" aria-label="Permalink to &quot;**4. Сравнение tcpdump vs tshark**&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Критерий</th><th><code>tcpdump</code></th><th><code>tshark</code></th></tr></thead><tbody><tr><td><strong>Скорость</strong></td><td>Выше (меньше оверхеда)</td><td>Ниже (глубокий анализ)</td></tr><tr><td><strong>Фильтрация</strong></td><td>BPF (низкоуровневая)</td><td>Дисплей-фильтры (протокольные)</td></tr><tr><td><strong>Шифрованный трафик</strong></td><td>Только заголовки</td><td>Расшифровка при наличии ключей</td></tr><tr><td><strong>Экспорт данных</strong></td><td>Ограниченный</td><td>JSON, CSV, XML, Lua</td></tr><tr><td><strong>Обучение</strong></td><td>Проще</td><td>Требует знания Wireshark</td></tr><tr><td><strong>Использование в скриптах</strong></td><td>Идеален</td><td>Сложнее из-за форматов</td></tr></tbody></table><blockquote><p>💡 <strong>Совет</strong>: Используйте <code>tcpdump</code> для быстрого захвата, а <code>tshark</code> — для детального анализа.</p></blockquote><hr><h2 id="практическая-часть-задания-по-анализу-трафика" tabindex="-1"><strong>Практическая часть: задания по анализу трафика</strong> <a class="header-anchor" href="#практическая-часть-задания-по-анализу-трафика" aria-label="Permalink to &quot;**Практическая часть: задания по анализу трафика**&quot;">​</a></h2><h3 id="задание-1-базовыи-захват-трафика" tabindex="-1"><strong>Задание 1: Базовый захват трафика</strong> <a class="header-anchor" href="#задание-1-базовыи-захват-трафика" aria-label="Permalink to &quot;**Задание 1: Базовый захват трафика**&quot;">​</a></h3><p><strong>Цель</strong>: Научиться сохранять и просматривать трафик.</p><ol><li><p>Установите инструменты:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcpdump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tshark</span></span></code></pre></div></li><li><p>Захватите трафик на интерфейсе <code>eth0</code> (замените на ваш):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcpdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> initial_capture.pcap</span></span></code></pre></div><ul><li>Выполните 2-3 действия: <code>ping 8.8.8.8</code>, <code>curl http://example.com</code>.</li><li>Остановите захват (<code>Ctrl+C</code>).</li></ul></li><li><p>Проанализируйте файл:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tcpdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> initial_capture.pcap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -nn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> initial_capture.pcap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http or dns&quot;</span></span></code></pre></div></li></ol><p><strong>Вопросы для отчёта</strong>:</p><ul><li>Какие протоколы вы обнаружили?</li><li>Сколько DNS-запросов было сделано при открытии example.com?</li></ul><hr><h3 id="задание-2-обнаружение-аномалии" tabindex="-1"><strong>Задание 2: Обнаружение аномалий</strong> <a class="header-anchor" href="#задание-2-обнаружение-аномалии" aria-label="Permalink to &quot;**Задание 2: Обнаружение аномалий**&quot;">​</a></h3><p><strong>Цель</strong>: Найти признаки атаки в трафике.</p><ol><li><p>Скачайте <a href="https://www.malware-traffic-analysis.net/2023/01/13/index.html" target="_blank" rel="noreferrer">образец вредоносного трафика</a> (выберите PCAP-файл).</p></li><li><p>Проанализируйте его:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> malware.pcap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fields</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.request.uri</span></span></code></pre></div></li><li><p>Найдите подозрительные домены:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> malware.pcap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dns&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;malicious&quot;</span></span></code></pre></div></li></ol><p><strong>Вопросы для отчёта</strong>:</p><ul><li>Какие домены используются для C2?</li><li>Какой HTTP-метод чаще всего используется вредоносом?</li></ul><hr><h3 id="задание-3-анализ-шифрованного-трафика" tabindex="-1"><strong>Задание 3: Анализ шифрованного трафика</strong> <a class="header-anchor" href="#задание-3-анализ-шифрованного-трафика" aria-label="Permalink to &quot;**Задание 3: Анализ шифрованного трафика**&quot;">​</a></h3><p><strong>Цель</strong>: Научиться работать с TLS-трафиком.</p><ol><li><p>Сгенерируйте трафик с HTTPS:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://google.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span></span></code></pre></div></li><li><p>Захватите трафик:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcpdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tls_capture.pcap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> port</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 443</span></span></code></pre></div></li><li><p>Проанализируйте через <code>tshark</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tls_capture.pcap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tls.handshake&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fields</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tls.handshake.ciphersuite</span></span></code></pre></div></li></ol><p><strong>Вопросы для отчёта</strong>:</p><ul><li>Какая версия TLS используется?</li><li>Какой шифрнабор (ciphersuite) выбран? Найдите его описание в <a href="https://tools.ietf.org/html/rfc8446" target="_blank" rel="noreferrer">RFC 8446</a>.</li></ul><hr><h3 id="задание-4-автоматизация-анализа-продвинутое" tabindex="-1"><strong>Задание 4: Автоматизация анализа (продвинутое)</strong> <a class="header-anchor" href="#задание-4-автоматизация-анализа-продвинутое" aria-label="Permalink to &quot;**Задание 4: Автоматизация анализа (продвинутое)**&quot;">​</a></h3><p><strong>Цель</strong>: Создать скрипт для обнаружения SYN-флуда.</p><ol><li><p>Напишите скрипт <code>syn_flood_detector.sh</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">THRESHOLD</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">100</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Порог SYN-пакетов за 10 секунд</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">INTERFACE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;eth0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Monitoring SYN flood on </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$INTERFACE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  COUNT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcpdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $INTERFACE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $THRESHOLD </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;tcp[13] &amp; 2 != 0&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ $COUNT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-ge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $THRESHOLD ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[ALERT] Possible SYN flood! $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> syn_flood.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcpdump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $INTERFACE </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;syn_flood_$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +%s).pcap&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;tcp[13] &amp; 2 != 0&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  fi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div></li><li><p>Запустите скрипт в фоне:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> syn_flood_detector.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./syn_flood_detector.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span></span></code></pre></div></li><li><p>Имитируйте атаку (в другой сессии):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1..150}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> nc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 127.0.0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div></li></ol><p><strong>Вопросы для отчёта</strong>:</p><ul><li>Как работает механизм обнаружения?</li><li>Как улучшить скрипт (например, добавить учёт источника атаки)?</li></ul><hr><h2 id="контрольные-вопросы" tabindex="-1"><strong>Контрольные вопросы</strong> <a class="header-anchor" href="#контрольные-вопросы" aria-label="Permalink to &quot;**Контрольные вопросы**&quot;">​</a></h2><ol><li><p><strong>Чем BPF-фильтры в <code>tcpdump</code> отличаются от дисплей-фильтров в <code>tshark</code>?</strong></p><ul><li>BPF: фильтрация на уровне ядра (до обработки), работает с заголовками.</li><li>Дисплей-фильтры: обрабатывают уже расшифрованные пакеты, работают с логикой протоколов.</li></ul></li><li><p><strong>Как обнаружить DNS-туннелирование с помощью <code>tshark</code>?</strong></p><ul><li>Искать аномально длинные DNS-запросы: <code>tshark -Y &quot;dns.qry.name.len &gt; 50&quot;</code>.</li></ul></li><li><p><strong>Почему <code>tcpdump</code> не может анализировать содержимое HTTPS-трафика?</strong></p><ul><li>TLS шифрует payload. Для анализа нужен ключ сессии или MITM (только в тестовых средах).</li></ul></li><li><p><strong>Как сохранить только HTTP-заголовки в файл?</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tshark</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fields</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.request.method</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.host</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http.user_agent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http_headers.txt</span></span></code></pre></div></li></ol><hr><h2 id="дополнительные-материалы-для-углубленного-изучения" tabindex="-1"><strong>Дополнительные материалы для углублённого изучения</strong> <a class="header-anchor" href="#дополнительные-материалы-для-углубленного-изучения" aria-label="Permalink to &quot;**Дополнительные материалы для углублённого изучения**&quot;">​</a></h2><ol><li><p><strong>Книги</strong>:</p><ul><li><em>Packet Analysis with Wireshark</em> — Laura Chappell</li><li><em>Network Security Assessment</em> — Chris McNab (глава 3: Network Enumeration)</li></ul></li><li><p><strong>Онлайн-ресурсы</strong>:</p><ul><li><a href="https://www.wireshark.org/docs/dfref/" target="_blank" rel="noreferrer">Wireshark Display Filter Reference</a></li><li><a href="https://www.tcpdump.org/manpages/tcpdump.1.html" target="_blank" rel="noreferrer">tcpdump man page</a></li><li><a href="https://www.malware-traffic-analysis.net/" target="_blank" rel="noreferrer">Malware Traffic Analysis</a> — реальные PCAP-файлы</li></ul></li><li><p><strong>Инструменты</strong>:</p><ul><li><code>zeek</code> (ранее Bro) — система сетевой безопасности.</li><li><code>suricata</code> — IDS с поддержкой Lua-скриптов.</li><li><code>ngrep</code> — grep для сетевого трафика.</li></ul></li></ol><hr><h2 id="заключение" tabindex="-1"><strong>Заключение</strong> <a class="header-anchor" href="#заключение" aria-label="Permalink to &quot;**Заключение**&quot;">​</a></h2><p>Анализ сетевого трафика — это <strong>ключевой навык специалиста по ИБ</strong>. Инструменты вроде <code>tcpdump</code> и <code>tshark</code> позволяют:</p><ul><li><strong>Видеть невидимое</strong>: То, что скрыто от стандартных логов.</li><li><strong>Реагировать мгновенно</strong>: На этапе атаки, а не после её завершения.</li><li><strong>Говорить на языке данных</strong>: Заменять догадки — фактами.</li></ul><p>💡 <strong>Практический совет</strong>:</p><blockquote><p>&quot;Если вы не анализируете трафик своей сети — вы не знаете, что в ней происходит.<br> Начните с простого: ежедневный анализ 1% трафика.&quot;</p></blockquote><hr><p><strong>Критерии оценки самостоятельной работы</strong>:</p><ul><li>Выполнение всех заданий (60 баллов).</li><li>Ответы на контрольные вопросы (20 баллов).</li><li>Креативное решение продвинутого задания (10 баллов).</li><li>Ссылки на дополнительные материалы в отчёте (10 баллов).</li></ul><p><strong>Срок сдачи</strong>: 7 дней.<br><strong>Формат отчёта</strong>: PDF с командами, выводами и скриншотами.</p>`,72)]))}const F=i(n,[["render",l]]);export{g as __pageData,F as default};
