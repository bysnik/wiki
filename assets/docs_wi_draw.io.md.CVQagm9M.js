import{_ as i,c as t,o as s,ag as e}from"./chunks/framework.D4Vqf8I7.js";const k=JSON.parse('{"title":"draw.io","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/draw.io.md","filePath":"docs/wi/draw.io.md","lastUpdated":1757671724000}'),o={name:"docs/wi/draw.io.md"};function r(l,a,h,d,n,p){return s(),t("div",null,a[0]||(a[0]=[e('<h1 id="draw-io" tabindex="-1">draw.io <a class="header-anchor" href="#draw-io" aria-label="Permalink to &quot;draw.io&quot;">​</a></h1><p><img src="https://www.drawio.com/assets/img/blog/simple-mode.png" alt=""></p><h2 id="введение" tabindex="-1">Введение <a class="header-anchor" href="#введение" aria-label="Permalink to &quot;Введение&quot;">​</a></h2><p><a href="https://github.com/jgraph/drawio" target="_blank" rel="noreferrer">draw.io</a> — это приложение для совместной работы и создания диаграмм. Этот проект содержит различные реализации draw.io в Docker и связанные с ним инструменты:</p><ul><li>Docker-образ draw.io, который всегда обновляется в соответствии с релизами draw.io</li><li>Образ сервера экспорта draw.io, позволяющий экспортировать диаграммы в pdf и изображения</li><li>docker-compose для запуска draw.io вместе с сервером экспорта</li><li>docker-compose для запуска draw.io, интегрированного в nextcloud</li><li>docker-compose для запуска автономной версии draw.io без каких-либо зависимостей от веб-сайта diagrams.net (с сервером экспорта, поддержкой Google Drive, поддержкой OneDrive и поддержкой преобразования EMF для экспорта VSDX)</li></ul><h2 id="описание" tabindex="-1">Описание <a class="header-anchor" href="#описание" aria-label="Permalink to &quot;Описание&quot;">​</a></h2><p>Dockerfile собирается на основе <code>tomcat:9-jre11</code> (см. <a href="https://hub.docker.com/_/tomcat/" target="_blank" rel="noreferrer">https://hub.docker.com/_/tomcat/</a>)</p><p><strong>Примечание: Начиная с версии 16.5.3, образы на основе alpine и debian больше не поддерживаются. Мы перешли на единый образ, использующий образ tomcat с наименьшим количеством уязвимостей безопасности.</strong></p><p>Ответвлен от <a href="https://github.com/fjudith/docker-draw.io" target="_blank" rel="noreferrer">fjudith/draw.io</a></p><h2 id="возможности" tabindex="-1">Возможности <a class="header-anchor" href="#возможности" aria-label="Permalink to &quot;Возможности&quot;">​</a></h2><ul><li>Основан на Tomcat, поэтому может использоваться напрямую или за обратным прокси-сервером</li><li>Автогенерация самоподписанного сертификата</li><li>Автогенерация сертификата Let&#39;s encrypt</li><li>Поддержка монтирования SSL Keystore в <code>/user/local/tomcat/.keystore</code></li></ul><h2 id="быстрыи-старт" tabindex="-1">Быстрый старт <a class="header-anchor" href="#быстрыи-старт" aria-label="Permalink to &quot;Быстрый старт&quot;">​</a></h2><p>Запустите контейнер.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;draw&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8080:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8443:8443</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jgraph/drawio</span></span></code></pre></div><blockquote><p><code>?offline=1</code> — это функция безопасности, которая отключает поддержку облачных хранилищ.</p></blockquote><h2 id="переменные-окружения" tabindex="-1">Переменные окружения <a class="header-anchor" href="#переменные-окружения" aria-label="Permalink to &quot;Переменные окружения&quot;">​</a></h2><ul><li><strong>LETS_ENCRYPT_ENABLED</strong>: Включает сертификат Let&#39;s Encrypt вместо самоподписанного; по умолчанию <code>false</code></li><li><strong>PUBLIC_DNS</strong>: Доменное имя DNS, используемое в качестве записи &quot;CN&quot; сертификата; по умолчанию <code>draw.example.com</code></li><li><strong>ORGANISATION_UNIT</strong>: Организационное подразделение, используемое в качестве записи &quot;OU&quot; сертификата; по умолчанию <code>Cloud Native Application</code></li><li><strong>ORGANISATION</strong>: Название организации, используемое в качестве записи &quot;O&quot; сертификата; по умолчанию <code>example inc</code></li><li><strong>CITY</strong>: Название города, используемое в качестве записи &quot;L&quot; сертификата; по умолчанию <code>Paris</code></li><li><strong>STATE</strong>: Название штата/провинции, используемое в качестве записи &quot;ST&quot; сертификата; по умолчанию <code>Paris</code></li><li><strong>COUNTRY_CODE</strong>: Код страны, используемый в качестве записи &quot;C&quot; сертификата; по умолчанию <code>FR</code></li><li><strong>KEYSTORE_PASS</strong>: Пароль хранилища &quot;.keystore&quot;/.jks&quot;; по умолчанию <code>V3ry1nS3cur3P4ssw0rd</code></li><li><strong>KEY_PASS</strong>: Пароль закрытого ключа; по умолчанию <code>&lt;ref:KEYSTORE_PASS&gt;</code></li></ul><h2 id="https-ssl-сертификат-через-let-s-encrypt" tabindex="-1">HTTPS SSL сертификат через Let&#39;s Encrypt <a class="header-anchor" href="#https-ssl-сертификат-через-let-s-encrypt" aria-label="Permalink to &quot;HTTPS SSL сертификат через Let&#39;s Encrypt&quot;">​</a></h2><h3 id="предварительные-требования" tabindex="-1">Предварительные требования: <a class="header-anchor" href="#предварительные-требования" aria-label="Permalink to &quot;Предварительные требования:&quot;">​</a></h3><ol><li>Linux-машина, подключенная к Интернету, с открытыми портами 443 и 80</li><li>Доменное имя/поддомен, указывающий на IP-адрес этой машины. (например, drawio.example.com)</li></ol><h3 id="метод" tabindex="-1">Метод: <a class="header-anchor" href="#метод" aria-label="Permalink to &quot;Метод:&quot;">​</a></h3><ol><li>Создайте каталог для хранения данных letsencrypt. (например, /opt/docker/drawiodata/letsencrypt-log, /opt/docker/drawiodata/letsencrypt-etc, /opt/docker/drawiodata/letsencrypt-lib)</li><li>Используя образ Docker jgraph/drawio, выполните следующую команду</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m1g</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/docker/drawiodata/letsencrypt-log:/var/log/letsencrypt/&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/docker/drawiodata/letsencrypt-etc:/etc/letsencrypt/&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/opt/docker/drawiodata/letsencrypt-lib:/var/lib/letsencrypt&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LETS_ENCRYPT_ENABLED=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PUBLIC_DNS=drawio.example.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;draw&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80:80</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 443:8443</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jgraph/drawio</span></span></code></pre></div><p>Обратите внимание, что проброс порта 80 на порт 80 контейнера позволяет certbot работать в автономном режиме. Проброс порта 443 на порт 8443 контейнера позволяет tomcat напрямую обслуживать https-запросы.</p><h2 id="изменение-конфигурации-draw-io" tabindex="-1">Изменение конфигурации draw.io <a class="header-anchor" href="#изменение-конфигурации-draw-io" aria-label="Permalink to &quot;Изменение конфигурации draw.io&quot;">​</a></h2><p>Конфигурация управляется переменными окружения <code>DRAWIO_*</code>. Для получения списка этих переменных проверьте файл <code>docker-entrypoint.sh</code> в директории <code>main</code>. Например, эти переменные позволяют включить интеграцию с Google Drive, OneDrive, ...</p><h2 id="ссылки" tabindex="-1">Ссылки <a class="header-anchor" href="#ссылки" aria-label="Permalink to &quot;Ссылки&quot;">​</a></h2><ul><li><a href="https://github.com/jgraph/drawio" target="_blank" rel="noreferrer">https://github.com/jgraph/drawio</a></li></ul>',28)]))}const g=i(o,[["render",r]]);export{k as __pageData,g as default};
