import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.D4Vqf8I7.js";const c=JSON.parse('{"title":"Harbor","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/wi/harbor.md","filePath":"docs/wi/harbor.md","lastUpdated":1754565804000}'),h={name:"docs/wi/harbor.md"};function p(l,s,n,r,o,k){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="harbor" tabindex="-1">Harbor <a class="header-anchor" href="#harbor" aria-label="Permalink to &quot;Harbor&quot;">​</a></h1><p><img src="https://habrastorage.org/r/w1560/webt/to/ed/6i/toed6ijlvl_n0r90t6rgvmzbixa.png" alt=""></p><p>Harbor — это бесплатный реестр для хранения Docker и Podman образов c открытым исходным кодом, который предоставляет доступ к образам с помощью политик, а также умеет сканировать образы на наличие уязвимостей.</p><p>Он состоит из набора взаимосвязанных контейнеров.</p><p><a href="https://goharbor.io/docs/1.10/administration/" target="_blank" rel="noreferrer">Жёстко читаем документацию</a></p><h2 id="установка" tabindex="-1">Установка <a class="header-anchor" href="#установка" aria-label="Permalink to &quot;Установка&quot;">​</a></h2><h3 id="шаг-1-установка-docker-и-docker-compose" tabindex="-1">Шаг 1. Установка docker и docker-compose <a class="header-anchor" href="#шаг-1-установка-docker-и-docker-compose" aria-label="Permalink to &quot;Шаг 1. Установка docker и docker-compose&quot;">​</a></h3><p><a href="./docker.html">Установите Docker и Docker Compose.</a></p><h3 id="шаг-2-скачивание-архива-офлаин-установщика" tabindex="-1">Шаг 2. Скачивание архива офлайн установщика <a class="header-anchor" href="#шаг-2-скачивание-архива-офлаин-установщика" aria-label="Permalink to &quot;Шаг 2. Скачивание архива офлайн установщика&quot;">​</a></h3><p>На сервере перейдите на страницу релизов Harbor и скачайте архив <code>harbor-offline-installer-vX.Y.Z.tgz</code>, или в терминале выполните следующую команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/goharbor/harbor/releases/download/vX.Y.Z/harbor-offline-installer-vX.Y.Z.tgz</span></span></code></pre></div><p>В место vX.Y.Z необходимо подставить версию, например v2.13.2.</p><p>Распакуйте архив на сервере, где будет производиться установка и скопируйте конфигурационный файл по умолчанию <code>harbor.yml.tmpl</code> в <code>harbor.yml</code>. Для этого выполните команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> harbor-offline-installer-vX.Y.Z.tgz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> harbor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> harbor.yml.tmpl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> harbor.yml</span></span></code></pre></div><h3 id="шаг-3-заполнение-конфигурационного-фаила-harbor-yml" tabindex="-1">Шаг 3. Заполнение конфигурационного файла harbor.yml <a class="header-anchor" href="#шаг-3-заполнение-конфигурационного-фаила-harbor-yml" aria-label="Permalink to &quot;Шаг 3. Заполнение конфигурационного файла harbor.yml&quot;">​</a></h3><p>Заполните переменные в файле <code>harbor.yml</code>.</p><p>Для этого зададим в параметре hostname домен FQDN или ip адрес, по которому будет доступен реестр, например, зададим доменное имя <code>registry.example.com</code>.</p><p>Определите протоколы, по которым будет доступен репозиторий.</p><p>Если реестр должен быть доступен только по протоколу <code>http</code>, закомментируйте параметры секции <code>https</code> и в параметре <code>trivy.insecure</code> выставьте значение <code>true</code>.</p><p>Номера портов для параметров <code>http.port</code> и <code>https.port</code>:</p><ul><li>80 для HTTP;</li><li>443 для HTTPS.</li></ul><p>Укажите путь до файла открытого сертификата в параметре <code>https.certificate</code> и в <code>https.private_key</code> укажите путь до файла закрытого ключа.</p><p>Задайте пароль для пользователя <code>admin</code> в параметре <code>harbor_admin_password</code>. При необходимости в параметре <code>data_volume</code> измените путь до каталога, где будут храниться образы.</p><p>Настройте остальные параметры согласно вашей политике безопасности и предполагаемой нагрузке.</p><h4 id="s3-хранилище" tabindex="-1">S3 Хранилище <a class="header-anchor" href="#s3-хранилище" aria-label="Permalink to &quot;S3 Хранилище&quot;">​</a></h4><p>Если вы планируете использовать хранилище S3, например <a href="./minio.html">MinIO</a> для данных, добавьте примерно следующие строки в файл harbor.yml:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">storage_service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  s3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    region</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ru-central-1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    bucket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">testbucket</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    accesskey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MINIO_ROOT_USER</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    secretkey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MINIO_ROOT_PASSWORD</span></span></code></pre></div><h3 id="шаг-4-установка-harbor" tabindex="-1">Шаг 4. Установка Harbor <a class="header-anchor" href="#шаг-4-установка-harbor" aria-label="Permalink to &quot;Шаг 4. Установка Harbor&quot;">​</a></h3><p>Установите Harbor, выполнив следующую команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install.sh</span></span></code></pre></div><p>Если вы хотите подключить сканер уязвимостей <a href="./altsp/15.trivy.html">Trivy</a>, то необходимо добавить параметр:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-trivy</span></span></code></pre></div><p>Чтобы установить Harbor со службой Notary, добавьте --with-notary параметр при запуске install.sh:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-notary</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Для установки со службой Notary необходимо настроить Harbor на использование HTTPS.</p></div><p>Чтобы установить Harbor со службой репозитория диаграмм, добавьте --with-chartmuseum параметр при запуске install.sh:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./install.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-chartmuseum</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Чтобы использовать несколько служб, просто используйте одновременно несколько параметров.</p></div><p>Дождитесь окончания работы скрипта установки.</p><p>Запустите браузер и откройте страницу входа в Harbor по адресу <a href="http://hostname" target="_blank" rel="noreferrer">http://hostname</a> или <a href="https://hostname" target="_blank" rel="noreferrer">https://hostname</a>. Параметр <code>hostname</code> указывали при заполнении в файле конфигурации <code>harbor.ym</code> на шаге заполнение конфигурационного файла.</p><p>В данном примере адрес страницы входа в Harbor — <a href="https://registry.example.com" target="_blank" rel="noreferrer">https://registry.example.com</a>.</p><p>Войдите в систему с именем пользователя <code>admin</code> и паролем, установленным в файле <code>harbor.yml</code> в параметре <code>harbor_admin_password</code>.</p><p>Откроется окно проектов в Harbor.</p><p>Установка приватного реестра Harbor закончена.</p><h2 id="пушим-docker-образ-в-harbor" tabindex="-1">Пушим Docker образ в Harbor <a class="header-anchor" href="#пушим-docker-образ-в-harbor" aria-label="Permalink to &quot;Пушим Docker образ в Harbor&quot;">​</a></h2><p>Прежде чем вы сможете пушить образ в Harbor, вы должны создать соответствующий проект в интерфейсе Harbor. По умолчанию уже существует проект <code>library</code></p><p>Необходимо залогиниться в Harbor:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">harbor_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Затем введите свое имя пользователя и пароль, когда вас попросят.</p><p>Если видите ошибку: <code>Error response from daemon: Get https://myregistrydomain.com/v1/users/: dial tcp myregistrydomain.com:443 getsockopt: connection refused.</code>, тогда обратитесь к <a href="./docker.html#настройка-подключение-клинта-docker-к-репозиторию-по-http">гайду</a>.</p><p>Создаем тэг.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">image_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">harbor_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">project_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">image_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Пушим образ.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">harbor_addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">project_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">image_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h2 id="пушим-podman-образ-в-harbor" tabindex="-1">Пушим Podman образ в Harbor <a class="header-anchor" href="#пушим-podman-образ-в-harbor" aria-label="Permalink to &quot;Пушим Podman образ в Harbor&quot;">​</a></h2><p>Прежде чем вы сможете пушить образ в Harbor, вы должны создать соответствующий проект в интерфейсе Harbor. По умолчанию уже существует проект <code>library</code></p><p>Используйте команду podman login с URL Harbor и именем пользователя/паролем. Например:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">podman</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-harbor-domain.com</span></span></code></pre></div><p>Затем введите свое имя пользователя и пароль, когда вас попросят.</p><p>Используйте команду podman push с полным именем образа, которое включает URL Harbor, имя проекта и имя образа. Например:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">podman</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-image:latest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-harbor-domain.com/my-project/my-image:latest</span></span></code></pre></div><p>В этом примере:</p><ul><li>my-image:latest - это локальный образ, который вы хотите отправить.</li><li>your-harbor-domain.com - это URL вашего Harbor.</li><li>my-project - это имя проекта в Harbor.</li><li>my-image:latest - это имя образа в Harbor, которое может отличаться от локального.</li></ul>`,63)]))}const g=a(h,[["render",p]]);export{c as __pageData,g as default};
