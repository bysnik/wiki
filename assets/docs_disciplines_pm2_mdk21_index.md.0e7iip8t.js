import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.D4Vqf8I7.js";const c=JSON.parse('{"title":"Практические работы: Написание различных типов юнитов systemd","description":"","frontmatter":{},"headers":[],"relativePath":"docs/disciplines/pm2/mdk21/index.md","filePath":"docs/disciplines/pm2/mdk21/index.md","lastUpdated":1757693151000}'),l={name:"docs/disciplines/pm2/mdk21/index.md"};function n(h,s,p,d,o,r){return e(),a("div",null,s[0]||(s[0]=[t(`<p>Основы работы в ФС, iperf3, df, du, smartctl, iotop, iostat, top, htop, vmstat, systemctl, ps, strace, netstat, ifconfig, ip, traceroute, ping, mtr, tcpdump, syslog, dmesg, journalctl</p><p>Большая часть дисциплины - это изучение сетевых конфигураций. Это вам не два компа пинговать. Ансибле и прочее</p><p><a href="http://www2.kangran.su/~nnz/pub/perf_rs/perf_rs_latest.pdf" target="_blank" rel="noreferrer">http://www2.kangran.su/~nnz/pub/perf_rs/perf_rs_latest.pdf</a> - книжонка по iptables</p><h2 id="что-такое-уровень-выполнения-runlevel-в-linux-и-как-посмотреть-текущии" tabindex="-1">Что такое уровень выполнения (runlevel) в Linux и как посмотреть текущий? <a class="header-anchor" href="#что-такое-уровень-выполнения-runlevel-в-linux-и-как-посмотреть-текущии" aria-label="Permalink to &quot;Что такое уровень выполнения (runlevel) в Linux и как посмотреть текущий?&quot;">​</a></h2><p>Уровни выполнения (runlevel) Linux можно представить, как режим, в котором запускается система. Каждый из этих режимов обладают своими процессами, которые включены или выключены в зависимости от запущенного уровня выполнения. С момента загрузки Linux выполняется в одном из режимов, нельзя запускать систему одновременно в нескольких режимах, но есть возможность переключаться между уровнями во время работы на компьютере.</p><p>В системе Linux есть семь уровней выполнения, которые нумеруются от 0 до 6. Разные дистрибутивы по-разному используют уровни выполнения, так что очень сложно составить список задач, которые выполняет конкретный уровень.</p><p>Обычно уровни выполнения выглядят следующим образом:</p><ul><li>Runlevel 0 завершает работу системы.</li><li>Runlevel 1 однопользовательский режим работы. Чаще всего используется в целях обслуживания и выполнения других административных задач. Это уровень также может называться runlevel S, где S означает single-user.</li></ul><div class="tip custom-block"><p class="custom-block-title">Цитата из <a href="http://www2.kangran.su/~nnz/pub/s4a/s4a_latest.pdf" target="_blank" rel="noreferrer">systemd для администраторов Lennart Poettering</a></p><p>Дистрибутивно-специфичные квази-уровни исполнения, используемые для организации запуска скриптов на ранних стадиях загрузки, больше не поддерживаются. Примерами таких уровней являются S в Debian и b в openSUSE. Разумеется, это никак не затрагивает поддержку обычных уровней исполнения, которую мы намерены сохранять еще очень долго.</p></div><ul><li>Runlevel 2 многопользовательский режим работы без поддержки сетевых служб (демонов).</li><li>Runlevel 3 многопользовательский режим с поддержкой сети, но без графического интерфейса. Чаще всего серверные версии Linux работают именно на этом уровне выполнения.</li><li>Runlevel 4 не используется. Пользователь может настраивать этот уровень исходя из его целей.</li><li>Runlevel 5 этот режим схож с уровнем 3, но тут еще запускается графический интерфейс. В этом режиме работают десктопные версии Linux.</li><li>Runlevel 6 этот уровень перезагружает систему.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Чтобы узнать текущий уровень выполнения достаточно ввести команду runlevel в командной строке. Текущий уровень выполнения можно менять командой telinit</p><p>Неа, в альте нет этого софта, этот софт не относится к временам systemd</p></div><p>Чтобы проверить текущий «runlevel» (уровень выполнения) в системе с systemd, используйте команду systemctl get-default для определения целевого юнита (target), который соответствует традиционному уровню запуска, или команду who -r, чтобы увидеть текущий уровень выполнения (хотя этот метод больше относится к классическим системам init).</p><p>Чтобы изменить текущий runlevel в системе с systemd, используйте команду <code>sudo systemctl isolate &lt;target&gt;</code>, где <code>&lt;target&gt;</code> — это название целевого объекта (target), например, <code>multi-user.target</code> для запуска в режиме командной строки или <code>graphical.target</code> для графического режима. Вы также можете изменить целевой объект по умолчанию, чтобы система загружалась в него при каждом запуске, используя команду <code>sudo systemctl set-default &lt;target&gt;</code>.</p><p>В последние годы systemd сменила многолетнюю систему уровней доступа (System V init). Фактически он работает по тому же принципу, но использует новые команды, которые в целом используют «runlevel» как «target»:</p><ul><li>Runlevel 0 = poweroff.target (runlevel0.target)</li><li>Runlevel 1 = rescue.target (runlevel1.target)</li><li>Runlevel 2 = multi-user.target (runlevel2.target)</li><li>Runlevel 3 = multi-user.target (runlevel3.target)</li><li>Runlevel 4 = multi-user.target (runlevel4.target)</li><li>Runlevel 5 = graphical.target (runlevel5.target)</li><li>Runlevel 6 = reboot.target (runlevel6.target)</li></ul><div class="tip custom-block"><p class="custom-block-title">Цитата из <a href="http://www2.kangran.su/~nnz/pub/s4a/s4a_latest.pdf" target="_blank" rel="noreferrer">systemd для администраторов Lennart Poettering</a></p><p>По умолчанию, уровни исполнения 2, 3 и 4 являются эквивалентами целевого состояния <code>multi-user.target</code>. Если включить службу на одном из них, то она будет включена и на остальных. Впрочем, это лишь настройка по умолчанию, и ничто не мешает вам определить их независимо. Тем не менее, мы рекомендуем отказаться от уровней исполнения в пользу более гибкого механизма целевых состояний systemd.</p></div><p><strong>Теоретическая статья: Архитектура systemd — современная система инициализации Linux</strong></p><hr><h3 id="введение" tabindex="-1">Введение <a class="header-anchor" href="#введение" aria-label="Permalink to &quot;Введение&quot;">​</a></h3><p><code>systemd</code> — это система инициализации (init-система) и менеджер служб, разработанный для замены традиционных init-систем на основе скриптов, таких как SysVinit. Впервые представленная в 2010 году Леннартом Пёттингом (Lennart Poettering), systemd быстро стала стандартом де-факто в большинстве дистрибутивов Linux, включая Fedora, Debian, Ubuntu, openSUSE и другие.</p><p>Основная цель systemd — ускорить процесс загрузки системы, обеспечить более надёжное управление зависимостями между службами и предоставить унифицированный интерфейс для управления ресурсами системы. В этой статье мы рассмотрим архитектуру systemd, её ключевые компоненты и взаимосвязи между ними.</p><hr><h3 id="архитектура-systemd" tabindex="-1">Архитектура systemd <a class="header-anchor" href="#архитектура-systemd" aria-label="Permalink to &quot;Архитектура systemd&quot;">​</a></h3><p>systemd — это не просто init-процесс, а целая экосистема компонентов, объединённых под единым именем. Она построена вокруг центрального демона <code>systemd</code>, который запускается первым (PID 1) и управляет всей системой. Архитектура systemd построена по принципу модульности и интеграции, что позволяет ей управлять не только службами, но и устройствами, сессиями пользователей, сетевыми настройками и другими аспектами работы ОС.</p><hr><h3 id="основные-компоненты-systemd" tabindex="-1">Основные компоненты systemd <a class="header-anchor" href="#основные-компоненты-systemd" aria-label="Permalink to &quot;Основные компоненты systemd&quot;">​</a></h3><h4 id="_1-systemd-pid-1" tabindex="-1">1. <strong>systemd (PID 1)</strong> <a class="header-anchor" href="#_1-systemd-pid-1" aria-label="Permalink to &quot;1. **systemd (PID 1)**&quot;">​</a></h4><p>Центральный демон, запускаемый ядром при загрузке. Он:</p><ul><li>Является родителем всех процессов (если они не запущены в изоляции).</li><li>Управляет жизненным циклом служб (unit’ов).</li><li>Обрабатывает зависимости между юнитами.</li><li>Реагирует на события от других компонентов (например, udev).</li><li>Реализует параллельный запуск служб для ускорения загрузки.</li></ul><p><strong>Особенности:</strong></p><ul><li>Использует асинхронную модель.</li><li>Поддерживает мониторинг состояния процессов через cgroups.</li><li>Предоставляет API для других компонентов.</li></ul><hr><h4 id="_2-systemd-units-юниты" tabindex="-1">2. <strong>systemd Units (юниты)</strong> <a class="header-anchor" href="#_2-systemd-units-юниты" aria-label="Permalink to &quot;2. **systemd Units (юниты)**&quot;">​</a></h4><p>Юниты — это основная концепция systemd. Они представляют собой абстракции ресурсов системы: службы, сокеты, устройства, монтирования и т.д.</p><p><strong>Типы юнитов:</strong></p><ul><li><code>.service</code> — управление службами (демонами).</li><li><code>.socket</code> — контроль за сокетами (сетевыми и Unix-сокетами), позволяя запускать службы по требованию.</li><li><code>.mount</code> — управление точками монтирования файловых систем.</li><li><code>.swap</code> — управление swap-разделами.</li><li><code>.target</code> — группы юнитов, аналогичные runlevel’ам в SysVinit (например, <code>multi-user.target</code>, <code>graphical.target</code>).</li><li><code>.timer</code> — планировщик задач, альтернатива cron.</li><li><code>.path</code> — отслеживание изменений в файлах или путях.</li><li><code>.slice</code> — логические группы для управления ресурсами (CPU, память) через cgroups.</li><li><code>.scope</code> — временные группы процессов (например, созданные внешними процессами).</li><li><code>.automount</code> — автоматическое монтирование при обращении.</li></ul><p><strong>Взаимосвязь:</strong> Юниты связаны через зависимости (<code>Wants</code>, <code>Requires</code>, <code>After</code>, <code>Before</code>, <code>BindsTo</code> и др.), что позволяет systemd строить граф запуска и корректно обрабатывать порядок инициализации.</p><hr><h4 id="_3-journald" tabindex="-1">3. <strong>journald</strong> <a class="header-anchor" href="#_3-journald" aria-label="Permalink to &quot;3. **journald**&quot;">​</a></h4><p>Система сбора и хранения журналов. Заменяет традиционные текстовые логи <code>/var/log/messages</code> и <code>syslog</code>.</p><p><strong>Функции:</strong></p><ul><li>Централизованное хранение логов в бинарном формате (эффективное сжатие, индексация).</li><li>Поддержка структурированных данных (ключ-значение).</li><li>Автоматический сбор логов от всех процессов (включая stdout/stderr).</li><li>Интеграция с другими компонентами systemd.</li></ul><p><strong>Интерфейс:</strong> <code>journalctl</code> — утилита для просмотра и фильтрации логов.</p><p><strong>Взаимодязь:</strong> journald получает сообщения от всех процессов, управляемых systemd, и от самого демона systemd. Также интегрируется с <code>systemd-cat</code> для перенаправления вывода в журнал.</p><hr><h4 id="_4-logind" tabindex="-1">4. <strong>logind</strong> <a class="header-anchor" href="#_4-logind" aria-label="Permalink to &quot;4. **logind**&quot;">​</a></h4><p>Управляет пользовательскими сессиями, входом в систему, спящим режимом, блокировкой экрана и питанием.</p><p><strong>Функции:</strong></p><ul><li>Отслеживает сессии (локальные, графические, SSH).</li><li>Обрабатывает действия при закрытии ноутбука, нажатии кнопок питания.</li><li>Предоставляет D-Bus API для DE (GNOME, KDE и др.).</li><li>Контролирует доступ к устройствам (например, звук, графика) через <code>seat</code>.</li></ul><p><strong>Взаимосвязь:</strong> logind тесно интегрирован с <code>systemd</code>, <code>polkit</code>, <code>udev</code> и графическими средами. Создаёт юниты типа <code>session-*</code> и <code>user-*</code>.</p><hr><h4 id="_5-networkd" tabindex="-1">5. <strong>networkd</strong> <a class="header-anchor" href="#_5-networkd" aria-label="Permalink to &quot;5. **networkd**&quot;">​</a></h4><p>Лёгкий демон для управления сетью. Предназначен для систем без сложных сетевых настроек (например, серверы, встраиваемые системы).</p><p><strong>Функции:</strong></p><ul><li>Настройка интерфейсов (статические IP, DHCP, VLAN, бондинг, мосты).</li><li>Управление маршрутизацией.</li><li>Поддержка .network, .netdev, .link файлов.</li></ul><p><strong>Взаимосвязь:</strong> Может работать параллельно или вместо NetworkManager. Интегрируется с <code>resolved</code> и <code>timesyncd</code>.</p><hr><h4 id="_6-resolved" tabindex="-1">6. <strong>resolved</strong> <a class="header-anchor" href="#_6-resolved" aria-label="Permalink to &quot;6. **resolved**&quot;">​</a></h4><p>Система разрешения имён (DNS, mDNS, LLMNR).</p><p><strong>Функции:</strong></p><ul><li>Кэширование DNS-запросов.</li><li>Поддержка DNSSEC.</li><li>Работа с mDNS (для локальных имён, например, <code>hostname.local</code>).</li><li>Предоставление DNS через <code>127.0.0.53</code>.</li></ul><p><strong>Взаимосвязь:</strong> Перехватывает запросы от приложений, интегрируется с <code>networkd</code> и <code>nss-myhostname</code>.</p><hr><h4 id="_7-timesyncd" tabindex="-1">7. <strong>timesyncd</strong> <a class="header-anchor" href="#_7-timesyncd" aria-label="Permalink to &quot;7. **timesyncd**&quot;">​</a></h4><p>Лёгкий NTP-клиент для синхронизации времени.</p><p><strong>Функции:</strong></p><ul><li>Синхронизация времени с NTP-серверами.</li><li>Автоматическое обновление системных часов.</li></ul><p><strong>Взаимосвязь:</strong> Альтернатива <code>ntpd</code> или <code>chronyd</code>. Работает в паре с <code>timedated</code>.</p><hr><h4 id="_8-timedated" tabindex="-1">8. <strong>timedated</strong> <a class="header-anchor" href="#_8-timedated" aria-label="Permalink to &quot;8. **timedated**&quot;">​</a></h4><p>Управление системным временем и часовым поясом через D-Bus.</p><p><strong>Функции:</strong></p><ul><li>Установка времени, даты, часового пояса.</li><li>Переключение между UTC и локальным временем.</li></ul><p><strong>Взаимосвязь:</strong> Работает с <code>timesyncd</code>, предоставляет API для DE и утилит (<code>timedatectl</code>).</p><hr><h4 id="_9-udev-device-management" tabindex="-1">9. <strong>udev (device management)</strong> <a class="header-anchor" href="#_9-udev-device-management" aria-label="Permalink to &quot;9. **udev (device management)**&quot;">​</a></h4><p>Хотя <code>udev</code> изначально был независимым проектом, теперь он тесно интегрирован в systemd.</p><p><strong>Функции:</strong></p><ul><li>Обнаружение и управление устройствами (горячее подключение USB, дисков и т.п.).</li><li>Создание устройств в <code>/dev</code>.</li><li>Запуск правил при событиях (например, подключение флешки).</li></ul><p><strong>Взаимосвязь:</strong> systemd запускает <code>systemd-udevd</code>. События от udev могут запускать юниты systemd (например, монтирование диска).</p><hr><h4 id="_10-systemd-boot-ранее-gummiboot" tabindex="-1">10. <strong>systemd-boot (ранее gummiboot)</strong> <a class="header-anchor" href="#_10-systemd-boot-ранее-gummiboot" aria-label="Permalink to &quot;10. **systemd-boot (ранее gummiboot)**&quot;">​</a></h4><p>Простой загрузчик для систем с UEFI.</p><p><strong>Функции:</strong></p><ul><li>Загрузка ядра Linux по стандарту UEFI.</li><li>Поддержка меню выбора ОС.</li><li>Безопасная загрузка (Secure Boot).</li></ul><p><strong>Взаимосвязь:</strong> Альтернатива GRUB. Интегрирован в systemd, но работает независимо от основного демона.</p><hr><h4 id="_11-systemd-homed" tabindex="-1">11. <strong>systemd-homed</strong> <a class="header-anchor" href="#_11-systemd-homed" aria-label="Permalink to &quot;11. **systemd-homed**&quot;">​</a></h4><p>Управление домашними каталогами пользователей в зашифрованном виде (в рамках проекта &quot;Stateless Linux&quot;).</p><p><strong>Функции:</strong></p><ul><li>Создание и монтирование зашифрованных домашних каталогов.</li><li>Поддержка профилей пользователей.</li></ul><p><strong>Взаимосвязь:</strong> Работает с <code>logind</code> и <code>pam_systemd</code>.</p><hr><h4 id="_12-systemd-cryptsetup" tabindex="-1">12. <strong>systemd-cryptsetup</strong> <a class="header-anchor" href="#_12-systemd-cryptsetup" aria-label="Permalink to &quot;12. **systemd-cryptsetup**&quot;">​</a></h4><p>Обеспечивает разблокировку шифрованных разделов (LUKS) при загрузке.</p><p><strong>Взаимосвязь:</strong> Используется в <code>initramfs</code> для разблокировки корневой файловой системы.</p><hr><h3 id="взаимосвязь-компонентов" tabindex="-1">Взаимосвязь компонентов <a class="header-anchor" href="#взаимосвязь-компонентов" aria-label="Permalink to &quot;Взаимосвязь компонентов&quot;">​</a></h3><p>Все компоненты systemd работают в единой экосистеме, используя общие принципы:</p><ol><li><strong>D-Bus API</strong> — большинство компонентов (logind, resolved, timedated) предоставляют интерфейсы через D-Bus, что позволяет другим приложениям взаимодействовать с ними.</li><li><strong>cgroups</strong> — systemd использует cgroups для отслеживания и изоляции процессов, что позволяет точно управлять ресурсами и определять, какие процессы принадлежат какой службе.</li><li><strong>Асинхронность и параллельность</strong> — благодаря графу зависимостей, systemd может запускать службы параллельно, если их зависимости удовлетворены.</li><li><strong>Единый конфигурационный формат</strong> — все юниты используют единый синтаксис (INI-подобный), что упрощает администрирование.</li><li><strong>Интеграция с ядром</strong> — через udev и netlink, systemd получает события от ядра (например, подключение устройства).</li></ol><hr><h3 id="преимущества-архитектуры-systemd" tabindex="-1">Преимущества архитектуры systemd <a class="header-anchor" href="#преимущества-архитектуры-systemd" aria-label="Permalink to &quot;Преимущества архитектуры systemd&quot;">​</a></h3><ul><li><strong>Быстрая загрузка</strong> — параллельный запуск служб.</li><li><strong>Централизованное управление</strong> — всё через <code>systemctl</code>, <code>journalctl</code>, <code>loginctl</code> и др.</li><li><strong>Надёжность</strong> — мониторинг процессов, автоматический перезапуск.</li><li><strong>Гибкость</strong> — поддержка on-demand запуска служб через сокеты.</li><li><strong>Стандартизация</strong> — унифицированный подход в разных дистрибутивах.</li></ul><hr><h3 id="критика-и-альтернативы" tabindex="-1">Критика и альтернативы <a class="header-anchor" href="#критика-и-альтернативы" aria-label="Permalink to &quot;Критика и альтернативы&quot;">​</a></h3><p>Несмотря на популярность, systemd подвергается критике за:</p><ul><li>Нарушение принципа &quot;одна утилита — одна задача&quot;.</li><li>Сложность и монолитность.</li><li>Зависимость от D-Bus и других технологий.</li></ul><p>Альтернативы:</p><ul><li><strong>OpenRC</strong> (в Gentoo, Alpine).</li><li><strong>runit</strong> (в Void Linux).</li><li><strong>s6</strong> — лёгкая система инициализации.</li><li><strong>sysvinit</strong> — классическая система.</li></ul><hr><h3 id="заключение" tabindex="-1">Заключение <a class="header-anchor" href="#заключение" aria-label="Permalink to &quot;Заключение&quot;">​</a></h3><p>systemd — это не просто init-система, а полноценная платформа для управления современной Linux-системой. Её архитектура объединяет инициализацию, журналирование, управление сессиями, сетью и устройствами в единую согласованную систему. Благодаря модульности, глубокой интеграции и богатому функционалу, systemd стал неотъемлемой частью современных дистрибутивов Linux.</p><p>Понимание её архитектуры и компонентов позволяет системным администраторам и разработчикам эффективно управлять системой, диагностировать проблемы и оптимизировать производительность.</p><hr><p><strong>Литература:</strong></p><ul><li>Официальная документация systemd: <a href="https://www.freedesktop.org/wiki/Software/systemd/" target="_blank" rel="noreferrer">https://www.freedesktop.org/wiki/Software/systemd/</a></li><li><code>man systemd</code>, <code>man systemd.unit</code>, <code>man journalctl</code></li><li>Lennart Poettering — &quot;The Biggest Waste of Time in Computing History&quot; (выступление о systemd)</li></ul><p><strong>Теоретическая статья: D-Bus — шина межпроцессного взаимодействия в Linux</strong></p><hr><h3 id="введение-1" tabindex="-1">Введение <a class="header-anchor" href="#введение-1" aria-label="Permalink to &quot;Введение&quot;">​</a></h3><p>D-Bus (Desktop Bus) — это система межпроцессного взаимодействия (IPC), разработанная для обеспечения стандартизированного способа обмена сообщениями между приложениями в операционных системах Linux и других Unix-подобных системах. Изначально созданная как часть проекта Freedesktop.org, D-Bus стала ключевым компонентом современных десктоп-сред (таких как GNOME и KDE), системных служб (включая systemd) и сервисов, требующих надёжной и структурированной коммуникации.</p><p>В этой статье мы рассмотрим архитектуру D-Bus, её основные концепции, компоненты, протокол и роль в экосистеме Linux.</p><hr><h3 id="что-такое-d-bus" tabindex="-1">Что такое D-Bus? <a class="header-anchor" href="#что-такое-d-bus" aria-label="Permalink to &quot;Что такое D-Bus?&quot;">​</a></h3><p>D-Bus — это <strong>механизм межпроцессного взаимодействия</strong>, позволяющий приложениям обмениваться сообщениями. Он работает по принципу <strong>шины (bus)</strong> — централизованного канала, к которому могут подключаться процессы для отправки и получения сообщений.</p><p>D-Bus решает следующие задачи:</p><ul><li>Упрощение взаимодействия между процессами.</li><li>Предоставление стандартизированного API для системных и пользовательских служб.</li><li>Устранение дублирования функциональности (например, множества способов уведомить об изменении уровня звука).</li><li>Поддержка событийной модели (публикация/подписка).</li></ul><hr><h3 id="архитектура-d-bus" tabindex="-1">Архитектура D-Bus <a class="header-anchor" href="#архитектура-d-bus" aria-label="Permalink to &quot;Архитектура D-Bus&quot;">​</a></h3><p>D-Bus построен по клиент-серверной архитектуре, но с использованием <strong>посредника — демона шины (message bus daemon)</strong>, который маршрутизирует сообщения между процессами.</p><h4 id="основные-компоненты" tabindex="-1">Основные компоненты: <a class="header-anchor" href="#основные-компоненты" aria-label="Permalink to &quot;Основные компоненты:&quot;">​</a></h4><ol><li><p><strong>Message Bus Daemon</strong><br> Центральный процесс, управляющий шиной. Он отвечает за:</p><ul><li>Приём и маршрутизацию сообщений.</li><li>Управление подключениями.</li><li>Реализацию политик безопасности (через авторизацию).</li></ul><p>Существует два основных экземпляра шины:</p><ul><li><strong>System Bus</strong> — системная шина, доступная всем пользователям. Используется для взаимодействия с системными службами (например, <code>systemd</code>, <code>NetworkManager</code>, <code>UPower</code>).</li><li><strong>Session Bus</strong> — сессионная шина, запускается для каждого пользователя при входе в систему. Используется для общения приложений в рамках одной сессии (например, между GNOME Shell и приложением).</li></ul></li><li><p><strong>Клиенты (приложения)</strong><br> Любой процесс, подключающийся к шине, становится клиентом. Он может:</p><ul><li>Отправлять сообщения.</li><li>Получать сообщения.</li><li>Экспортировать объекты и методы.</li><li>Подписываться на сигналы.</li></ul></li><li><p><strong>Объекты, интерфейсы, методы и сигналы</strong><br> D-Bus использует объектно-ориентированный подход к взаимодействию:</p><ul><li><strong>Объект</strong> — сущность, доступная через шину, идентифицируемая <strong>object path</strong> (например, <code>/org/freedesktop/NetworkManager</code>).</li><li><strong>Интерфейс</strong> — набор методов и сигналов (аналог класса в ООП), например <code>org.freedesktop.NetworkManager.Device</code>.</li><li><strong>Методы</strong> — функции, которые можно вызывать удалённо (remote procedure call).</li><li><strong>Сигналы</strong> — события, которые объект может &quot;испускать&quot;, а другие процессы — слушать (например, <code>DeviceAdded</code>).</li></ul></li><li><p><strong>Сообщения (Messages)</strong><br> Все взаимодействия происходят через сообщения, которые бывают четырёх типов:</p><ul><li><strong>Method Call</strong> — запрос на выполнение метода.</li><li><strong>Method Return</strong> — ответ на вызов метода.</li><li><strong>Error</strong> — сообщение об ошибке.</li><li><strong>Signal</strong> — широковещательное уведомление о событии.</li></ul></li></ol><hr><h3 id="пример-использования-d-bus" tabindex="-1">Пример использования D-Bus <a class="header-anchor" href="#пример-использования-d-bus" aria-label="Permalink to &quot;Пример использования D-Bus&quot;">​</a></h3><p>Представим, что приложение хочет узнать состояние Wi-Fi через NetworkManager:</p><ol><li>Приложение подключается к <strong>System Bus</strong>.</li><li>Оно отправляет <strong>Method Call</strong> на объект <code>/org/freedesktop/NetworkManager</code>, интерфейс <code>org.freedesktop.DBus.Properties</code>, метод <code>GetAll</code>, с аргументом <code>org.freedesktop.NetworkManager</code>.</li><li>NetworkManager отвечает <strong>Method Return</strong> с данными о состоянии сети.</li><li>Приложение отображает информацию пользователю.</li></ol><p>Если Wi-Fi-устройство подключается, NetworkManager отправляет <strong>сигнал</strong> <code>DeviceAdded</code> на шину, и все подписанные приложения получают уведомление.</p><hr><h3 id="роль-d-bus-в-системе-linux" tabindex="-1">Роль D-Bus в системе Linux <a class="header-anchor" href="#роль-d-bus-в-системе-linux" aria-label="Permalink to &quot;Роль D-Bus в системе Linux&quot;">​</a></h3><p>D-Bus играет ключевую роль в современных Linux-системах:</p><h4 id="_1-интеграция-с-systemd" tabindex="-1">1. <strong>Интеграция с systemd</strong> <a class="header-anchor" href="#_1-интеграция-с-systemd" aria-label="Permalink to &quot;1. **Интеграция с systemd**&quot;">​</a></h4><ul><li><code>systemd</code> использует D-Bus для предоставления API управления службами.</li><li>Команда <code>systemctl</code> на самом деле вызывает методы через D-Bus.</li><li><code>logind</code>, <code>networkd</code>, <code>resolved</code> и другие компоненты systemd предоставляют свои интерфейсы через D-Bus.</li></ul><h4 id="_2-работа-десктоп-окружении" tabindex="-1">2. <strong>Работа десктоп-окружений</strong> <a class="header-anchor" href="#_2-работа-десктоп-окружении" aria-label="Permalink to &quot;2. **Работа десктоп-окружений**&quot;">​</a></h4><ul><li>GNOME и KDE активно используют D-Bus для: <ul><li>Уведомлений (<code>org.freedesktop.Notifications</code>).</li><li>Управления питанием.</li><li>Запуска приложений.</li><li>Интеграции с апплетами панели.</li></ul></li></ul><h4 id="_3-системные-службы" tabindex="-1">3. <strong>Системные службы</strong> <a class="header-anchor" href="#_3-системные-службы" aria-label="Permalink to &quot;3. **Системные службы**&quot;">​</a></h4><ul><li><code>NetworkManager</code> — управление сетью.</li><li><code>UPower</code> — мониторинг батареи.</li><li><code>BlueZ</code> — Bluetooth-стек.</li><li><code>PulseAudio</code> — звуковая система.</li></ul><h4 id="_4-безопасность-и-авторизация" tabindex="-1">4. <strong>Безопасность и авторизация</strong> <a class="header-anchor" href="#_4-безопасность-и-авторизация" aria-label="Permalink to &quot;4. **Безопасность и авторизация**&quot;">​</a></h4><ul><li>Через <code>polkit</code> (PolicyKit) D-Bus позволяет запрашивать повышенные привилегии для выполнения действий (например, перезагрузка системы).</li><li>Политики доступа настраиваются в XML-файлах в <code>/usr/share/dbus-1/system.d/</code>.</li></ul><hr><h3 id="протокол-и-транспорт" tabindex="-1">Протокол и транспорт <a class="header-anchor" href="#протокол-и-транспорт" aria-label="Permalink to &quot;Протокол и транспорт&quot;">​</a></h3><p>D-Bus использует <strong>бинарный протокол</strong>, оптимизированный для эффективной передачи структурированных данных. Сообщения передаются через:</p><ul><li><strong>Unix-сокеты</strong> (локальные, наиболее распространённый способ).</li><li><strong>TCP</strong> (редко, в специфических случаях).</li></ul><p>Протокол включает:</p><ul><li>Заголовки сообщений (тип, длина, адрес получателя).</li><li>Тело сообщения (аргументы методов, данные сигналов).</li><li>Поддержку сложных типов данных (массивы, словари, структуры).</li></ul><hr><h3 id="инструменты-для-работы-с-d-bus" tabindex="-1">Инструменты для работы с D-Bus <a class="header-anchor" href="#инструменты-для-работы-с-d-bus" aria-label="Permalink to &quot;Инструменты для работы с D-Bus&quot;">​</a></h3><ol><li><p><strong><code>dbus-send</code></strong> — отправка методов вручную.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus-send</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --system</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dest=org.freedesktop.login1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=method_call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /org/freedesktop/login1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> org.freedesktop.login1.Manager.Reboot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boolean:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></li><li><p><strong><code>dbus-monitor</code></strong> — прослушивание всех сообщений на шине.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dbus-monitor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;interface=&#39;org.freedesktop.login1&#39;&quot;</span></span></code></pre></div></li><li><p><strong><code>busctl</code></strong> (часть systemd) — современная утилита для управления D-Bus.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">busctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">busctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> org.freedesktop.login1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /org/freedesktop/login1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> org.freedesktop.login1.Manager</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PowerOff</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boolean:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></li><li><p><strong><code>d-feet</code></strong> — графический инспектор D-Bus (для отладки).</p></li></ol><hr><h3 id="преимущества-d-bus" tabindex="-1">Преимущества D-Bus <a class="header-anchor" href="#преимущества-d-bus" aria-label="Permalink to &quot;Преимущества D-Bus&quot;">​</a></h3><ul><li><strong>Стандартизация</strong> — единый способ взаимодействия между компонентами.</li><li><strong>Гибкость</strong> — поддержка RPC и событийной модели.</li><li><strong>Безопасность</strong> — интеграция с ACL, polkit.</li><li><strong>Эффективность</strong> — низкие накладные расходы благодаря бинарному протоколу.</li><li><strong>Масштабируемость</strong> — работает как в сессиях пользователей, так и на системном уровне.</li></ul><hr><h3 id="критика-и-альтернативы-1" tabindex="-1">Критика и альтернативы <a class="header-anchor" href="#критика-и-альтернативы-1" aria-label="Permalink to &quot;Критика и альтернативы&quot;">​</a></h3><p>Несмотря на широкое распространение, D-Bus подвергается критике:</p><ul><li>Сложность API.</li><li>Зависимость от центрального демона (точка отказа).</li><li>Избыточность в простых случаях.</li></ul><p>Альтернативы:</p><ul><li><strong>Unix-сокеты напрямую</strong> — для простых IPC.</li><li><strong>gRPC</strong>, <strong>ZeroMQ</strong> — в микросервисных архитектурах.</li><li><strong>PipeWire</strong> — использует собственный IPC, но вдохновлён D-Bus.</li></ul><p>Однако в контексте Linux-десктопа и системного уровня D-Bus остаётся доминирующим стандартом.</p><hr><h3 id="заключение-1" tabindex="-1">Заключение <a class="header-anchor" href="#заключение-1" aria-label="Permalink to &quot;Заключение&quot;">​</a></h3><p>D-Bus — это фундаментальная технология, лежащая в основе современных Linux-систем. Она обеспечивает структурированное, безопасное и стандартизированное межпроцессное взаимодействие, позволяя системным службам, десктоп-окружениям и приложениям работать слаженно.</p><p>Без D-Bus такие функции, как автоматическое обнаружение устройств, уведомления, управление питанием и интеграция systemd, были бы значительно сложнее в реализации. Понимание D-Bus необходимо для разработчиков системного ПО, администраторов и всех, кто хочет глубже понять, как работает Linux &quot;под капотом&quot;.</p><hr><p><strong>Литература:</strong></p><ul><li>Официальный сайт D-Bus: <a href="https://www.freedesktop.org/wiki/Software/dbus/" target="_blank" rel="noreferrer">https://www.freedesktop.org/wiki/Software/dbus/</a></li><li>Спецификация D-Bus: <a href="https://dbus.freedesktop.org/doc/dbus-specification.html" target="_blank" rel="noreferrer">https://dbus.freedesktop.org/doc/dbus-specification.html</a></li><li><code>man dbus</code>, <code>man busctl</code>, <code>man systemd-bus-proxy</code></li><li>Lennart Poettering — выступления о D-Bus и systemd</li></ul><h1 id="практические-работы-написание-различных-типов-юнитов-systemd" tabindex="-1">Практические работы: Написание различных типов юнитов systemd <a class="header-anchor" href="#практические-работы-написание-различных-типов-юнитов-systemd" aria-label="Permalink to &quot;Практические работы: Написание различных типов юнитов systemd&quot;">​</a></h1><hr><h2 id="введение-2" tabindex="-1">Введение <a class="header-anchor" href="#введение-2" aria-label="Permalink to &quot;Введение&quot;">​</a></h2><p><code>systemd</code> — это мощная система инициализации Linux, которая управляется с помощью <strong>юнитов (units)</strong>. Каждый юнит представляет собой конфигурационный файл, описывающий ресурс: службу, сокет, таймер, точку монтирования и т.д.</p><p>В этой практической работе вы научитесь создавать и управлять различными типами юнитов systemd:</p><ul><li><code>.service</code> — для управления демонами.</li><li><code>.socket</code> — для активации служб по сокету.</li><li><code>.timer</code> — для замены <code>cron</code>.</li><li><code>.mount</code> — для монтирования файловых систем.</li><li><code>.path</code> — для запуска по изменению файла.</li><li><code>.target</code> — для группировки юнитов.</li></ul><hr><h2 id="общие-правила" tabindex="-1">Общие правила <a class="header-anchor" href="#общие-правила" aria-label="Permalink to &quot;Общие правила&quot;">​</a></h2><ul><li>Юниты размещаются в: <ul><li><code>/etc/systemd/system/</code> — пользовательские (рекомендуется).</li><li><code>/usr/lib/systemd/system/</code> — поставляемые пакетами (не редактировать напрямую).</li></ul></li><li>После изменения файла выполните:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span></code></pre></div></li><li>Управление:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> имя_юнита</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> имя_юнита</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> имя_юнита</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # автозапуск при загрузке</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> имя_юнита</span></span></code></pre></div></li></ul><hr><h2 id="практическая-работа-1-создание-service-—-простои-демон" tabindex="-1">Практическая работа 1: Создание <code>.service</code> — простой демон <a class="header-anchor" href="#практическая-работа-1-создание-service-—-простои-демон" aria-label="Permalink to &quot;Практическая работа 1: Создание \`.service\` — простой демон&quot;">​</a></h2><h3 id="задача" tabindex="-1">Задача <a class="header-anchor" href="#задача" aria-label="Permalink to &quot;Задача&quot;">​</a></h3><p>Создать службу, которая каждые 10 секунд записывает метку времени в файл.</p><h3 id="шаги" tabindex="-1">Шаги <a class="header-anchor" href="#шаги" aria-label="Permalink to &quot;Шаги&quot;">​</a></h3><ol><li><p>Создайте скрипт:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/hello-service.sh</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello from systemd $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/hello.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div></li><li><p>Сделайте скрипт исполняемым:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/hello-service.sh</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/hello.log</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chown</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root:root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/hello.log</span></span></code></pre></div></li><li><p>Создайте юнит:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/hello.service</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Simple Hello Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=network.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=simple</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/opt/hello-service.sh</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=always</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=root</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">StandardOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=journal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">StandardError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=journal</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div></li><li><p>Перезагрузите конфигурацию и запустите:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.service</span></span></code></pre></div></li><li><p>Проверьте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello.service</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/hello.log</span></span></code></pre></div></li></ol><hr><h2 id="практическая-работа-2-socket-—-активация-службы-по-сокету" tabindex="-1">Практическая работа 2: <code>.socket</code> — активация службы по сокету <a class="header-anchor" href="#практическая-работа-2-socket-—-активация-службы-по-сокету" aria-label="Permalink to &quot;Практическая работа 2: \`.socket\` — активация службы по сокету&quot;">​</a></h2><h3 id="задача-1" tabindex="-1">Задача <a class="header-anchor" href="#задача-1" aria-label="Permalink to &quot;Задача&quot;">​</a></h3><p>Запустить службу только при обращении к TCP-сокету <code>localhost:12345</code>.</p><h3 id="шаги-1" tabindex="-1">Шаги <a class="header-anchor" href="#шаги-1" aria-label="Permalink to &quot;Шаги&quot;">​</a></h3><ol><li><p>Модифицируем службу (измените <code>Type</code> на <code>simple</code> → <code>notify</code> или <code>forking</code> не нужен, используем <code>simple</code> с <code>socket activation</code>):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/echo.service</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Echo Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=echo.socket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=simple</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/bin/nc -l -p 12345 -c </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;echo &quot;Hello from systemd socket!&quot;&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">StandardInput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=socket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Also</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=echo.socket</span></span></code></pre></div></li><li><p>Создайте сокет:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/echo.socket</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Echo Socket</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Socket]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ListenStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=12345</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=sockets.target</span></span></code></pre></div></li><li><p>Запустите:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo.socket</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo.socket</span></span></code></pre></div></li><li><p>Проверьте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">telnet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12345</span></span></code></pre></div><p>При первом подключении служба запустится автоматически.</p></li></ol><hr><h2 id="практическая-работа-3-timer-—-замена-cron" tabindex="-1">Практическая работа 3: <code>.timer</code> — замена cron <a class="header-anchor" href="#практическая-работа-3-timer-—-замена-cron" aria-label="Permalink to &quot;Практическая работа 3: \`.timer\` — замена cron&quot;">​</a></h2><h3 id="задача-2" tabindex="-1">Задача <a class="header-anchor" href="#задача-2" aria-label="Permalink to &quot;Задача&quot;">​</a></h3><p>Ежедневно в 9:00 утра очищать файл <code>/var/log/hello.log</code>.</p><h3 id="шаги-2" tabindex="-1">Шаги <a class="header-anchor" href="#шаги-2" aria-label="Permalink to &quot;Шаги&quot;">​</a></h3><ol><li><p>Создайте скрипт очистки:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/clear-log.sh</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /var/log/hello.log</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Log cleared at $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/clear.log</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/clear-log.sh</span></span></code></pre></div></li><li><p>Создайте службу:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/clear-log.service</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Clear log file</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=oneshot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/opt/clear-log.sh</span></span></code></pre></div></li><li><p>Создайте таймер:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/clear-log.timer</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Run clear-log daily at 9:00</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=clear-log.service</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Timer]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OnCalendar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=*-*-* 09:00:00</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Persistent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=timers.target</span></span></code></pre></div></li><li><p>Запустите:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clear-log.timer</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clear-log.timer</span></span></code></pre></div></li><li><p>Проверьте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-timers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clear-log.service</span></span></code></pre></div></li></ol><blockquote><p><strong>Совет:</strong> <code>OnCalendar</code> поддерживает форматы:</p><ul><li><code>daily</code>, <code>hourly</code>, <code>monthly</code></li><li><code>Mon *-*-* 10:00:00</code></li><li><code>*-*-1 00:00:00</code> — 1-го числа каждого месяца</li></ul></blockquote><hr><h2 id="практическая-работа-4-mount-—-автоматическое-монтирование" tabindex="-1">Практическая работа 4: <code>.mount</code> — автоматическое монтирование <a class="header-anchor" href="#практическая-работа-4-mount-—-автоматическое-монтирование" aria-label="Permalink to &quot;Практическая работа 4: \`.mount\` — автоматическое монтирование&quot;">​</a></h2><h3 id="задача-3" tabindex="-1">Задача <a class="header-anchor" href="#задача-3" aria-label="Permalink to &quot;Задача&quot;">​</a></h3><p>Автоматически монтировать раздел <code>/dev/sdb1</code> в <code>/mnt/data</code> при загрузке.</p><h3 id="шаги-3" tabindex="-1">Шаги <a class="header-anchor" href="#шаги-3" aria-label="Permalink to &quot;Шаги&quot;">​</a></h3><ol><li><p>Убедитесь, что раздел существует и отформатирован:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkfs.ext4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sdb1</span></span></code></pre></div></li><li><p>Создайте точку монтирования:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/data</span></span></code></pre></div></li><li><p>Создайте юнит:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemd-escape</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Вывод: mnt-data.mount</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/mnt-data.mount</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Mount Data Drive</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=dev-sdb1.device</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=dev-sdb1.device</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Mount]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">What</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/dev/sdb1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/mnt/data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ext4</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=defaults</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div></li><li><p>Включите:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mnt-data.mount</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mnt-data.mount</span></span></code></pre></div></li><li><p>Проверьте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">df</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/data</span></span></code></pre></div></li></ol><hr><h2 id="практическая-работа-5-path-—-запуск-по-изменению-фаила" tabindex="-1">Практическая работа 5: <code>.path</code> — запуск по изменению файла <a class="header-anchor" href="#практическая-работа-5-path-—-запуск-по-изменению-фаила" aria-label="Permalink to &quot;Практическая работа 5: \`.path\` — запуск по изменению файла&quot;">​</a></h2><h3 id="задача-4" tabindex="-1">Задача <a class="header-anchor" href="#задача-4" aria-label="Permalink to &quot;Задача&quot;">​</a></h3><p>Следить за <code>/tmp/trigger.txt</code> и запускать скрипт при его создании.</p><h3 id="шаги-4" tabindex="-1">Шаги <a class="header-anchor" href="#шаги-4" aria-label="Permalink to &quot;Шаги&quot;">​</a></h3><ol><li><p>Создайте скрипт:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/on-file-change.sh</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;File triggered at $(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/path-trigger.log</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/on-file-change.sh</span></span></code></pre></div></li><li><p>Служба:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/file-watch.service</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Run on file change</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=oneshot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/opt/on-file-change.sh</span></span></code></pre></div></li><li><p>Путь:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/file-watch.path</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Watch /tmp/trigger.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Path]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PathExists</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/tmp/trigger.txt</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div></li><li><p>Запустите:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file-watch.path</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file-watch.path</span></span></code></pre></div></li><li><p>Проверьте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">touch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/trigger.txt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/path-trigger.log</span></span></code></pre></div></li></ol><hr><h2 id="практическая-работа-6-target-—-группировка-служб" tabindex="-1">Практическая работа 6: <code>.target</code> — группировка служб <a class="header-anchor" href="#практическая-работа-6-target-—-группировка-служб" aria-label="Permalink to &quot;Практическая работа 6: \`.target\` — группировка служб&quot;">​</a></h2><h3 id="задача-5" tabindex="-1">Задача <a class="header-anchor" href="#задача-5" aria-label="Permalink to &quot;Задача&quot;">​</a></h3><p>Создать кастомный target <code>maintenance.target</code>, который останавливает сеть и запускает скрипт обслуживания.</p><h3 id="шаги-5" tabindex="-1">Шаги <a class="header-anchor" href="#шаги-5" aria-label="Permalink to &quot;Шаги&quot;">​</a></h3><ol><li><p>Создайте target:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/maintenance.target</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Maintenance Mode</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AllowIsolate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=yes</span></span></code></pre></div></li><li><p>Создайте службу обслуживания:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/maintenance-script.service</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Maintenance Script</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=maintenance.target</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">StopWhenUnneeded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=oneshot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/bin/bash -c </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;echo &quot;Maintenance started at $(date)&quot; &gt;&gt; /var/log/maintenance.log&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RemainAfterExit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=maintenance.target</span></span></code></pre></div></li><li><p>Отключите сеть при входе в target:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add-wants</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maintenance.target</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maintenance-script.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NetworkManager.service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # или network.service</span></span></code></pre></div></li><li><p>Включите:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maintenance-script.service</span></span></code></pre></div></li><li><p>Переключитесь:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isolate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> maintenance.target</span></span></code></pre></div></li><li><p>Вернитесь:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> isolate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multi-user.target</span></span></code></pre></div></li></ol><hr><h2 id="дополнительные-советы" tabindex="-1">Дополнительные советы <a class="header-anchor" href="#дополнительные-советы" aria-label="Permalink to &quot;Дополнительные советы&quot;">​</a></h2><ul><li><p><strong>Проверка синтаксиса</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemd-analyze</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> verify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.service</span></span></code></pre></div></li><li><p><strong>Автодополнение имён юнитов</strong>: Используйте <code>Tab</code> в <code>systemctl</code>.</p></li><li><p><strong>Шаблонные юниты</strong>: Имя <code>app@.service</code> позволяет запускать <code>app@instance1.service</code>, <code>app@instance2.service</code>.</p></li><li><p><strong>Переменные окружения</strong>: Используйте <code>Environment=</code> и <code>EnvironmentFile=</code> в <code>[Service]</code>.</p></li></ul><hr><h2 id="заключение-2" tabindex="-1">Заключение <a class="header-anchor" href="#заключение-2" aria-label="Permalink to &quot;Заключение&quot;">​</a></h2><p>В ходе этих практических работ вы освоили шесть ключевых типов юнитов systemd:</p><ul><li><code>.service</code> — основа для управления процессами.</li><li><code>.socket</code> — эффективная активация по требованию.</li><li><code>.timer</code> — гибкая замена cron.</li><li><code>.mount</code> — управление точками монтирования.</li><li><code>.path</code> — реакция на события в ФС.</li><li><code>.target</code> — логическая группировка.</li></ul><p>Эти навыки позволяют автоматизировать задачи, оптимизировать загрузку и создавать отказоустойчивые конфигурации.</p><hr><p><strong>Домашнее задание</strong></p><ol><li>Создайте таймер, который каждые 5 минут записывает нагрузку системы (<code>uptime</code>) в файл.</li><li>Настройте <code>.socket</code>, слушающий Unix-сокет <code>/tmp/myservice.sock</code>.</li><li>Сделайте так, чтобы при изменении <code>/etc/hosts</code> запускалось уведомление (через <code>.path</code>).</li></ol><hr><p><strong>Источники:</strong></p><ul><li><code>man systemd.unit</code>, <code>man systemd.service</code>, <code>man systemd.socket</code></li><li><code>systemd-analyze dot | dot -Tpng &gt; deps.png</code> — визуализация зависимостей</li><li><a href="https://www.freedesktop.org/wiki/Software/systemd/" target="_blank" rel="noreferrer">https://www.freedesktop.org/wiki/Software/systemd/</a></li></ul>`,233)]))}const g=i(l,[["render",n]]);export{c as __pageData,g as default};
