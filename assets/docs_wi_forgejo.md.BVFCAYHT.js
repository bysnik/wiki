import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.D4Vqf8I7.js";const k=JSON.parse('{"title":"Forgejo","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/wi/forgejo.md","filePath":"docs/wi/forgejo.md","lastUpdated":1757922727000}'),n={name:"docs/wi/forgejo.md"};function l(p,s,d,h,o,c){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="forgejo" tabindex="-1">Forgejo <a class="header-anchor" href="#forgejo" aria-label="Permalink to &quot;Forgejo&quot;">​</a></h1><br><div align="center"><img src="https://static.wikia.nocookie.net/logopedia/images/2/28/Forgejo.svg" width="300" alt="Forgejo Logo"></div><p>Forgejo — это свободная и открытая платформа для хостинга Git-репозиториев, созданная как дружелюбный <strong>форк проекта <a href="./gitea.html">Gitea</a></strong> в ответ на изменения в его управлении. Она предоставляет все ключевые функции для совместной разработки: управление репозиториями, отслеживание задач (issues), pull requests, встроенный CI/CD, вики, а также инструменты для управления проектами и командами.</p><p><a href="https://packages.altlinux.org/ru/sisyphus/srpms/forgejo/" target="_blank" rel="noreferrer">https://packages.altlinux.org/ru/sisyphus/srpms/forgejo/</a></p><p><a href="https://docs.altlinux.space/" target="_blank" rel="noreferrer">https://docs.altlinux.space/</a></p><p><a href="https://code.forgejo.org/forgejo/runner/releases/" target="_blank" rel="noreferrer">Ссылка на раннер</a></p><h2 id="установка-forgejo" tabindex="-1">Установка Forgejo <a class="header-anchor" href="#установка-forgejo" aria-label="Permalink to &quot;Установка Forgejo&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> forgejo</span></span></code></pre></div><p>Остальные этапы установки производятся абсолютно также, как и при установке <a href="./gitea.html">Gitea</a>, единственное отличие, это расположение файла <code>app.ini</code>: <code>/etc/forgejo/app.ini</code></p><h2 id="фишки-из-документации-которые-не-описаны-в-gitea" tabindex="-1">Фишки из документации, которые не описаны в Gitea <a class="header-anchor" href="#фишки-из-документации-которые-не-описаны-в-gitea" aria-label="Permalink to &quot;Фишки из документации, которые не описаны в Gitea&quot;">​</a></h2><h3 id="lxc" tabindex="-1">LXC <a class="header-anchor" href="#lxc" aria-label="Permalink to &quot;LXC&quot;">​</a></h3><p>Если указывается <code>lxc</code> как <code>label type</code>, то остальная ее часть интерпретируется как <code>template[:release[:lxc-helper config]]</code>где:</p><p><code>template[:release]</code> — это шаблон и версия для использования. <code>lxc-helper config</code> — это значение параметра <code>—config lxc-helper</code>, используемого при создании контейнера.</p><p>Исполнитель выполнит все шаги от имени root в контейнере LXC, созданном на основе этого шаблона и выпуска. Шаблон по умолчанию — debian, а выпуск по умолчанию — bullseye. Установлен <code>nodejs</code> версии 20.</p><p>Примеры лейблов:</p><p><code>bookworm:lxc://debian:bookworm:lxc docker</code> Определяется bookworm как контейнер LXC, работающий под управлением Debian GNU/Linux Bookworm. Он обладает необходимыми возможностями для запуска вложенного контейнера LXC и движка Docker.</p><p><code>bookworm:lxc://debian:bookworm</code> Определяется bookworm как контейнер LXC, работающий под управлением Debian GNU/Linux Bookworm. Он обладает необходимыми возможностями для запуска вложенного контейнера LXC, виртуальных машин KVM и движка Docker.</p><h3 id="host" tabindex="-1">HOST <a class="header-anchor" href="#host" aria-label="Permalink to &quot;HOST&quot;">​</a></h3><p>Если указывается <code>host</code> в качестве <code>label type</code>, то исполнитель выполнит все шаги в оболочке, ответвленной от исполнителя, непосредственно на хосте.</p><p>Внимание: никакой изоляции не существует, и одно задание может навсегда уничтожить хост.</p><p>Пример этикетки:</p><p><code>self-hosted:host</code> определяет <code>self-hosted</code> быть оболочкой.</p><h3 id="специальные-labels" tabindex="-1">Специальные labels <a class="header-anchor" href="#специальные-labels" aria-label="Permalink to &quot;Специальные labels&quot;">​</a></h3><p>Метки раннера также можно использовать для определения других специальных функций. Например, можно использовать <code>gpu:docker://node:20-bullseye</code> для определения бегуна с установленным графическим процессором. Рабочие процессы, которым требуется графический процессор, можно затем указать <code>runs-on: gpu</code> для выполнения на этом бегуне.</p><h2 id="настроики-хранилища" tabindex="-1">Настройки хранилища <a class="header-anchor" href="#настроики-хранилища" aria-label="Permalink to &quot;Настройки хранилища&quot;">​</a></h2><p>Хранилище для каждой подсистемы определяется в файле <code>app.ini</code>. Оно может быть на диске (локальное, по умолчанию) или использовать совместимый с S3 сервер (minio)[minio]. В обоих случаях каждая подсистема хранит все файлы (или объекты в терминологии S3) в выделенной директории, как показано в таблице ниже:</p><table tabindex="0"><thead><tr><th style="text-align:left;">Подсистема</th><th style="text-align:left;">Директория</th><th style="text-align:left;">Секции в <code>app.ini</code></th></tr></thead><tbody><tr><td style="text-align:left;">Вложения</td><td style="text-align:left;"><code>attachments/</code></td><td style="text-align:left;"><code>[attachment]</code></td></tr><tr><td style="text-align:left;">LFS</td><td style="text-align:left;"><code>lfs/</code></td><td style="text-align:left;"><code>[lfs]</code></td></tr><tr><td style="text-align:left;">Аватары</td><td style="text-align:left;"><code>avatars/</code></td><td style="text-align:left;"><code>[avatar]</code></td></tr><tr><td style="text-align:left;">Аватары репозиториев</td><td style="text-align:left;"><code>repo-avatars/</code></td><td style="text-align:left;"><code>[repo-avatar]</code></td></tr><tr><td style="text-align:left;">Архивы репозиториев</td><td style="text-align:left;"><code>repo-archive/</code></td><td style="text-align:left;"><code>[repo-archive]</code></td></tr><tr><td style="text-align:left;">Пакеты</td><td style="text-align:left;"><code>packages/</code></td><td style="text-align:left;"><code>[packages]</code></td></tr><tr><td style="text-align:left;">Логи действий</td><td style="text-align:left;"><code>actions_log/</code></td><td style="text-align:left;"><code>[storage.actions_log]</code></td></tr><tr><td style="text-align:left;">Артефакты действий</td><td style="text-align:left;"><code>actions_artifacts/</code></td><td style="text-align:left;"><code>[actions.artifacts]</code></td></tr></tbody></table><p>Например:</p><ul><li>Если <code>STORAGE_TYPE</code> имеет значение <code>local</code>, а <code>APP_DATA_PATH</code> — <code>/appdata</code>, то директорией по умолчанию для хранения вложений будет <code>/appdata/attachments</code>.</li><li>Если <code>STORAGE_TYPE</code> имеет значение <code>minio</code>, то директорией по умолчанию для хранения вложений в бакете <code>MINIO_BUCKET</code> будет <code>attachments/</code>.</li></ul><h3 id="изменение-хранилища-для-всех-подсистем" tabindex="-1">Изменение хранилища для всех подсистем <a class="header-anchor" href="#изменение-хранилища-для-всех-подсистем" aria-label="Permalink to &quot;Изменение хранилища для всех подсистем&quot;">​</a></h3><p>Секция <code>[storage]</code> может использоваться для изменения хранилища всех подсистем. По умолчанию используется локальное хранилище в <code>APP_DATA_PATH</code>, что эквивалентно записи следующего в <code>app.ini</code>:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[server]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">APP_DATA_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /forgejo/data</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = local</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /forgejo/data</span></span></code></pre></div><h4 id="использование-local" tabindex="-1">Использование local <a class="header-anchor" href="#использование-local" aria-label="Permalink to &quot;Использование local&quot;">​</a></h4><p>Для локального хранилища секция <code>[storage]</code> может использоваться только для изменения пути, под которым будут создаваться директории всех подсистем, с помощью настройки <code>PATH</code> с указанием абсолютного пути.</p><p>Например:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = local</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /mystorage</span></span></code></pre></div><p>изменит путь по умолчанию для хранения вложений на <code>/mystorage/attachments</code>, для LFS — на <code>/mystorage/lfs</code> и т.д.</p><h4 id="использование-minio" tabindex="-1">Использование minio <a class="header-anchor" href="#использование-minio" aria-label="Permalink to &quot;Использование minio&quot;">​</a></h4><p>Секция <code>[storage]</code> может использоваться для изменения типа хранилища по умолчанию, используемого всеми подсистемами, на <code>minio</code>.</p><p>Например:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ENDPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1:9000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ACCESS_KEY_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_SECRET_ACCESS_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = forgejo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_LOCATION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = us-east-1</span></span></code></pre></div><p>изменит хранилище по умолчанию для вложений на <code>attachments/</code> в бакете <code>forgejo</code>, для LFS — на <code>lfs/</code> в бакете <code>forgejo</code> и т.д.</p><p><strong>ПРИМЕЧАНИЕ:</strong> Параметр <code>MINIO_BASE_PATH</code> не должен быть установлен в секции <code>[storage]</code>.</p><p>Параметр конфигурации <code>MINIO_USE_SSL</code> по умолчанию имеет значение <code>false</code> для сохранения совместимости с локально размещенными экземплярами MinIO. Если предполагается использование внешнего провайдера S3, этому параметру следует присвоить значение <code>true</code>.</p><p>Например, предположим, что экземпляр (MinIO)[minio] находится по адресу <code>https://minio.example.com</code>:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_USE_SSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ENDPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio.example.com</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ACCESS_KEY_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_SECRET_ACCESS_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = bucket</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_LOCATION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = us-east-1</span></span></code></pre></div><h3 id="настроики-хранилища-для-отдельнои-подсистемы" tabindex="-1">Настройки хранилища для отдельной подсистемы <a class="header-anchor" href="#настроики-хранилища-для-отдельнои-подсистемы" aria-label="Permalink to &quot;Настройки хранилища для отдельной подсистемы&quot;">​</a></h3><p>Можно настроить некоторые подсистемы на использование хранилища S3, а другие — на использование локального хранилища, добавив настройки в их соответствующие секции. Например:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[attachment]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /otherstorage/attachments</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[lfs]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BASE_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = lfs/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ENDPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1:9000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ACCESS_KEY_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_SECRET_ACCESS_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = forgejo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_LOCATION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = us-east-1</span></span></code></pre></div><p>будет хранить вложения в локальной директории <code>/otherstorage/attachments</code>, в то время как файлы LFS будут храниться на S3-сервере в директории <code>lfs/</code> бакета <code>forgejo</code>.</p><h3 id="настроики-хранилища-1" tabindex="-1">Настройки хранилища <a class="header-anchor" href="#настроики-хранилища-1" aria-label="Permalink to &quot;Настройки хранилища&quot;">​</a></h3><p>Значение <code>STORAGE_TYPE</code> может быть <code>local</code> (по умолчанию) для директорий файловой системы или <code>minio</code> для S3-серверов. Каждый тип хранилища имеет свои собственные настройки, как объясняется ниже.</p><h4 id="использование-local-1" tabindex="-1">Использование local <a class="header-anchor" href="#использование-local-1" aria-label="Permalink to &quot;Использование local&quot;">​</a></h4><p>Существует всего одна настройка, когда <code>STORAGE_TYPE</code> установлен в <code>local</code>: <code>PATH</code>. Это должен быть абсолютный путь, и он интерпретируется следующим образом.</p><ul><li><p>В секции <code>[storage]</code> <code>PATH</code> — это путь, под которым будут создаваться директории каждой подсистемы вместо <code>APP_DATA_PATH</code>. Например, если <code>APP_DATA_PATH</code> равен <code>/appdata</code>:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = local</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /mystorage</span></span></code></pre></div><p>создаст вложения в <code>/mystorage/attachments</code> вместо <code>/appdata/attachments</code>, файлы LFS в <code>/mystorage/lfs</code> вместо <code>/appdata/lfs</code> и т.д.</p></li><li><p>В секции, посвященной конкретной подсистеме (см. таблицу во введении), <code>PATH</code> — это базовый путь, под которым будут храниться все файлы. Например:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = local</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /mystorage</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[attachment]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = local</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /otherstorage/attachments</span></span></code></pre></div><p>будет хранить вложения в <code>/otherstorage/attachments</code>, в то время как файлы LFS будут храниться в <code>/mystorage/lfs</code>.</p></li></ul><h4 id="использование-minio-1" tabindex="-1">Использование minio <a class="header-anchor" href="#использование-minio-1" aria-label="Permalink to &quot;Использование minio&quot;">​</a></h4><p>Когда <code>STORAGE_TYPE</code> установлен в <code>minio</code>, настройки используются для подключения к совместимому с S3 серверу:</p><ul><li><code>SERVE_DIRECT</code>: <code>false</code> — Позволяет драйверу хранилища перенаправлять на аутентифицированные URL-адреса для прямой раздачи файлов. Поддерживается только через подписанные URL-адреса.</li><li><code>MINIO_ENDPOINT</code>: <code>localhost:9000</code> — Конечная точка S3 для подключения.</li><li><code>MINIO_ACCESS_KEY_ID</code> — <code>accessKeyID</code> S3 для подключения.</li><li><code>MINIO_SECRET_ACCESS_KEY</code> — <code>secretAccessKey</code> S3 для подключения.</li><li><code>MINIO_BUCKET</code>: <code>forgejo</code> — Бакет S3 для хранения данных.</li><li><code>MINIO_BUCKET_LOOKUP</code>: <code>auto</code> — Тип поиска бакета S3. <ul><li><code>auto</code> — Автоопределение</li><li><code>dns</code> — Стиль виртуального хоста</li><li><code>path</code> — Path Style</li></ul></li><li><code>MINIO_LOCATION</code>: <code>us-east-1</code> — Локация S3 для создания бакета.</li><li><code>MINIO_USE_SSL</code>: <code>false</code> — Использование SSL в S3.</li><li><code>MINIO_INSECURE_SKIP_VERIFY</code>: <code>false</code> — Пропуск проверки SSL в S3.</li><li><code>MINIO_CHECKSUM_ALGORITHM</code> — Алгоритм контрольной суммы Minio: <code>default</code> (для MinIO, garage или AWS S3) или <code>md5</code> (для Cloudflare или Backblaze).</li></ul><p>При использовании в секции <code>[storage]</code> они применяются ко всем подсистемам. При использовании в секции, специфичной для подсистемы (см. таблицу во введении), они используются только для объектов, принадлежащих этой подсистеме. Вот пример:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[storage]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SERVE_DIRECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ENDPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = garage:9000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ACCESS_KEY_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_SECRET_ACCESS_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = forgejo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET_LOOKUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = auto</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_LOCATION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = us-east-1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_USE_SSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_INSECURE_SKIP_VERIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_CHECKSUM_ALGORITHM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = md5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[lfs]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">STORAGE_TYPE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BASE_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = nonstandardlfs/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SERVE_DIRECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ENDPOINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = minio:9000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_ACCESS_KEY_ID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_SECRET_ACCESS_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = [redacted]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = forgejo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_BUCKET_LOOKUP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = auto</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_LOCATION</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = us-east-1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_USE_SSL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MINIO_INSECURE_SKIP_VERIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span></code></pre></div><ul><li><code>MINIO_BASE_PATH</code>: Допустимо только в специфичной для подсистемы секции (см. таблицу во введении). Переопределяет директорию по умолчанию, в которой объекты хранятся в бакете <code>MINIO_BUCKET</code>.</li></ul><p>Для всех подсистем, которые используют тип хранилища <code>minio</code>, указанный в секции <code>[storage]</code>, директория, в которой хранятся объекты, определяется с помощью таблицы во введении. Например, файлы LFS будут храниться в директории <code>lfs/</code> внутри бакета <code>forgejo</code>.</p><p>Когда хранилище <code>minio</code> настроено в секции, специфичной для подсистемы, параметр <code>MINIO_BASE_PATH</code> может быть использован для переопределения директории по умолчанию. В примере выше <code>MINIO_BASE_PATH = nonstandardlfs/</code> означает, что объекты LFS будут храниться в директории <code>nonstandardlfs/</code> бакета <code>forgejo</code> вместо директории <code>lfs/</code>.</p><h3 id="устаревшие-настроики" tabindex="-1">Устаревшие настройки <a class="header-anchor" href="#устаревшие-настроики" aria-label="Permalink to &quot;Устаревшие настройки&quot;">​</a></h3><p>Некоторые настройки устарели, но все еще поддерживаются в интересах обратной совместимости. Их следует заменить следующим образом:</p><ul><li><code>[server].LFS_CONTENT_PATH</code> заменяется на <code>[lfs].PATH</code></li><li><code>[picture].AVATAR_UPLOAD_PATH</code> заменяется на <code>[avatar].PATH</code></li><li><code>[picture].REPOSITORY_AVATAR_UPLOAD_PATH</code> заменяется на <code>[repo-avatar].PATH</code></li></ul><p>Устаревшие настройки имеют более низкий приоритет и будут переопределены их заменами, если присутствуют обе. Например:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[picture]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AVATAR_UPLOAD_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /legacy_path</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[avatar]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /avatar_path</span></span></code></pre></div><p>будет хранить файлы аватаров в <code>/avatar_path</code>.</p><h2 id="реестр-пакетов-alt" tabindex="-1">Реестр пакетов Alt <a class="header-anchor" href="#реестр-пакетов-alt" aria-label="Permalink to &quot;Реестр пакетов Alt&quot;">​</a></h2><p>Публикуйте пакеты Alt для вашего пользователя или организации.</p><h3 id="требования" tabindex="-1">Требования <a class="header-anchor" href="#требования" aria-label="Permalink to &quot;Требования&quot;">​</a></h3><p>Для работы с реестром Alt необходимо использовать менеджер пакетов APT-RPM для использования пакетов.</p><p>В следующих примерах используется <code>apt-rpm</code>.</p><h3 id="настроика-реестра-пакетов" tabindex="-1">Настройка реестра пакетов <a class="header-anchor" href="#настроика-реестра-пакетов" aria-label="Permalink to &quot;Настройка реестра пакетов&quot;">​</a></h3><p>Чтобы зарегистрировать реестр RPM, добавьте URL в список известных источников в файл конфигурации в каталоге <code>/etc/apt/sources.list.d/</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://forgejo.example.com/api/packages/{owner}/alt/{group}.repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {arch}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Заполнитель</th><th>Описание</th></tr></thead><tbody><tr><td><code>owner</code></td><td>Владелец пакета.</td></tr><tr><td><code>group</code></td><td>Опционально: Например, пусто, <code>el7</code>, <code>rocky/el9</code>, <code>test/fc38</code>.</td></tr><tr><td><code>arch</code></td><td>Архитектура.</td></tr></tbody></table><p><strong>Пример:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># без группы и архитектуры x86_64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://forgejo.example.com/api/packages/testuser/alt/alt.repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> x86_64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># с группой &#39;centos/el7&#39; и архитектурой noarch</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://forgejo.example.com/api/packages/testuser/alt/group/example1.repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> noarch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic</span></span></code></pre></div><p>Если реестр приватный, укажите учетные данные в URL. Можно использовать пароль или персональный токен доступа:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://{username}:{your_password_or_token}@forgejo.example.com/api/packages/{owner}/alt/{group}.repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {arch}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> classic</span></span></code></pre></div><p>Вам также потребуется добавить учетные данные в URL в созданном файле <code>.repo</code> в <code>/etc/apt/sources.list.d/</code>.</p><h3 id="публикация-пакета" tabindex="-1">Публикация пакета <a class="header-anchor" href="#публикация-пакета" aria-label="Permalink to &quot;Публикация пакета&quot;">​</a></h3><p>Чтобы опубликовать пакет RPM (<code>*.rpm</code>), выполните операцию HTTP <code>PUT</code>, поместив содержимое пакета в тело запроса.</p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://forgejo.example.com/api/packages/{owner}/alt/{group}/upload</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Параметр</th><th>Описание</th></tr></thead><tbody><tr><td><code>owner</code></td><td>Владелец пакета.</td></tr><tr><td><code>group</code></td><td>Опционально: Например, пусто, <code>el7</code>, <code>rocky/el9</code>, <code>test/fc38</code>.</td></tr></tbody></table><p><strong>Пример запроса с использованием HTTP Basic аутентификации:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># без группы</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_username:your_password_or_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     --upload-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/file.rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     https://forgejo.example.com/api/packages/testuser/alt/upload</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># с группой &#39;group/example1&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_username:your_password_or_token</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     --upload-file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path/to/file.rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     https://forgejo.example.com/api/packages/testuser/alt/group/example1/upload</span></span></code></pre></div><p>Если вы используете 2FA или OAuth, используйте персональный токен доступа вместо пароля. Нельзя опубликовать файл с тем же именем дважды в одном пакете. Сначала необходимо удалить существующую версию пакета.</p><p>Сервер отвечает со следующими кодами состояния HTTP:</p><table tabindex="0"><thead><tr><th>Код состояния HTTP</th><th>Значение</th></tr></thead><tbody><tr><td><code>201 Created</code></td><td>Пакет опубликован.</td></tr><tr><td><code>400 Bad Request</code></td><td>Пакет невалиден.</td></tr><tr><td><code>409 Conflict</code></td><td>Файл пакета с такой же комбинацией параметров уже существует в пакете.</td></tr></tbody></table><h3 id="удаление-пакета" tabindex="-1">Удаление пакета <a class="header-anchor" href="#удаление-пакета" aria-label="Permalink to &quot;Удаление пакета&quot;">​</a></h3><p>Чтобы удалить пакет RPM, выполните операцию HTTP <code>DELETE</code>. Это также удалит версию пакета, если в нем не останется файлов.</p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://forgejo.example.com/api/packages/{owner}/alt/{group}.repo/{architecture}/RPMS.classic/{package_file_name.rpm}</span></span></code></pre></div><table tabindex="0"><thead><tr><th>Параметр</th><th>Описание</th></tr></thead><tbody><tr><td><code>owner</code></td><td>Владелец пакета.</td></tr><tr><td><code>group</code></td><td>Опционально: Группа пакета.</td></tr><tr><td><code>package_file_name.rpm</code></td><td>Имя файла пакета.</td></tr><tr><td><code>architecture</code></td><td>Архитектура пакета.</td></tr></tbody></table><p><strong>Пример запроса с использованием HTTP Basic аутентификации:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># без группы</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_username:your_token_or_password</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DELETE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     https://forgejo.example.com/api/packages/testuser/alt/alt.repo/x86_64/RPMS.classic/test-package.rpm</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># с группой &#39;group/example1&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your_username:your_token_or_password</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DELETE</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     https://forgejo.example.com/api/packages/testuser/alt/group/example1.repo/x86_64/RPMS.classic/test-package.rpm</span></span></code></pre></div><p>Сервер отвечает со следующими кодами состояния HTTP:</p><table tabindex="0"><thead><tr><th>Код состояния HTTP</th><th>Значение</th></tr></thead><tbody><tr><td><code>204 No Content</code></td><td>Успешно.</td></tr><tr><td><code>404 Not Found</code></td><td>Пакет или файл не найден.</td></tr></tbody></table><h3 id="установка-пакета" tabindex="-1">Установка пакета <a class="header-anchor" href="#установка-пакета" aria-label="Permalink to &quot;Установка пакета&quot;">​</a></h3><p>Чтобы установить пакет из реестра RPM, выполните следующие команды:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># использовать последнюю версию</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {package_name}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># использовать конкретную версию</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {package_name}-{package_version}</span></span></code></pre></div>`,104)]))}const g=a(n,[["render",l]]);export{k as __pageData,g as default};
