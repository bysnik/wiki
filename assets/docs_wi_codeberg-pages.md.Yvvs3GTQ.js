import{_ as o,c as d,o as a,ag as c}from"./chunks/framework.D4Vqf8I7.js";const h=JSON.parse('{"title":"Codeberg Pages","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/codeberg-pages.md","filePath":"docs/wi/codeberg-pages.md","lastUpdated":1756808278000}'),r={name:"docs/wi/codeberg-pages.md"};function p(t,e,s,i,l,g){return a(),d("div",null,e[0]||(e[0]=[c('<h1 id="codeberg-pages" tabindex="-1">Codeberg Pages <a class="header-anchor" href="#codeberg-pages" aria-label="Permalink to &quot;Codeberg Pages&quot;">​</a></h1><p><img src="https://codeberg.org/attachments/10a0fc7a-eafe-4c1b-88a4-54352031fef6" alt=""></p><p><a href="https://codeberg.org/Codeberg/pages-server" target="_blank" rel="noreferrer">https://codeberg.org/Codeberg/pages-server</a></p><p><a href="https://docs.altlinux.space/" target="_blank" rel="noreferrer">https://docs.altlinux.space/</a></p><h2 id="установка" tabindex="-1">Установка <a class="header-anchor" href="#установка" aria-label="Permalink to &quot;Установка&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pages-server</span></span></code></pre></div><h2 id="быстрыи-старт" tabindex="-1">Быстрый старт <a class="header-anchor" href="#быстрыи-старт" aria-label="Permalink to &quot;Быстрый старт&quot;">​</a></h2><p>Привязка пользовательских доменов больше не является статической, но может осуществляться с помощью DNS:</p><p>Добавьте текстовый файл <code>.domains</code> в репозиторий, содержащий список разрешённых доменов, разделённый новыми строками. Первая строка будет каноническим доменом/URL; все остальные вхождения будут перенаправляться на него.</p><p>Добавьте запись <code>CNAME</code> в свой домен, указывающую на <code>[[{branch}.]{repo}.]{owner}.codeberg.page</code> (<code>repo</code> по умолчанию — <code>«pages»</code>, <code>«branch»</code> по умолчанию — на ветку по умолчанию, если <code>«repo»</code> — <code>«pages»</code>, или на <code>«pages»</code>, если <code>«repo»</code> — что-то другое). Если имя ветки содержит символы слеша, необходимо заменить <code>«/»</code> в имени ветки на <code>«~»</code>: <code>www.example.org. IN CNAME main.pages.example.codeberg.page.</code></p><p>Если для <code>«www.example.org»</code> задана запись <code>CNAME</code>, вы можете перенаправить туда трафик с чистого домена, добавив запись <code>ALIAS</code> для <code>«example.org»</code> (если ваш провайдер допускает использование записей <code>ALIAS</code> или аналогичных записей, в противном случае используйте <code>A/AAAA</code>) вместе с записью <code>TXT</code>, указывающей на ваш репозиторий (точно так же, как запись <code>CNAME</code>): <code>example.org IN ALIAS codeberg.page. example.org IN TXT main.pages.example.codeberg.page.</code></p><p>Сертификаты генерируются, обновляются и очищаются автоматически с помощью Let&#39;s Encrypt через TLS-запрос.</p><h2 id="развертывание" tabindex="-1">Развертывание <a class="header-anchor" href="#развертывание" aria-label="Permalink to &quot;Развертывание&quot;">​</a></h2><p>Внимание: есть некоторые оговорки</p><p>В настоящее время для развёртывания требуются определённые навыки системного администрирования, а также понимание и разработка кода, чтобы со временем вы могли редактировать ненастраиваемые и специфичные для Codeberg параметры. В будущем мы постараемся сократить их количество и сделать хостинг Codeberg Pages таким же простым, как настройка Gitea.</p><p>Самое сложное — добавить поддержку пользовательского домена, если вы собираетесь её использовать. SSL-сертификаты (запрос и продление) автоматически обрабатываются сервером Pages, но если вы хотите запустить его на общем IP-адресе (а не на отдельном), вам потребуется настроить обратный прокси-сервер так, чтобы он не разрывал TLS-подключения, а перенаправлял запросы на уровне IP на сервер Pages.</p><h2 id="переменные-среды" tabindex="-1">Переменные среды <a class="header-anchor" href="#переменные-среды" aria-label="Permalink to &quot;Переменные среды&quot;">​</a></h2><ul><li><p><code>ACME_ACCEPT_TERMS</code> (по умолчанию: <code>использовать самоподписанный сертификат</code>): Установите значение <code>«true»</code>, чтобы принять Условия обслуживания вашего поставщика ACME.</p></li><li><p><code>ACME_API</code> (по умолчанию: <code>https://acme-v02.api.letsencrypt.org/directory</code> ): установите значение <code>https://acme.mock.directory</code>, чтобы использовать недействительные сертификаты без проверки (отлично подходит для отладки). ZeroSSL может оказаться лучше в будущем, поскольку у него нет ограничений по скорости и он не конфликтует с официальными сертификатами Codeberg (которые используют Let&#39;s Encrypt), но мне пока не удалось его заставить работать.</p></li><li><p><code>ACME_EAB_KID</code> &amp; <code>ACME_EAB_HMAC</code> (по умолчанию: <code>не использовать EAB</code>): учетные данные EAB, например для ZeroSSL.</p></li><li><p><code>ACME_EMAIL</code> (по умолчанию: <code>noreply@example.email</code>): настройте электронную почту, отправляемую на сервер API ACME, например, для получения напоминаний о продлении.</p></li><li><p><code>ACME_USE_RATE_LIMITS</code> (по умолчанию: <code>true</code>): Установите значение false, чтобы отключить ограничения скорости, например, с помощью ZeroSSL.</p></li><li><p><code>DNS_PROVIDER</code> (по умолчанию: <code>использовать самоподписанный сертификат</code>): Код DNS-провайдера ACME для основного подстановочного знака домена. Доступные значения и дополнительные переменные среды см. на странице <code>https://go-acme.github.io/lego/dns/</code>.</p></li><li><p><code>ENABLE_HTTP_SERVER</code> (по умолчанию: <code>false</code>): Установите значение <code>true</code>, чтобы включить проверку HTTP-01 и перенаправить все остальные HTTP-запросы на HTTPS. В настоящее время работает только с портом 80.</p></li><li><p><code>GITEA_API_TOKEN</code> (по умолчанию: <code>пусто</code>): токен API для экземпляра Gitea для доступа к непубличным (например, ограниченным) репозиториям.</p></li><li><p><code>GITEA_ROOT</code> (по умолчанию: <code>https://codeberg.org</code>): корень вышестоящего экземпляра Gitea.</p></li><li><p><code>HOST&amp; PORT</code> (по умолчанию: <code>[::]</code> &amp; <code>443</code>): адрес прослушивания.</p></li><li><p><code>LOG_LEVEL</code> (по умолчанию: <code>warn</code>): установите этот параметр, чтобы указать уровень ведения журнала.</p></li><li><p><code>NO_DNS_01</code> (по умолчанию: <code>false</code>): отключить использование ACME DNS. Это означает, что wildcard-сертификат будет самоподписанным, и все домены и поддомены будут иметь отдельный сертификат. Поскольку это может привести к ограничению скорости со стороны провайдера ACME, этот параметр не рекомендуется для экземпляров Gitea/Forgejo с открытыми регистрациями или большим количеством пользователей/организаций.</p></li><li><p><code>PAGES_DOMAIN</code> (по умолчанию: <code>codeberg.page</code>): основной домен для страниц.</p></li><li><p><code>RAW_DOMAIN</code> (по умолчанию: <code>raw.codeberg.page</code>): домен для необработанных ресурсов (должен быть поддоменом <code>PAGES_DOMAIN</code>).</p></li></ul><h2 id="пользовательская-страница-ошибок" tabindex="-1">Пользовательская страница ошибок <a class="header-anchor" href="#пользовательская-страница-ошибок" aria-label="Permalink to &quot;Пользовательская страница ошибок&quot;">​</a></h2><p>Пользовательский шаблон страницы с ошибкой можно создать, создав <code>custom/error.html</code>. Доступные для шаблона данные включают:</p><ul><li>{{ .StatusCode }}: Код статуса HTTP (например, 404)</li><li>{{ .StatusText }}: Текстовое имя, связанное с кодом статуса (например, «Не найдено»).</li><li>{{ .Message }}: Причина ошибки</li></ul>',21)]))}const A=o(r,[["render",p]]);export{h as __pageData,A as default};
