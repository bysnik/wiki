import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.D4Vqf8I7.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/disciplines/osis/p1.md","filePath":"docs/disciplines/osis/p1.md","lastUpdated":1756809451000}'),n={name:"docs/disciplines/osis/p1.md"};function l(p,s,o,h,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h3 id="практическая-работа-no1" tabindex="-1">Практическая работа №1 <a class="header-anchor" href="#практическая-работа-no1" aria-label="Permalink to &quot;Практическая работа №1&quot;">​</a></h3><p><strong>Тема:</strong> Ядерные и внеядерные компоненты Linux<br><strong>Цель работы:</strong> Научиться различать ядерные и внеядерные компоненты операционной системы Linux, изучить их взаимодействие через практические примеры.</p><h3 id="инструкция-по-выполнению-работы" tabindex="-1">Инструкция по выполнению работы <a class="header-anchor" href="#инструкция-по-выполнению-работы" aria-label="Permalink to &quot;Инструкция по выполнению работы&quot;">​</a></h3><p><em>Преподаватель демонстрирует каждый шаг, студенты повторяют команды в терминале и фиксируют результаты.</em></p><hr><h4 id="шаг-1-изучение-информации-о-ядре-linux" tabindex="-1"><strong>Шаг 1. Изучение информации о ядре Linux</strong> <a class="header-anchor" href="#шаг-1-изучение-информации-о-ядре-linux" aria-label="Permalink to &quot;**Шаг 1. Изучение информации о ядре Linux**&quot;">​</a></h4><p><strong>Цель:</strong> Убедиться, что вы работаете с ядром Linux, и изучить его параметры.</p><ol><li><p><strong>Проверьте версию ядра:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span></span></code></pre></div><p><em>Пример вывода:</em><br><code>Linux ubuntu 5.15.0-86-generic #96-Ubuntu SMP ... x86_64 GNU/Linux</code><br><strong>Пояснение:</strong></p><ul><li><code>5.15.0-86-generic</code> — версия ядра.</li><li><code>#96-Ubuntu</code> — номер сборки, специфичной для дистрибутива.</li><li><strong>Ядерный компонент:</strong> Ядро управляет аппаратными ресурсами и базовыми функциями ОС.</li></ul></li><li><p><strong>Посмотрите детали ядра через файловую систему <code>/proc</code>:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/version</span></span></code></pre></div><p><em>Вывод:</em> Тот же, что и в <code>uname -a</code>, но в «сыром» виде.<br><strong>Пояснение:</strong></p><ul><li><code>/proc</code> — виртуальная файловая система, отображающая данные ядра в реальном времени.</li></ul></li></ol><hr><h4 id="шаг-2-анализ-загруженных-модулеи-ядра" tabindex="-1"><strong>Шаг 2. Анализ загруженных модулей ядра</strong> <a class="header-anchor" href="#шаг-2-анализ-загруженных-модулеи-ядра" aria-label="Permalink to &quot;**Шаг 2. Анализ загруженных модулей ядра**&quot;">​</a></h4><p><strong>Цель:</strong> Увидеть, какие модули ядра активны в системе.</p><ol><li><p><strong>Список загруженных модулей:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsmod</span></span></code></pre></div><p><em>Пример вывода:</em></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Module                  Size  Used by</span></span>
<span class="line"><span>snd_hda_codec_generic    81920  1</span></span>
<span class="line"><span>...</span></span></code></pre></div><p><strong>Пояснение:</strong></p><ul><li>Модули ядра (например, <code>snd_hda_codec_generic</code> для звука) — это <strong>ядерные компоненты</strong>, расширяющие функционал ядра без перезагрузки.</li></ul></li><li><p><strong>Поиск конкретного модуля (например, связанного с сетью):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsmod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> net</span></span></code></pre></div></li></ol><hr><h4 id="шаг-3-исследование-процессов-ядра" tabindex="-1"><strong>Шаг 3. Исследование процессов ядра</strong> <a class="header-anchor" href="#шаг-3-исследование-процессов-ядра" aria-label="Permalink to &quot;**Шаг 3. Исследование процессов ядра**&quot;">​</a></h4><p><strong>Цель:</strong> Найти процессы, непосредственно связанные с ядром.</p><ol><li><p><strong>Просмотр всех процессов:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span></span></code></pre></div><p><strong>Обратите внимание на процессы вида <code>[kthreadd]</code>, <code>[kworker/*]</code>:</strong></p><ul><li>Это потоки ядра (kernel threads), управляющие задачами в фоне (например, обработка прерываний).</li><li><strong>Ядерный компонент:</strong> Такие процессы не имеют PID в пользовательском пространстве и создаются самим ядром.</li></ul></li><li><p><strong>Фильтрация процессов ядра:</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\[.*\\]&quot;</span></span></code></pre></div><p><em>Вывод:</em> Список процессов в квадратных скобках — это внутренние задачи ядра.</p></li></ol><hr><h4 id="шаг-4-изучение-внеядерных-компонентов" tabindex="-1"><strong>Шаг 4. Изучение внеядерных компонентов</strong> <a class="header-anchor" href="#шаг-4-изучение-внеядерных-компонентов" aria-label="Permalink to &quot;**Шаг 4. Изучение внеядерных компонентов**&quot;">​</a></h4><p><strong>Цель:</strong> Определить компоненты, работающие в пользовательском пространстве.</p><ol><li><p><strong>Просмотр установленных пакетов (пакетный менеджер):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Для Ubuntu/Debian</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Или</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> head</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # Для CentOS/RHEL</span></span></code></pre></div><p><strong>Пояснение:</strong></p><ul><li>Пакеты (например, <code>bash</code>, <code>nginx</code>, <code>firefox</code>) — это <strong>внеядерные компоненты</strong>.</li><li>Они работают в пользовательском пространстве и взаимодействуют с ядром через системные вызовы.</li></ul></li><li><p><strong>Просмотр активных сервисов (демонов):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list-units</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --type=service</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --state=running</span></span></code></pre></div><p><em>Пример вывода:</em></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>UNIT                     LOAD   ACTIVE SUB     DESCRIPTION</span></span>
<span class="line"><span>ssh.service              loaded active running OpenBSD Secure Shell server</span></span>
<span class="line"><span>...</span></span></code></pre></div><p><strong>Пояснение:</strong></p><ul><li>Сервисы (демоны) — внеядерные компоненты, управляющие фоновыми задачами (например, веб-сервер, SSH).</li></ul></li><li><p><strong>Проверка оболочки (shell):</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $SHELL</span></span></code></pre></div><p><em>Вывод:</em> <code>/bin/bash</code> — путь к оболочке, которая является <strong>внеядерным компонентом</strong>.</p></li></ol><hr><h4 id="шаг-5-сравнение-ядерных-и-внеядерных-компонентов" tabindex="-1"><strong>Шаг 5. Сравнение ядерных и внеядерных компонентов</strong> <a class="header-anchor" href="#шаг-5-сравнение-ядерных-и-внеядерных-компонентов" aria-label="Permalink to &quot;**Шаг 5. Сравнение ядерных и внеядерных компонентов**&quot;">​</a></h4><p><strong>Цель:</strong> Систематизировать полученные данные.</p><ol><li><p><strong>Заполните таблицу в тетради:</strong></p><table tabindex="0"><thead><tr><th>Компонент</th><th>Пример</th><th>Принадлежность</th><th>Как проверить?</th></tr></thead><tbody><tr><td>Ядерный</td><td>Модуль <code>snd_hda_codec</code></td><td>Ядро</td><td><code>lsmod</code></td></tr><tr><td>Внеядерный</td><td>Сервис <code>ssh.service</code></td><td>Пользовательское пространство</td><td><code>systemctl</code></td></tr><tr><td>Ядерный</td><td>Процесс <code>[kworker/0:1]</code></td><td>Ядро</td><td><code>ps -ef</code></td></tr><tr><td>Внеядерный</td><td>Оболочка <code>bash</code></td><td>Пользовательское пространство</td><td><code>echo $SHELL</code></td></tr></tbody></table></li><li><p><strong>Вывод:</strong></p><ul><li>Ядро — «мозг» системы, отвечающий за управление ресурсами.</li><li>Внеядерные компоненты (пакеты, сервисы, оболочки) предоставляют пользователю функционал, но зависят от ядра.</li></ul></li></ol><hr><h3 id="контрольные-вопросы-для-самопроверки" tabindex="-1">Контрольные вопросы (для самопроверки) <a class="header-anchor" href="#контрольные-вопросы-для-самопроверки" aria-label="Permalink to &quot;Контрольные вопросы (для самопроверки)&quot;">​</a></h3><ol><li>Какая команда покажет версию ядра Linux?</li><li>Почему процессы в квадратных скобках (например, <code>[kthreadd]</code>) считаются ядерными?</li><li>Приведите 3 примера внеядерных компонентов и объясните их назначение.</li><li>Как проверить, какие модули ядра используются для работы Wi-Fi?</li></ol><hr><h3 id="дополнительное-задание-по-желанию" tabindex="-1">Дополнительное задание (по желанию) <a class="header-anchor" href="#дополнительное-задание-по-желанию" aria-label="Permalink to &quot;Дополнительное задание (по желанию)&quot;">​</a></h3><ol><li>Установите новый пакет (например, <code>htop</code>):<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> htop</span></span></code></pre></div></li><li>Запустите его и сравните процессы, отображаемые в <code>htop</code> и <code>ps -ef</code>.</li><li>Объясните, к какой категории (ядерные/внеядерные) относится <code>htop</code>.</li></ol><hr><h3 id="требования-к-отчету" tabindex="-1">Требования к отчету <a class="header-anchor" href="#требования-к-отчету" aria-label="Permalink to &quot;Требования к отчету&quot;">​</a></h3><ol><li>Скриншоты выполнения ключевых команд (Step 1–4).</li><li>Заполненная таблица из Шага 5.</li><li>Ответы на контрольные вопросы.</li></ol><p><strong>Важно:</strong> Все действия выполняются в учебных целях. Не запускайте опасные команды (например, <code>rm -rf /</code>) без подтверждения преподавателя!</p><hr><p><strong>Примечание:</strong> Эта работа закрепляет теорию архитектуры ОС, показывая разделение на ядро (монолитное ядро Linux) и пользовательское пространство (POSIX-совместимые утилиты, демоны).</p>`,36)]))}const k=i(n,[["render",l]]);export{g as __pageData,k as default};
