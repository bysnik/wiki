import{_ as i}from"./chunks/smb.D0vVgchH.js";import{_ as a,c as n,o as t,ag as e}from"./chunks/framework.D4Vqf8I7.js";const g=JSON.parse('{"title":"Протокол smb","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/altsp/37.share.md","filePath":"docs/wi/altsp/37.share.md","lastUpdated":1760542433000}'),h={name:"docs/wi/altsp/37.share.md"};function p(l,s,k,d,r,F){return t(),n("div",null,s[0]||(s[0]=[e(`<p>Операционная система должна обеспечивать пользователю возможность предоставлять доступ к файлам и каталогам своего компьютера, публиковать папки в локальной сети.</p><hr><p>Стенд: SMB NFS FTP iSCSI Server (192.168.0.1) &amp; SHARE Client (192.168.0.2)</p><p>Документ [[ЛКНВ.11100-01 90 03 Руководства администратора.pdf]], стр 1103-1115</p><h1 id="протокол-smb" tabindex="-1">Протокол smb <a class="header-anchor" href="#протокол-smb" aria-label="Permalink to &quot;Протокол smb&quot;">​</a></h1><h2 id="используя-консоль" tabindex="-1">Используя консоль <a class="header-anchor" href="#используя-консоль" aria-label="Permalink to &quot;Используя консоль&quot;">​</a></h2><p>Создаем папку, которая будет общей; назначаем ей права</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mkdir /home/docstore; chmod 777 /home/docstore</span></span></code></pre></div><p>Делаем бэкап конфигурационного файла самбы</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mv /etc/samba/smb.conf /etc/samba/smb.conf.old</span></span></code></pre></div><h3 id="папка-без-пароля" tabindex="-1">Папка без пароля <a class="header-anchor" href="#папка-без-пароля" aria-label="Permalink to &quot;Папка без пароля&quot;">​</a></h3><p>Прописываем в <code>/etc/samba/smb.conf</code> следующие параметры</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[global]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> charset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CP866</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> charset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> utf8</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#имя рабочей группы</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">workgroup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WORKGROUP</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#имя сервера</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Filestore</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#группа пользователей</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">security</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> USER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Bad</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#имя ресурса</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Public] </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#путь к папке</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/docstore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">guest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ok</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">browseable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0777</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0777</span></span></code></pre></div><p>Создаем служебный каталог:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/samba/private</span></span></code></pre></div><p>Перезапускаем сервис SMB:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> smb.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nmb.service</span></span></code></pre></div><p>Включаем автозапуск:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> smb.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nmb.service</span></span></code></pre></div><h3 id="добавление-второи-папки-без-пароля" tabindex="-1">Добавление второй папки без пароля <a class="header-anchor" href="#добавление-второи-папки-без-пароля" aria-label="Permalink to &quot;Добавление второй папки без пароля&quot;">​</a></h3><p>Делаем так же как и в первом шаге, только добавляем раздел с описанием второго ресурса ниже первого.</p><p>В первом примере у нас Public и папка docstore. Во втором будет Share и files.</p><p>Создаем папку</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/files</span></span></code></pre></div><p>Прописываем в <code>/etc/samba/smb.conf</code> следующие параметры</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Share]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/files</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> only</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">guest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ok</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">browseable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0777</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0777</span></span></code></pre></div><p>Перезапускаем сервис SMB:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> smb.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nmb.service</span></span></code></pre></div><h3 id="папка-с-паролем" tabindex="-1">Папка с паролем <a class="header-anchor" href="#папка-с-паролем" aria-label="Permalink to &quot;Папка с паролем&quot;">​</a></h3><p>Создадим пользователя в системе, имя пользователя <strong>share</strong>, его пароль <strong>1q@W3e</strong>, при создании сделаем каталог пользователя (ключ <code>-m</code>) и зададим пароль (ключ <code>-p</code>).</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">useradd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1q@W3e</span></span></code></pre></div><p>Назначим нового владельца, пользователя share, и несколько изменим разрешения:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/kadry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/kadry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share:users</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/kadry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ugo+rwx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/kadry</span></span></code></pre></div><blockquote><p><strong>Примечание:</strong> Утилита smbpasswd находится в пакете samba-client</p></blockquote><p>Добавляем пользователя в Samba (вводим пароль 1q@W3e):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">smbpasswd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share</span></span></code></pre></div><p>Добавим в <code>smb.conf</code> следующее:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Kadry]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">comment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Кадры</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/kadry</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">read</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> only</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">guest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ok</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">browseable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0777</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mask</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0777</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">force</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">force</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> group</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> users</span></span></code></pre></div><p>Папка будет доступна пользователю share с паролем 1q@W3e.</p><p>Перезапускаем сервис SMB:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> smb.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nmb.service</span></span></code></pre></div><h2 id="используя-графическии-интерфеис" tabindex="-1">Используя графический интерфейс <a class="header-anchor" href="#используя-графическии-интерфеис" aria-label="Permalink to &quot;Используя графический интерфейс&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> smb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nmb</span></span></code></pre></div><p>Создаем папку в удобной директории. Нажимаем по ней ПКМ - Опции публикации</p><p><img src="`+i+`" alt=""></p><p>Настраиваем по своему желанию и нажимаем Создать публикацию.</p><h1 id="протокол-nfs" tabindex="-1">Протокол nfs <a class="header-anchor" href="#протокол-nfs" aria-label="Permalink to &quot;Протокол nfs&quot;">​</a></h1><h2 id="сервер-nfs" tabindex="-1">Сервер NFS <a class="header-anchor" href="#сервер-nfs" aria-label="Permalink to &quot;Сервер NFS&quot;">​</a></h2><h3 id="настроика-сервера-nfs" tabindex="-1">Настройка сервера NFS <a class="header-anchor" href="#настроика-сервера-nfs" aria-label="Permalink to &quot;Настройка сервера NFS&quot;">​</a></h3><h4 id="синтаксис-etc-exports" tabindex="-1">Синтаксис <code>/etc/exports</code> <a class="header-anchor" href="#синтаксис-etc-exports" aria-label="Permalink to &quot;Синтаксис \`/etc/exports\`&quot;">​</a></h4><p>Все настройки NFS-сервера хранятся в файле <code>/etc/exports</code>.</p><p>Файл <code>/etc/exports</code> определяет, какие файловые системы экспортируются на удаленные узлы, и определяет параметры. Для этого файла действуют следующие синтаксические правила:</p><ul><li>пустые строки игнорируются;</li><li>комментарии начинаются с символа решётки (#);</li><li>для продолжения записи на новой строке можно использовать символ обратной косой черты ();</li><li>каждая экспортируемая ФС должна находиться на отдельной строке;</li><li>списки авторизованных узлов, размещаемые после экспортированной файловой системы, должны быть разделены пробелами;</li><li>параметры для каждого из узлов должны быть помещены в скобки непосредственно после идентификатора узла, без пробелов, разделяющих узел и первую скобку;</li><li>если название экспортируемого каталога содержит пробелы, его следует заключить в двойные кавычки.</li></ul><p>Каждая запись экспортированной файловой системы имеет следующую структуру:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> host(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Где:</p><ul><li>export — путь к экспортируемому каталогу;</li><li>host — узел или сеть, в которую передается экспорт;</li><li>options — параметры, которые будут использоваться для узла.</li></ul><p>Можно указать несколько узлов, а также конкретные параметры для каждого узла. Для этого следует перечислить их в одной строке в виде списка, разделённого пробелами, где за каждым именем узла следуют соответствующие параметры (в скобках), например:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/mysharedir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.100/24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">no_subtree_check,rw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">192.168.10.0/24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">no_subtree_check,ro</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Некоторые опции:</p><ul><li><code>rw/ro</code> — установка разрешения доступа к ресурсу (чтение запись/только чтение);</li><li><code>no_subtree_check/subtree_check</code> — если экспортируется подкаталог файловой системы, но не вся файловая система, то с опцией <code>subtree_check</code> сервер, проверяет, находится ли запрошенный файл в экспортированном подкаталоге. Если экспортируется вся файловая система, запрет проверки подкаталогов (<code>no_subtree_check</code>) может увеличить скорость передачи;</li><li><code>sync/async</code> — синхронный/асинхронный режим доступа. Опция <code>sync</code> указывает, что сервер должен отвечать на запросы только после записи на диск изменений, выполненных этими запросами. Опция <code>async</code> указывает серверу не ждать записи информации на диск, что повышает производительность, но понижает надежность;</li><li><code>wdelay/no_wdelay</code> — установка задержки записи на диск (установка задержки/отключение задержки, этот параметр не действует при включенной опции async);</li><li><code>hide/nohide</code> — не отображать/отображать нелокальные ресурсы (например, примонтированые с помощью <code>mount --bind</code>);</li><li><code>all_squash/no_all_squash</code> — подмена запросов от ВСЕХ пользователей на анонимного uid/gid (либо на пользователя, заданного в параметре <code>anonuid/anongid</code>) запрет подмены uid/gid;</li><li><code>anonuid=UID</code> и <code>anongid=GID</code> — (явная) установка UID/GID для анонимного пользователя (может быть полезно, если какой либо каталог экспортируется для конкретного пользователя, заведенного в системе).</li></ul><blockquote><p><strong>Примечание:</strong> Единственный параметр, который следует обязательно указать — это <code>no_subtree_check</code> или \`\`subtree_check\`.</p></blockquote><p>Имя узла (узлов) может задаваться в следующей форме:</p><ul><li>один узел — FQDN-имя (которое сможет разрешить сервер), имя узла (которое сможет разрешить сервер) или IP-адрес;</li><li>IP-сеть — используется запись вида a.b.c.d/z, где a.b.c.d — адрес сети, а z — префикс. Также допускается формат a.b.c.d/netmask, где a.b.c.d — сеть, а netmask — маска сети (например, 192.168.100.8/255.255.255.0);</li><li>набор узлов — узлы определяются знаками подстановки (символ * или ?) или могут содержать списки классов символов в [квадратных скобках]. Знаки подстановки не должны использоваться в IP-адресах;</li><li>сетевые группы — задаются в виде @group-name, где group-name — имя сетевой группы NIS;</li><li>анонимный узел — задается одним символом * и будет соответствовать всем клиентам.</li></ul><p>Для применения изменений, внесённых в файл <code>/etc/exports</code> необходимо выполнить команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exportfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ra</span></span></code></pre></div><p>или перезапустить NFS-сервер:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs</span></span></code></pre></div><h4 id="запуск-nfs-под-systemd" tabindex="-1">Запуск NFS под <a href="https://www.altlinux.org/Systemd" title="Systemd" target="_blank" rel="noreferrer">systemd</a> <a class="header-anchor" href="#запуск-nfs-под-systemd" aria-label="Permalink to &quot;Запуск NFS под [systemd](https://www.altlinux.org/Systemd &quot;Systemd&quot;)&quot;">​</a></h4><p>Запустить NFS-сервер и включить его по умолчанию:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs.service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs.service</span></span></code></pre></div><p>Если все команды прошли успешно и не выдавали ошибок, то сервер можно считать работающим. Дополнительно можно запустить команду <code>exportfs</code>, которая выведет текущие настройки на данный момент. В случае нормальной работы она должна вывести на экран записи из файла <code>/etc/exports</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exportfs</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         	192.168.0.0/24</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/exports</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      	192.168.0.0/24</span></span></code></pre></div><h2 id="использование-nfs" tabindex="-1">Использование NFS <a class="header-anchor" href="#использование-nfs" aria-label="Permalink to &quot;Использование NFS&quot;">​</a></h2><p>Подключение к NFS-серверу можно производить вручную, а можно настроить автоматическое подключение при загрузке.</p><h3 id="монтирование-nfs-ресурса" tabindex="-1">Монтирование NFS-ресурса <a class="header-anchor" href="#монтирование-nfs-ресурса" aria-label="Permalink to &quot;Монтирование NFS-ресурса&quot;">​</a></h3><p>Команда монтирования:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">опци</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">и</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">серве</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">р</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/remote/export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /local/directory</span></span></code></pre></div><p>Где:</p><ul><li>&lt;опции&gt; — разделённый запятыми список опций;</li><li>&lt;сервер&gt; — IP-адрес или имя NFS-сервера;</li></ul><p><code>/remote/export</code> — каталог, экспортируемый с сервера (каталог, который будет примонтирован); /local/directory — локальный каталог (каталог, в который будет примонтирован каталог, экспортируемый с сервера).</p><p>Список доступных ресурсов можно проверить, выполнив команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showmount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.199</span></span></code></pre></div><blockquote><p><strong>Примечание:</strong> При запуске данной команды можно получить ошибку:</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showmount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.199</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clnt_create:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RPC:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Unable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> receive</span></span></code></pre></div><p>Это может происходить потому что по умолчанию <code>rpcbind</code> слушает только локальные запросы:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -tnlup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpcbind</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># udp   UNCONN 0      0          127.0.0.1:111        0.0.0.0:*    users:((&quot;rpcbind&quot;,pid=4248,fd=6))      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># udp   UNCONN 0      0              [::1]:111           [::]:*    users:((&quot;rpcbind&quot;,pid=4248,fd=8))      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcp   LISTEN 0      4096       127.0.0.1:111        0.0.0.0:*    users:((&quot;rpcbind&quot;,pid=4248,fd=7))      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcp   LISTEN 0      4096           [::1]:111           [::]:*    users:((&quot;rpcbind&quot;,pid=4248,fd=9))</span></span></code></pre></div><p>Разрешить <code>rpcbind</code> прослушивать входящие соединения из сети:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpcbind</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpcbind.service</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -tnlup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpcbind</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># udp   UNCONN 0      0            0.0.0.0:111        0.0.0.0:*    users:((&quot;rpcbind&quot;,pid=4130,fd=6))      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># udp   UNCONN 0      0               [::]:111           [::]:*    users:((&quot;rpcbind&quot;,pid=4130,fd=8))      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcp   LISTEN 0      4096         0.0.0.0:111        0.0.0.0:*    users:((&quot;rpcbind&quot;,pid=4130,fd=7))      </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcp   LISTEN 0      4096            [::]:111           [::]:*    users:((&quot;rpcbind&quot;,pid=4130,fd=9))</span></span></code></pre></div><p>Пример команды монтирования (каталог /mnt/nf должен существовать:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfsvers=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  192.168.0.199:/home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/nfs</span></span></code></pre></div><p>Для проверки успешности монтирования можно использовать команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 192.168.0.199:/home on /mnt/nfs type nfs4 (rw,relatime,vers=4.2,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.0.177,local_lock=none,addr=192.168.0.199)</span></span></code></pre></div><p>Команда выдаст строку (строки) с информацией о примонтированном ресурсе (ресурсах).</p><h3 id="монтирование-с-записью-в-fstab" tabindex="-1">Монтирование с записью в fstab <a class="header-anchor" href="#монтирование-с-записью-в-fstab" aria-label="Permalink to &quot;Монтирование с записью в fstab&quot;">​</a></h3><p>Для автоматического монтирования к NFS-серверу при загрузке необходимо добавить следующую строку в файл <code>/etc/fstab</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">192.168.0.199:/home</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  /mnt/nfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   nfs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   intr,soft,nolock,_netdev,x-systemd.automount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span></code></pre></div><p>где:</p><ul><li>intr — позволяет прервать процесс при необходимости;</li><li>soft — предотвращает от зависания в случае недоступности удалённой машины.</li></ul><p>Кроме того, стоит убедиться, что сервис <code>netfs</code> запускается при старте системы.</p><p>Прежде чем изменять <code>/etc/fstab</code>, попробуйте смонтировать вручную и убедитесь, что всё работает.</p><h3 id="автомонтирование" tabindex="-1">Автомонтирование <a class="header-anchor" href="#автомонтирование" aria-label="Permalink to &quot;Автомонтирование&quot;">​</a></h3><p>Осуществляется при помощи <code>automount</code>, <code>autofs</code> или <code>subfs</code>.</p><h4 id="autofs" tabindex="-1">autofs <a class="header-anchor" href="#autofs" aria-label="Permalink to &quot;autofs&quot;">​</a></h4><p>Данный способ монтирования позволяет автоматически монтировать папку после обращения к ней в ФМ (к примеру, через закладки) или в терминале и автоматически отмонтировать при отсутствии активности. Для реализации данного способа необходимо:</p><ol><li>Установить пакет <a href="https://packages.altlinux.org/ru/sisyphus/autofs" target="_blank" rel="noreferrer">autofs</a> (если он ещё не установлен):<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div></li></ol><p>apt-get install autofs \`\`\`</p><ol start="2"><li>Для настройки autofs в файл <code>/etc/auto.master</code> необходимо добавить строку:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div></li></ol><p>/mnt/nfs /etc/auto.nfs -t 60 -browse \`\`\`</p><p>Здесь <code>/mnt/nfs</code> — каталог, в котором будут подключаться сетевые файловые системы; <code>/etc/auto.nfs</code> — файл конфигурации или скрипт (определяется правами на исполнение указанного файла); <code>60</code> — таймаут (в секундах) подключения при отсутствии обращения; <code>browse</code> — создать пустой каталог для точки монтирования, чтобы предотвратить тайм-ауты, если к сетевому ресурсу невозможно подключиться.</p><ol start="3"><li>Создать каталог <code>/mnt/nfs</code>:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span></code></pre></div></li></ol><p>mkdir /mnt/nfs</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> </span></span>
<span class="line"><span>4. Создать файл \`/etc/auto.nfs\`, в который добавить строку:</span></span>
<span class="line"><span> \`\`\`bash</span></span>
<span class="line"><span>public1  -fstype=nfs,rw 192.168.0.199:/home/</span></span>
<span class="line"><span> \`\`\`</span></span>
<span class="line"><span> </span></span>
<span class="line"><span> где:</span></span>
<span class="line"><span> - \`-rw,soft,intr,rsize=8192,wsize=8192\` – параметры монтирования;</span></span>
<span class="line"><span> - \`public1\` – каталог, который будет создаваться в каталоге /mnt/nfs при монтировании;</span></span>
<span class="line"><span> - \`192.168.0.199:/home/\`– IP-адрес и общая папка сервера.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt;**Примечание:** Подключаемый ресурс должен присутствовать в выводе команды:</span></span>
<span class="line"><span>\`\`\`bash</span></span>
<span class="line"><span>showmount -e 192.168.0.199</span></span></code></pre></div><h4 id="autofs-avahi" tabindex="-1">autofs + avahi <a class="header-anchor" href="#autofs-avahi" aria-label="Permalink to &quot;autofs + avahi&quot;">​</a></h4><p>Использование avahi. Установите пакет <code>avahi-service-nfs</code> или вручную создайте на сервере файл <code>/etc/avahi/services/nfs.service</code>, используется <code>nfs4</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xml version</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> standalone</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;no&#39;?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DOCTYPE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service-group</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SYSTEM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;avahi-service.dtd&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">service-group</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name replace-wildcards</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yes&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">%h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">service</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_nfs._tcp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/type&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2049</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/port&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/service</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/service-group</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>и запустите на сервере nfs сервис <code>avahi-daemon</code>. Проверьте с машин-клиентов, что сервер nfs виден с этих машин с помощью команды:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">avahi-browse</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -tkrp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _nfs._tcp</span></span></code></pre></div><p>Установите на машины-клиенты <code>autofs</code>. С настройками по умолчанию, ресурсы nfs будут монтироваться как <code>/mnt/net/servername/netshare</code>.</p><p>Для домашней локальной сети, когда nfs раздается не с сервера, а с другой рабочей станции, которую могут выключить в любой момент, рекомендуется прописывать у клиентов в <code>/etc/sysconfig/autofs timeout</code> поменьше (например, 5 сек):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">OPTIONS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-t5&quot;</span></span></code></pre></div><h4 id="systemd" tabindex="-1">systemd <a class="header-anchor" href="#systemd" aria-label="Permalink to &quot;systemd&quot;">​</a></h4><p>Есть возможность использовать systemd, чтобы выполнять авто-монтирование конкретного ресурса при загрузке. Этот вариант имеет одно преимущество по сравнению с монтированием через <code>fstab</code>: если NFS-сервер по какой-либо причине будет недоступен, то клиент всё равно загрузится без ошибок.</p><p>Создаём на клиенте файл <code>/lib/systemd/system/nfs-shared.service</code> следующего содержания:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Mount</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> NFS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Requires</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">network-online.target</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">network-online.target</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">oneshot</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RemainAfterExit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin/mount</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 192.168.1.1:/home/data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/shared</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fsc,hard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecStop</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin/umount</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> /mnt/shared</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TimeoutStopSec</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">WantedBy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">multi-user.target</span></span></code></pre></div><p>Не забываем создать каталог, в которую будет смонтирован NFS-ресурс:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/shared</span></span></code></pre></div><p>После этого включаем сервис в автозагрузку и запускаем его:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs-shared</span></span></code></pre></div><h1 id="протокол-ftp" tabindex="-1">Протокол ftp <a class="header-anchor" href="#протокол-ftp" aria-label="Permalink to &quot;Протокол ftp&quot;">​</a></h1><h2 id="настроика-ftp" tabindex="-1">Настройка FTP <a class="header-anchor" href="#настроика-ftp" aria-label="Permalink to &quot;Настройка FTP&quot;">​</a></h2><ul><li>Установить пакеты: <ul><li>vsftpd</li><li>anonftp</li></ul></li><li>Сделать изменения в файле <code>/etc/xinetd.d/vsftpd</code></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">disable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      #включает сервис</span></span></code></pre></div><ul><li>Проверить глобальные настройки <code>xinetd</code> в файле <code>/etc/xinetd.conf</code>, обратить внимание - необходимо написать либо сеть, либо адреса, у которых будет доступ к серверу:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">only_from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.0</span></span></code></pre></div><ul><li>Перезапустить сервис</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xinetd</span></span></code></pre></div><ul><li>Проверить, что нужное приложение (в данном случае xinetd) слушает порт:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ss</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -tlpn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;LISTEN.*:21&quot;</span></span></code></pre></div><p>Настройка межсетевого экрана для FTP, правила <code>iptables</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$IPTABLES -A INPUT -p tcp --dport 21 -j ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$IPTABLES -A INPUT --match state --state RELATED,ESTABLISHED -j ACCEPT</span></span></code></pre></div><p>Облегчающий жизнь модуль ядра (разрешает RELATED): Прописывается в <code>/etc/net/ifaces/default/fw/iptables/modules</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modprobe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ip_conntrack_ftp</span></span></code></pre></div><h1 id="протокол-iscsi" tabindex="-1">Протокол iSCSI <a class="header-anchor" href="#протокол-iscsi" aria-label="Permalink to &quot;Протокол iSCSI&quot;">​</a></h1><p><a href="https://www.opennet.ru/base/sys/iscsi_fedora.txt.html" target="_blank" rel="noreferrer">https://www.opennet.ru/base/sys/iscsi_fedora.txt.html</a></p><p>Для тестов используем две машины: vm01, которая будет экспортировать раздел <code>/dev/xvda5</code>, и vm02, на которой настроим инициатор.</p><h2 id="настроика-iscsi-target" tabindex="-1">Настройка iSCSI Target <a class="header-anchor" href="#настроика-iscsi-target" aria-label="Permalink to &quot;Настройка iSCSI Target&quot;">​</a></h2><p>Для начала устанавливаем пакет <code>scsi-target-utils</code> и запускаем демон <code>tgtd</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scsi-target-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tgt</span></span></code></pre></div><p>Теперь создаем наше целевое устройство. В качестве имени я выбрал <code>share.server:disk1</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tgtadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --op</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share.server:disk1</span></span></code></pre></div><p>В моем случае я добавляю к целевому устройству новый раздел <code>/dev/xvda5</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tgtadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --op</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logicalunit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lun</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/xvda5</span></span></code></pre></div><p>Теперь разрешим доступ хосту vm02 с IP-адресом 192.168.0.109:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tgtadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --op</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bind</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --tid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.0.109</span></span></code></pre></div><p>Проверяем:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tgtadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --op</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> target</span></span></code></pre></div><p>Под конец не забудьте прорубить &quot;дырку&quot; в брандмауэре для порта 3260/tcp, который используется по умолчанию.</p><h2 id="настроика-iscsi-initiator" tabindex="-1">Настройка iSCSI Initiator <a class="header-anchor" href="#настроика-iscsi-initiator" aria-label="Permalink to &quot;Настройка iSCSI Initiator&quot;">​</a></h2><p>Устанавливаем пакет <code>iscsi-initiator-utils</code> и запускаем демон <code>iscsi</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi-initiator-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iscsi</span></span></code></pre></div><p>При запуске мы получаем совершенно справедливое сообщение, что не сконфигурирована ни одна из целей. Запускаем процесс обзора для поиска целей на хосте vm01 c IP-адресом 192.168.0.100:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iscsiadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> discovery</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sendtargets</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.100:3260</span></span></code></pre></div><p>В итоге будут созданы две поддиректории с информацией о цели и хосте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/iscsi/nodes/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># share.server:disk1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/iscsi/send_targets/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 192.168.0.100,3260</span></span></code></pre></div><p>Просмотреть информацию можно командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iscsiadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share.server:disk1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.100:3260</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># node.name = share.server:disk1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># node.tpgt = 1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#   ...</span></span></code></pre></div><p>Теперь, используя содержимое <code>/var/lib/iscsi/nodes/</code> и <code>/var/lib/iscsi/send_targets/</code>, демон <code>iscsi</code> при каждом перезапуске будет подключать наши ранее обнаруженные цели.</p><p>Также процессом подключения/отключения можно управлять при помощи утилиты <code>iscsiadm</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iscsiadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share.server:disk1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.100:3260</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Login session [iface: default, target: share.server:disk1, portal:  192.168.0.100,3260]</span></span></code></pre></div><p>Теперь команда <code>fdisk</code> покажет наш раздел <code>/dev/sda</code>, экспортированный с vm01:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disk /dev/xvda: 17.1 GB, 17179869184 bytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 255 heads, 63 sectors/track, 2088 cylinders</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Units = cylinders of 16065 * 512 = 8225280 bytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disk /dev/sda: 1011 MB, 1011677184 bytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 32 heads, 61 sectors/track, 1012 cylinders</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Units = cylinders of 1952 * 512 = 999424 bytes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Disk /dev/sda doesn&#39;t contain a valid partition table</span></span></code></pre></div><p>После команды</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iscsiadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share.server:disk1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.100:3260</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Logout session [sid: 2, target: share.server:disk1, portal: 192.168.0.100,3260]</span></span></code></pre></div><p>в выводе <code>fdisk</code> мы увидим только <code>/dev/xvda</code>. Однако, после рестарта демона <code>iscsi</code>, цель снова появиться в списке устройств. Для удаления всей информации о цели воспользуйтесь командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iscsiadm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> share.server:disk1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.0.100:3260</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/iscsi/nodes/</span></span></code></pre></div><p>Если у вас несколько целей, то вы не можете заранее знать, под каким именем после следующей перезагрузки/рестарта сервиса будет доступна конкретная цель. Для того, чтобы каждая цель всегда была доступна под одним и тем же именем устройства, вы можете написать соответствующее правило udev или воспользоваться монтированием по метке и UUID файловой системы. При монтировании файловых систем не забывайте использовать опцию <code>netdev</code>.</p>`,178)]))}const y=a(h,[["render",p]]);export{g as __pageData,y as default};
