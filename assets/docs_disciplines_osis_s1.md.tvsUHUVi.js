import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.D4Vqf8I7.js";const r=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/disciplines/osis/s1.md","filePath":"docs/disciplines/osis/s1.md","lastUpdated":1756288334000}'),p={name:"docs/disciplines/osis/s1.md"};function d(h,s,c,n,l,o){return e(),a("div",null,s[0]||(s[0]=[t('<h3 id="_1-установка-arch-linux" tabindex="-1">1. Установка Arch Linux <a class="header-anchor" href="#_1-установка-arch-linux" aria-label="Permalink to &quot;1. Установка Arch Linux&quot;">​</a></h3><p>Раздел:<br> Тема:<br> Количество часов: 2<br> Задачи:<br> Порядок выполнения работы:</p><p>Данная самостаятельная работа является руководством по установке Arch Linux с помощью системы, загруженной с официальным установочным образом.</p><p>Более подробные инструкции приведены в соответствующих статьях ArchWiki и на страницах справочных руководств (man) различных программ. Также вы можете получить помощь в IRC-канале и на англоязычном и русскоязычном форумах Arch Linux.</p><p>Arch Linux способен работать на любой x86_64-совместимой машине, имеющей хотя бы 512 МиБ ОЗУ, однако понадобится больше памяти для загрузки live-системы. Базовая установка занимает меньше 2 ГиБ дискового пространства. Поскольку для процесса установки требуется получать пакеты из удалённого репозитория, необходимо работающее интернет-соединение.</p><h1>Разметка дисков</h1><p>Когда запущенная система распознает накопители, они становятся доступны как блочные устройства, например, <code>/dev/sda</code>, <code>/dev/nvme0n1</code> или <code>/dev/mmcblk0</code>. Чтобы посмотреть их список, используйте <code>lsblk</code> или <code>fdisk</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre></div><p>Результаты, оканчивающиеся на <code>rom</code>, <code>loop</code> и <code>airoot</code>, можно игнорировать.</p><p>Необходимо выбрать блочное устройство на которое планируется установка системы.</p><p>Используйте <code>fdisk</code> чтобы разметить диск:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/диск_для_разметки</span></span></code></pre></div><p>Создайте два раздела: основной раздел системы и SWAP раздел</p><h1>Форматирование разделов</h1><p>Когда новые разделы созданы, каждый из них необходимо отформатировать в подходящую файловую систему.</p><p>Например, чтобы отформатировать <code>/dev/корневой_раздел</code> в Ext4, выполните следующую команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkfs.ext4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/корневой_раздел</span></span></code></pre></div><p>Если вы создали раздел для подкачки (swap), инициализируйте его с помощью утилиты <code>mkswap</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkswap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/раздел_подкачки</span></span></code></pre></div><h1>Монтирование разделов</h1><p>Смонтируйте корневой раздел в каталог <code>/mnt</code>. Например, если корневой раздел — <code>/dev/корневой_раздел</code>, выполните следующую команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/корневой_раздел</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre></div><p>Создайте точки монтирования для всех остальных разделов (например, <code>/mnt/efi</code>) и примонтируйте соответствующие разделы.</p><div class="tip custom-block"><p class="custom-block-title">Совет</p><p>Команда <code>mount</code>, запущенная с опцией <code>--mkdir</code>, автоматически создаст требуемую точку монтирования. Можно создать их и вручную с помощью <code>mkdir</code>.</p></div><p>Если вы ранее создали раздел подкачки (swap), активируйте его с помощью <code>swapon</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swapon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/раздел_подкачки</span></span></code></pre></div><p>В дальнейшем <code>genfstab</code> обнаружит смонтированные файловые системы и пространство подкачки.</p><h1>Установка</h1><h2>Выбор зеркал</h2><p>Пакеты для установки должны скачиваться с серверов-зеркал, прописанных в файле <code>/etc/pacman.d/mirrorlist</code>. В установочном образе, после подключения к сети, <code>reflector</code> обновит список зеркал (выбрав 20 наиболее актуальных HTTPS-зеркал) и отсортирует их по скорости загрузки.</p><p>Чем выше зеркало расположено в списке, тем больший приоритет оно имеет при скачивании пакета. Вы можете проверить этот файл и, при необходимости, отредактировать его вручную, переместив наверх наиболее географически близкие зеркала. При этом также учитывайте и другие критерии.</p><p>Позже <code>pacstrap</code> скопирует этот файл в новую систему, так что это действительно стоит сделать. Установка основных пакетов</p><h1>Установка пакетов</h1><p>Используйте скрипт <code>pacstrap</code>, чтобы установить пакет <code>base</code>, ядро <code>Linux</code> и прошивки часто встречающихся устройств:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacstrap</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -K</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux-firmware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dhcpcd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Совет</p><p>В случае проблем с pgp key используйте:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Sy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> archlinux-keyring</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title">Совет</p><p><code>linux</code> можно заменить на другой желаемый пакет ядра. Можно вообще не устанавливать ядро, если установка происходит в контейнере.</p><p>Можно пропустить установку пакета прошивок, если установка происходит в контейнере или виртуальной машине.</p><p>Пакет <code>base</code> содержит не все инструменты, имеющиеся на установочном носителе, из-за чего может потребоваться установка дополнительных пакетов для получения полностью функциональной базовой системы. В частности, вам могут пригодиться следующие программы:</p><ul><li>утилиты для управления файловыми системами в пользовательском пространстве, которые будут использоваться в системе,</li><li>утилиты для доступа к RAID- или LVM-разделам,</li><li>специфические прошивки других устройств, не включённые в <code>linux-firmware</code> (например, <code>sof-firmware</code> для некоторых звуковых карт),</li><li>ПО, необходимое для организации сети (например, менеджер сети или DHCP-клиент),</li><li>текстовый редактор,</li><li>пакеты для доступа к документации в <code>man</code> и <code>info</code>: <code>man-db</code>, <code>man-pages</code> и <code>texinfo</code>.</li></ul><p>Чтобы установить другие пакеты или группы, добавьте их названия к команде pacstrap (разделяя их пробелом) или используйте pacman во время этапа #Chroot. Список пакетов, присутствующих в установочном образе, доступен на странице <code>pkglist.x86_64.txt</code>.</p></div><h1>Настройка системы</h1><h2>Fstab</h2><p>Сгенерируйте файл <code>fstab</code> (используйте ключ <code>-U</code> или <code>-L</code>, чтобы для идентификации разделов использовались UUID или метки, соответственно):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">genfstab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt/etc/fstab</span></span></code></pre></div><p>После этого проверьте файл <code>/mnt/etc/fstab</code> и отредактируйте его в случае необходимости.</p><h2>Chroot</h2><p>Перейдите к корневому каталогу новой системы:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arch-chroot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre></div><h2>Часовой пояс</h2><p>Задайте часовой пояс:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/zoneinfo/Регион/Город</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/localtime</span></span></code></pre></div><p>Запустите <code>hwclock</code>, чтобы сгенерировать <code>/etc/adjtime</code>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hwclock</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --systohc</span></span></code></pre></div><p>Эта команда предполагает, что аппаратные часы настроены в формате UTC.</p><h2>Пароль суперпользователя</h2><p>Установите пароль суперпользователя:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">passwd</span></span></code></pre></div><h1>Загрузчик GRUB2</h1><h2>Установка пакета</h2><p>Файлы и утилиты для установки GRUB2 содержатся в пакете <code>grub</code>, и устанавливаются командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grub</span></span></code></pre></div><h1>Установка загрузчика</h1><h2>Установка BIOS-версии загрузчика</h2><p>Для установки GRUB2 нужно выполнить команду от root:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grub-install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda</span></span></code></pre></div><ul><li>где <code>/dev/sda</code> это устройство <em><strong>(не раздел!)</strong></em> для установки загрузочных образов GRUB. Файлы загрузчика будут установлены в каталог <code>/boot</code>. Код GRUB (<code>boot.img</code>) будет встроен в начальный сектор, а загрузочный образ <code>core.img</code> – в просвет перед первым разделом MBR, или BIOS boot partition для GPT.</li></ul><p>Если при выполнении команды происходит ошибка, попробуйте добавить <code>--recheck</code> в аргументы как показано ниже:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grub-install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --recheck</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/sda</span></span></code></pre></div><h2>После установки</h2><p>В настоящее время GRUB2, сразу после установки, готов к работе только в режиме консоли. (Это будет продолжаться до тех пор, пока мейнтейнеры пакета &quot;grub&quot; не заменят бессмысленный дефолтный файл конфигурации загрузчика на рабочую статическую или автоматически генерируемую версию.)</p><p>Чтобы получить при загрузке действующее меню GRUB2, требуется заменить файл <code>grub.cfg</code> самостоятельно.</p><h2>Генерация конфига</h2><p>Команда <code>grub-mkconfig</code> может быть использована для генерации файла <code>grub.cfg</code>.</p><p>Для автоматического обнаружения ОС отличных от Linux установите пакет <code>os-prober</code>. Если после установки пакета <code>os-prober</code> автоматическое обнаружение не работает должным образом, то может потребоваться установка пакета <code>hwinfo</code>. Чтобы применить изменения, запустите команду:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grub-mkconfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /boot/grub/grub.cfg</span></span></code></pre></div><p>Она не только создаст файл <code>/boot/grub/grub.cfg</code>, но и проверит конфигурацию на наличие ошибок.</p><div class="warning custom-block"><p class="custom-block-title">Важно</p><p>Если вы запускаете конфигуратор при установке Arch Linux, убедитесь, что вы делаете это внутри <code>arch-chroot</code>, иначе программа будет читать и записывать файлы конфигурации текущей, а не устанавливаемой системы.</p></div><h1>Перезагрузка</h1><p>Выйдите из окружения chroot, набрав <code>exit</code> или нажав <code>Ctrl+d</code>.</p><p>Вы можете размонтировать все разделы с помощью команды:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">umount</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -R</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mnt</span></span></code></pre></div><p>Теперь перезагрузите компьютер, набрав <code>reboot</code>: если какие-нибудь разделы остались смонтированными, <code>systemd</code> их размонтирует. Не забудьте извлечь установочный носитель. После загрузки войдите в систему в качестве суперпользователя.</p>',79)]))}const g=i(p,[["render",d]]);export{r as __pageData,g as default};
