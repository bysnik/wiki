import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.D4Vqf8I7.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/altsp/49.imaevm.md","filePath":"docs/wi/altsp/49.imaevm.md","lastUpdated":1755788837000}'),n={name:"docs/wi/altsp/49.imaevm.md"};function l(h,s,p,k,d,r){return e(),a("div",null,s[0]||(s[0]=[t(`<p>Подсистема контроля целостности операционной системы должна поддерживать технологии IMA и EVM.</p><hr><p><a href="https://www.altlinux.org/IMA_EVM" target="_blank" rel="noreferrer">https://www.altlinux.org/IMA_EVM</a> [[ЛКНВ.11100-01 99 03 Руководство по комплексу средств защиты.pdf]], стр 122-129</p><p>==Поднят стенд: IMA EVM==</p><ol><li>Изменить параметры монтирования файловой системы. Для этого следует выставить параметр <code>iversion</code> на всех записях в файле <code>/etc/fstab</code> относящихся к местам, где могут быть исполняемые файлы</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/fstab</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># UUID=c7834d14-d0f0-4d70-94f5-f1ce09fda00c / ext4 relatime,iversion 1 1 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># UUID=16b090bf-8b7a-4e69-8df6-6a4374f3d550 /home ext4 noexec,nosuid,relatime,iversion 1 2</span></span></code></pre></div><ol start="2"><li><p>Настроить контроль целостности. Желаемый алгоритм хеширования (SHA или ГОСТ) можно выбрать в файле <code>/etc/integrity/config</code>. Там же можно включить EVM в дополнение к IMA. Для изменения алгоритма хеширования необходимо изменить значение переменной <code>HASH_ALGO</code> в файле <code>/etc/integrity/config</code>, например, заменить <code>HASH_ALGO=&quot;sha512&quot;</code> на <code>HASH_ALGO=&quot;streebog512&quot;</code>. Если необходимо выполнить активацию EVM, то следует раскоментировать строку: <code>WITH_EVM=yes</code></p></li><li><p>Запустить инициализацию подсистем контроля целостности в автоматическом режиме:</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">integrity-applier</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --auto</span></span></code></pre></div><ol start="4"><li>После перезагрузки системы войти в систему и проверить параметры командной строки ядра:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /proc/cmdline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BOOT_IMAGE=/boot/vmlinuz root=UUID=19124d73-ad8b-4b83- ba28-350312a1b7f7 ro panic=30 init_on_free=1 loglevel=3 splash lsm=integrity quiet ima_hash=streebog512 ima_appraise=enforce</span></span></code></pre></div><p>В командной строке ядра должен присутствовать параметр <code>ima_appraise=enforce</code> – система находится в режиме оценки контроля целостности;</p><ol start="5"><li>Добавить в автозагрузку и включить службы:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> integrity-scanner.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> integrity-notifier.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ima-check.service</span></span></code></pre></div><ol start="6"><li>Проверить наличие маркировки у файла можно, выполнив команду (пример для <code>/usr/bin/less</code>):</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getfattr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/less</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/less</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> integrity-sign</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --stdin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verify</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-evm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">evmctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ima_verify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin/less</span></span></code></pre></div><p>Строка <code>security.ima=...</code> свидетельствует о том, что файл маркирован.</p><p>В журнале записи, связанные с нарушением целостности можно просмотреть командой:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INTEGRITY_DATA</span></span></code></pre></div><p>Есть конфиг /etc/integrity/config и в нём есть две переменные: LIBDIRS и EXECLIBDIR. Пусть заказчик настроит те пути, которые ему нужны. Можно задать несколько путей через пробел.</p><p>На всякий случай кусочек кода, чтобы было понятно:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /sbin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/sbin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $EXECLIBDIRS </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -executable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -print</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># all libraries which don&#39;t carry an executable bit</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#shellcheck disable=SC2086</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">find</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $LIBDIRS </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-\\!</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -executable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;*.so&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;*.so.*&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -print</span></span></code></pre></div><ul><li>Как я понимаю, параметры <code>--cert=</code> and <code>--key=</code> позволяют указать пользовательские ключи и сертификаты во время запуска второй стадии?</li></ul><p>Если запускаете с --auto, то да, нужно указать путь до сертификата и ключа и они автоматически подхватятся на второй стадии. Но если запускаете вторую стадию вручную, то тогда нужно прямо в этот момент и указать пути.</p><ul><li>А как тогда используется параметр <code>-B BASENAME | --basename=BASENAME</code> ?</li></ul><p>По умолчанию он равен &quot;x509&quot; и сертификат устанавливается под именем /etc/keys/x509_ima.der. Опция на тот случай, если у вас несколько сертификатов и все их нужно установить в /etc/keys/. То есть, когда часть файлов вы подписываете одним ключом, а часть — другим. Там же такая история, что сторонние поставщики ПО будут подписывать его своими ключами. Следовательно, доверенных ключей в ядре может быть несколько.</p>`,25)]))}const F=i(n,[["render",l]]);export{o as __pageData,F as default};
