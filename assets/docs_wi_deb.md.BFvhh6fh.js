import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.D4Vqf8I7.js";const r=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/wi/deb.md","filePath":"docs/wi/deb.md","lastUpdated":1761642429000}'),l={name:"docs/wi/deb.md"};function d(o,s,p,n,c,h){return e(),i("div",null,s[0]||(s[0]=[t('<h3 id="шаг-1-установите-необходимые-инструменты" tabindex="-1">Шаг 1. Установите необходимые инструменты <a class="header-anchor" href="#шаг-1-установите-необходимые-инструменты" aria-label="Permalink to &quot;Шаг 1. Установите необходимые инструменты&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alien</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rpm-build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dpkg</span></span></code></pre></div><h3 id="шаг-2-распакуите-deb-пакет" tabindex="-1">Шаг 2. Распакуйте <code>.deb</code>-пакет <a class="header-anchor" href="#шаг-2-распакуите-deb-пакет" aria-label="Permalink to &quot;Шаг 2. Распакуйте `.deb`-пакет&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mypackage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mypackage</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg-deb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../package.deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./data</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # файлы, устанавливаемые в систему</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg-deb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --control</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../package.deb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./DEBIAN</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # служебные файлы (control, postinst и т.д.)</span></span></code></pre></div><p>Теперь у вас есть:</p><ul><li><code>./data/</code> — дерево файлов (как в корне системы: <code>./data/usr/bin/...</code>)</li><li><code>./DEBIAN/control</code> — метаданные</li><li><code>./DEBIAN/postinst</code> и др. — скрипты</li></ul><h3 id="шаг-3-внесите-изменения" tabindex="-1">Шаг 3. Внесите изменения <a class="header-anchor" href="#шаг-3-внесите-изменения" aria-label="Permalink to &quot;Шаг 3. Внесите изменения&quot;">​</a></h3><ul><li>Отредактируйте файлы в <code>./data/</code> (например, замените пути, содержимое, добавьте/удалите файлы).</li><li>При необходимости отредактируйте скрипты: переименуйте или адаптируйте их под RPM: <ul><li><code>DEBIAN/postinst</code> → будет аналогом <code>%post</code></li><li><code>DEBIAN/prerm</code> → <code>%preun</code></li><li>и т.д.</li></ul></li></ul><blockquote><p>Скрипты Debian и RPM <strong>не полностью совместимы</strong> по синтаксису и переменным. Например, в RPM скрипты получают аргументы (<code>$1 = 0</code> при удалении, <code>1</code> при установке), в Debian — нет. Возможно, потребуется переписать логику.</p></blockquote><h3 id="шаг-4-соберите-измененныи-пакет-в-rpm" tabindex="-1">Шаг 4. Соберите изменённый пакет в RPM <a class="header-anchor" href="#шаг-4-соберите-измененныи-пакет-в-rpm" aria-label="Permalink to &quot;Шаг 4. Соберите изменённый пакет в RPM&quot;">​</a></h3><h4 id="вариант-a-через-alien" tabindex="-1">Вариант A: Через <code>alien</code> <a class="header-anchor" href="#вариант-a-через-alien" aria-label="Permalink to &quot;Вариант A: Через `alien`&quot;">​</a></h4><p>Сначала создайте <strong>новый <code>.deb</code></strong> из изменённых файлов:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dpkg-deb</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../package-modified.deb</span></span></code></pre></div><blockquote><p>Для этого нужно, чтобы <code>DEBIAN/control</code> был корректным. Если вы его меняли — проверьте поля <code>Package</code>, <code>Version</code>, <code>Architecture</code>.</p></blockquote><p>Теперь конвертируйте в RPM:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">alien</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --to-rpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --scripts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ../package-modified.deb</span></span></code></pre></div><p>Флаг <code>--scripts</code> сохраняет скрипты (<code>postinst</code> → <code>%post</code> и т.д.).</p><blockquote><p><code>alien</code> автоматически преобразует скрипты, но <strong>не всегда корректно</strong>. Проверьте итоговый <code>.spec</code> или поведение RPM.</p></blockquote><h4 id="вариант-b-вручную-через-rpmbuild-гибче-и-надежнее" tabindex="-1">Вариант B: Вручную через <code>rpmbuild</code> (гибче и надёжнее) <a class="header-anchor" href="#вариант-b-вручную-через-rpmbuild-гибче-и-надежнее" aria-label="Permalink to &quot;Вариант B: Вручную через `rpmbuild` (гибче и надёжнее)&quot;">​</a></h4><ol><li>Создайте структуру для <code>RPM</code>:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpmdev-setuptree</span></span></code></pre></div><ol start="2"><li><p>Создайте <code>.spec</code>-файл вручную или на основе метаданных из <code>DEBIAN/control</code>.</p></li><li><p>Положите изменённые файлы в архив (например, <code>mypackage.tar.gz</code>) и укажите его в <code>Source0</code>.</p></li><li><p>В <code>.spec</code> опишите:</p></li></ol><ul><li><code>%files</code> — пути из <code>data/</code></li><li><code>%post</code>, <code>%preun</code> — содержимое скриптов</li><li>зависимости из <code>control</code> → <code>Requires</code>, <code>BuildRequires</code></li></ul><ol start="5"><li>Соберите:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rpmbuild</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -bb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mypackage.spec</span></span></code></pre></div>',27)]))}const b=a(l,[["render",d]]);export{r as __pageData,b as default};
