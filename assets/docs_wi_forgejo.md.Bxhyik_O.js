import{_ as o,c as a,o as r,ag as t}from"./chunks/framework.D4Vqf8I7.js";const g=JSON.parse('{"title":"Forgejo","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/wi/forgejo.md","filePath":"docs/wi/forgejo.md","lastUpdated":1755856172000}'),s={name:"docs/wi/forgejo.md"};function i(l,e,c,d,p,n){return r(),a("div",null,e[0]||(e[0]=[t('<h1 id="forgejo" tabindex="-1">Forgejo <a class="header-anchor" href="#forgejo" aria-label="Permalink to &quot;Forgejo&quot;">​</a></h1><br><div align="center"><img src="https://static.wikia.nocookie.net/logopedia/images/2/28/Forgejo.svg" width="300" alt="Forgejo Logo"></div><p>Forgejo — это свободная и открытая платформа для хостинга Git-репозиториев, созданная как дружелюбный <strong>форк проекта <a href="./gitea.html">Gitea</a></strong> в ответ на изменения в его управлении. Она предоставляет все ключевые функции для совместной разработки: управление репозиториями, отслеживание задач (issues), pull requests, встроенный CI/CD, вики, а также инструменты для управления проектами и командами.</p><p><a href="https://packages.altlinux.org/ru/sisyphus/srpms/forgejo/" target="_blank" rel="noreferrer">https://packages.altlinux.org/ru/sisyphus/srpms/forgejo/</a></p><p><a href="https://docs.altlinux.space/" target="_blank" rel="noreferrer">https://docs.altlinux.space/</a></p><p><a href="https://code.forgejo.org/forgejo/runner/releases/" target="_blank" rel="noreferrer">Ссылка на раннер</a></p><h2 id="установка-forgejo" tabindex="-1">Установка Forgejo <a class="header-anchor" href="#установка-forgejo" aria-label="Permalink to &quot;Установка Forgejo&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> forgejo</span></span></code></pre></div><p>Остальные этапы установки производятся абсолютно также, как и при установке <a href="./gitea.html">Gitea</a>, единственное отличие, это расположение файла <code>app.ini</code>: <code>/etc/forgejo/app.ini</code></p><h2 id="фишки-из-документации-которые-не-описаны-в-gitea" tabindex="-1">Фишки из документации, которые не описаны в Gitea <a class="header-anchor" href="#фишки-из-документации-которые-не-описаны-в-gitea" aria-label="Permalink to &quot;Фишки из документации, которые не описаны в Gitea&quot;">​</a></h2><h3 id="lxc" tabindex="-1">LXC <a class="header-anchor" href="#lxc" aria-label="Permalink to &quot;LXC&quot;">​</a></h3><p>Если указывается <code>lxc</code> как <code>label type</code>, то остальная ее часть интерпретируется как <code>template[:release[:lxc-helper config]]</code>где:</p><p><code>template[:release]</code> — это шаблон и версия для использования. <code>lxc-helper config</code> — это значение параметра <code>—config lxc-helper</code>, используемого при создании контейнера.</p><p>Исполнитель выполнит все шаги от имени root в контейнере LXC, созданном на основе этого шаблона и выпуска. Шаблон по умолчанию — debian, а выпуск по умолчанию — bullseye. Установлен <code>nodejs</code> версии 20.</p><p>Примеры лейблов:</p><p><code>bookworm:lxc://debian:bookworm:lxc docker</code> Определяется bookworm как контейнер LXC, работающий под управлением Debian GNU/Linux Bookworm. Он обладает необходимыми возможностями для запуска вложенного контейнера LXC и движка Docker.</p><p><code>bookworm:lxc://debian:bookworm</code> Определяется bookworm как контейнер LXC, работающий под управлением Debian GNU/Linux Bookworm. Он обладает необходимыми возможностями для запуска вложенного контейнера LXC, виртуальных машин KVM и движка Docker.</p><h3 id="host" tabindex="-1">HOST <a class="header-anchor" href="#host" aria-label="Permalink to &quot;HOST&quot;">​</a></h3><p>Если указывается <code>host</code> в качестве <code>label type</code>, то исполнитель выполнит все шаги в оболочке, ответвленной от исполнителя, непосредственно на хосте.</p><p>Внимание: никакой изоляции не существует, и одно задание может навсегда уничтожить хост.</p><p>Пример этикетки:</p><p><code>self-hosted:host</code> определяет <code>self-hosted</code> быть оболочкой.</p><h3 id="специальные-labels" tabindex="-1">Специальные labels <a class="header-anchor" href="#специальные-labels" aria-label="Permalink to &quot;Специальные labels&quot;">​</a></h3><p>Метки раннера также можно использовать для определения других специальных функций. Например, можно использовать <code>gpu:docker://node:20-bullseye</code> для определения бегуна с установленным графическим процессором. Рабочие процессы, которым требуется графический процессор, можно затем указать <code>runs-on: gpu</code> для выполнения на этом бегуне.</p>',25)]))}const b=o(s,[["render",i]]);export{g as __pageData,b as default};
